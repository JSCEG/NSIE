@{
    ViewData["Title"] = "Hidrocarburos | Gas Natural";
}

<div class="text-center ">
    <h1 class="display-4 titulo fw-bold ">@ViewData["Title"]</h1>
</div>




<div id="map" style="height: 500px;"></div>



<div class="container">
    <div class="row d-flex justify-content-center">
        <div class="col ">
            <button class="btn btn-cre-rojo" data-bs-toggle="offcanvas" data-bs-target="#ejemploOffcanvas">
               <i class="bi bi-info-circle-fill"></i> - Ver Información Acerca de este Mapa
            </button>
          
        </div>
        <div class="col ">
            <select id="estado" class="form-select  " aria-label=".form-select-sm ">
                <option selected>
                    Selecciona un estado:
                </option>
                <option value="ags">Aguascalientes</option>
                <option value="bc">Baja California</option>
                <option value="bcs">Baja California Sur</option>
                <option value="camp">Campeche</option>
                <option value="coah">Coahuila</option>
                <option value="col">Colima</option>
                <option value="chis">Chiapas</option>
                <option value="chih">Chihuahua</option>
                <option value="cdmx">Ciudad de México</option>
                <option value="dgo">Durango</option>
                <option value="gto">Guanajuato</option>
                <option value="gro">Guerrero</option>
                <option value="hgo">Hidalgo</option>
                <option value="jal">Jalisco</option>
                <option value="mex">México</option>
                <option value="mich">Michoacán</option>
                <option value="mor">Morelos</option>
                <option value="nay">Nayarit</option>
                <option value="nl">Nuevo León</option>
                <option value="oax">Oaxaca</option>
                <option value="pue">Puebla</option>
                <option value="qro">Querétaro</option>
                <option value="qroo">Quintana Roo</option>
                <option value="slp">San Luis Potosí</option>
                <option value="sin">Sinaloa</option>
                <option value="son">Sonora</option>
                <option value="tab">Tabasco</option>
                <option value="tamps">Tamaulipas</option>
                <option value="tlax">Tlaxcala</option>
                <option value="ver">Veracruz</option>
                <option value="yuc">Yucatán</option>
                <option value="zac">Zacatecas</option>
            </select>
        </div>

        <partial name="_Infomapas_PGN"/>

    </div>
</div>
<hr />


  <hr />

<script src="~/Mapas/Públicos/SEM/js/qgis2web_expressions.js"></script>
<script src="~/Mapas/Públicos/SEM/js/leaflet.js"></script>
<script src="~/Mapas/Públicos/SEM/js/leaflet-svg-shape-markers.min.js"></script>
<script src="~/Mapas/Públicos/SEM/js/leaflet.rotatedMarker.js"></script>
<script src="~/Mapas/Públicos/SEM/js/leaflet.pattern.js"></script>
<script src="~/Mapas/Públicos/SEM/js/leaflet-hash.js"></script>
<script src="~/Mapas/Públicos/SEM/js/Autolinker.min.js"></script>
<script src="~/Mapas/Públicos/SEM/js/rbush.min.js"></script>
<script src="~/Mapas/Públicos/SEM/js/labelgun.min.js"></script>
<script src="~/Mapas/Públicos/SEM/js/labels.js"></script>
<script src="~/Mapas/Públicos/SEM/js/leaflet-control-geocoder.Geocoder.js"></script>
<script src="~/Mapas/Públicos/SEM/js/leaflet-measure.js"></script>
<script src="~/Mapas/Públicos/SEM/js/leaflet-search.js"></script>

@* <script src="~/Mapas/Públicos/SEM/data/BusquedaGasLP_2.js"></script>
 <script src="~/Mapas/Públicos/SEM/data/ExpendiosGasLP_3.js"></script>
 <script src="~/Mapas/Públicos/SEM/data/AlmacenamientoGasLP_4.js"></script>
 <script src="~/Mapas/Públicos/SEM/data/DistribucinGasLP_5.js"></script>
*@


<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteTuxpanTula_1.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteTUBERA4_2.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteTUBERA3_3.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteTUBERA2_4.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteTUBERA_5.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteTrayectoriaGasoducto_6.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteTrayectoria4_7.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteTrayectoria3_8.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteTrayectoria2_9.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteTrayecto_10.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteTMODIFICACIONDEPERMISO_11.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteTamiahua_12.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteTPE6_13.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteTPE4_14.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte9_15.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte8_16.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte7_17.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte6_18.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte5_19.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte4_20.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte3_21.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte2_22.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte10_23.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte_24.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteSistemaGAZA_25.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteSISTEMABAFAR_26.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteSIMBOLOGIA3_27.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteSIMBOLOGIA2_28.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteSIMBOLOGIA_29.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteSELECT_30.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteRutaSur_31.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteRutaNorte_32.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteRio_Bravo_a_M1_M2_33.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteRamalesPJ_34.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteRamales3_35.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteRamales2_36.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteRamales_37.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteRamal_Energia_del_Caribe_38.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteRamalGNC4in_39.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteRamalERMCCCampeche6y10in_40.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteRamalClusterMrida4in_41.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteRamalCFETopolobampo_42.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteRamalCFEHermosillo_43.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransportepipelines_45.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteM3_a_CFE_46.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteM1_M2_a_M3_47.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteLugarestemporales_48.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteLneas_49.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteLineFeatures8_50.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteLineFeatures7_51.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteLineFeatures6_52.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteLineFeatures5_53.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteLineFeatures4_54.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteLineFeatures3_55.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteLineFeatures2_56.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteLineFeatures_57.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteISJIAtlacomulco_58.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteHigueros_61.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteGTO30FRONTERAESTBRASIL_62.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteGNdelValle2_63.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteGasoducto30in_64.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteGasoducto24in_65.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteGasoducto22in_66.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteGasoducto16in_67.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteGasoducto12ACMolex_68.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteGasoducto12in_69.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteGasoducto10in_70.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteGasoducto3_71.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteGasodcuto36in_72.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteGASLINE_73.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteFALLADISPAROPGIL_74.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteDuctos2_75.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteDucto42deCS3AEA_76.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteDucto24in_77.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteDucto16deSLPLaPila_78.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteDIRECCIONALES2_79.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteDireccionales_80.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteDDV_81.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteCSFCTPALM_82.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteCrucesdireccionalesdeTuberade16_83.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteCrucesdireccionales_84.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteArguelles3_86.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteAltamiraV_87.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporteAltamira_88.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte4AC_89.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte3DPROPROPUESTAFINAL_90.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte3AC2_91.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte3AC_92.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte16AC_93.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte12AC2_94.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte12AC_95.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte04_SNH_96.js"></script>
<script src="~/Mapas/Públicos/SEM/data/SistemasdeTransporte01_SNG_97.js"></script>
<script src="~/Mapas/Públicos/SEM/data/ExpendiosGN_98.js"></script>


<script>
  var map = L.map('map', {
            zoomControl:true, maxZoom:28, minZoom:1
        }).fitBounds([[13.304833411066436,-117.71881622734053],[33.89694515375791,-87.53635367302648]]);
        var hash = new L.Hash(map);
        map.attributionControl.setPrefix('<a href="https://github.com/tomchadwin/qgis2web" target="_blank">qgis2web</a> &middot; <a href="https://leafletjs.com" title="A JS library for interactive maps">Leaflet</a> &middot; <a href="https://qgis.org">QGIS</a>');
        var autolinker = new Autolinker({truncate: {length: 30, location: 'smart'}});
        var measureControl = new L.Control.Measure({
            position: 'topleft',
            primaryLengthUnit: 'meters',
            secondaryLengthUnit: 'kilometers',
            primaryAreaUnit: 'sqmeters',
            secondaryAreaUnit: 'hectares'
        });
        measureControl.addTo(map);
        document.getElementsByClassName('leaflet-control-measure-toggle')[0]
        .innerHTML = '';
        document.getElementsByClassName('leaflet-control-measure-toggle')[0]
        .className += ' fas fa-ruler';
        var bounds_group = new L.featureGroup([]);
        function setBounds() {
        }
        map.createPane('pane_Mapagoogle_0');
        map.getPane('pane_Mapagoogle_0').style.zIndex = 400;
        var layer_Mapagoogle_0 = L.tileLayer('https://mt1.google.com/vt/lyrs=r&x={x}&y={y}&z={z}', {
            pane: 'pane_Mapagoogle_0',
            opacity: 1.0,
            attribution: '',
            minZoom: 1,
            maxZoom: 28,
            minNativeZoom: 0,
            maxNativeZoom: 18
        });
        layer_Mapagoogle_0;
        map.addLayer(layer_Mapagoogle_0);
        function pop_SistemasdeTransporteTuxpanTula_1(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteTuxpanTula_1_0() {
            return {
                pane: 'pane_SistemasdeTransporteTuxpanTula_1',
                opacity: 1,
                color: 'rgba(232,113,141,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteTuxpanTula_1');
        map.getPane('pane_SistemasdeTransporteTuxpanTula_1').style.zIndex = 401;
        map.getPane('pane_SistemasdeTransporteTuxpanTula_1').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteTuxpanTula_1 = new L.geoJson(json_SistemasdeTransporteTuxpanTula_1, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteTuxpanTula_1',
            layerName: 'layer_SistemasdeTransporteTuxpanTula_1',
            pane: 'pane_SistemasdeTransporteTuxpanTula_1',
            onEachFeature: pop_SistemasdeTransporteTuxpanTula_1,
            style: style_SistemasdeTransporteTuxpanTula_1_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteTuxpanTula_1);
        map.addLayer(layer_SistemasdeTransporteTuxpanTula_1);
        function pop_SistemasdeTransporteTUBERA4_2(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteTUBERA4_2_0() {
            return {
                pane: 'pane_SistemasdeTransporteTUBERA4_2',
                opacity: 1,
                color: 'rgba(255,158,23,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteTUBERA4_2');
        map.getPane('pane_SistemasdeTransporteTUBERA4_2').style.zIndex = 402;
        map.getPane('pane_SistemasdeTransporteTUBERA4_2').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteTUBERA4_2 = new L.geoJson(json_SistemasdeTransporteTUBERA4_2, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteTUBERA4_2',
            layerName: 'layer_SistemasdeTransporteTUBERA4_2',
            pane: 'pane_SistemasdeTransporteTUBERA4_2',
            onEachFeature: pop_SistemasdeTransporteTUBERA4_2,
            style: style_SistemasdeTransporteTUBERA4_2_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteTUBERA4_2);
        map.addLayer(layer_SistemasdeTransporteTUBERA4_2);
        function pop_SistemasdeTransporteTUBERA3_3(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteTUBERA3_3_0() {
            return {
                pane: 'pane_SistemasdeTransporteTUBERA3_3',
                opacity: 1,
                color: 'rgba(183,72,75,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteTUBERA3_3');
        map.getPane('pane_SistemasdeTransporteTUBERA3_3').style.zIndex = 403;
        map.getPane('pane_SistemasdeTransporteTUBERA3_3').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteTUBERA3_3 = new L.geoJson(json_SistemasdeTransporteTUBERA3_3, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteTUBERA3_3',
            layerName: 'layer_SistemasdeTransporteTUBERA3_3',
            pane: 'pane_SistemasdeTransporteTUBERA3_3',
            onEachFeature: pop_SistemasdeTransporteTUBERA3_3,
            style: style_SistemasdeTransporteTUBERA3_3_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteTUBERA3_3);
        map.addLayer(layer_SistemasdeTransporteTUBERA3_3);
        function pop_SistemasdeTransporteTUBERA2_4(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteTUBERA2_4_0() {
            return {
                pane: 'pane_SistemasdeTransporteTUBERA2_4',
                opacity: 1,
                color: 'rgba(231,113,72,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteTUBERA2_4');
        map.getPane('pane_SistemasdeTransporteTUBERA2_4').style.zIndex = 404;
        map.getPane('pane_SistemasdeTransporteTUBERA2_4').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteTUBERA2_4 = new L.geoJson(json_SistemasdeTransporteTUBERA2_4, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteTUBERA2_4',
            layerName: 'layer_SistemasdeTransporteTUBERA2_4',
            pane: 'pane_SistemasdeTransporteTUBERA2_4',
            onEachFeature: pop_SistemasdeTransporteTUBERA2_4,
            style: style_SistemasdeTransporteTUBERA2_4_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteTUBERA2_4);
        map.addLayer(layer_SistemasdeTransporteTUBERA2_4);
        function pop_SistemasdeTransporteTUBERA_5(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteTUBERA_5_0() {
            return {
                pane: 'pane_SistemasdeTransporteTUBERA_5',
                opacity: 1,
                color: 'rgba(152,125,183,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteTUBERA_5');
        map.getPane('pane_SistemasdeTransporteTUBERA_5').style.zIndex = 405;
        map.getPane('pane_SistemasdeTransporteTUBERA_5').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteTUBERA_5 = new L.geoJson(json_SistemasdeTransporteTUBERA_5, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteTUBERA_5',
            layerName: 'layer_SistemasdeTransporteTUBERA_5',
            pane: 'pane_SistemasdeTransporteTUBERA_5',
            onEachFeature: pop_SistemasdeTransporteTUBERA_5,
            style: style_SistemasdeTransporteTUBERA_5_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteTUBERA_5);
        map.addLayer(layer_SistemasdeTransporteTUBERA_5);
        function pop_SistemasdeTransporteTrayectoriaGasoducto_6(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteTrayectoriaGasoducto_6_0() {
            return {
                pane: 'pane_SistemasdeTransporteTrayectoriaGasoducto_6',
                opacity: 1,
                color: 'rgba(225,89,137,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteTrayectoriaGasoducto_6');
        map.getPane('pane_SistemasdeTransporteTrayectoriaGasoducto_6').style.zIndex = 406;
        map.getPane('pane_SistemasdeTransporteTrayectoriaGasoducto_6').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteTrayectoriaGasoducto_6 = new L.geoJson(json_SistemasdeTransporteTrayectoriaGasoducto_6, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteTrayectoriaGasoducto_6',
            layerName: 'layer_SistemasdeTransporteTrayectoriaGasoducto_6',
            pane: 'pane_SistemasdeTransporteTrayectoriaGasoducto_6',
            onEachFeature: pop_SistemasdeTransporteTrayectoriaGasoducto_6,
            style: style_SistemasdeTransporteTrayectoriaGasoducto_6_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteTrayectoriaGasoducto_6);
        map.addLayer(layer_SistemasdeTransporteTrayectoriaGasoducto_6);
        function pop_SistemasdeTransporteTrayectoria4_7(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteTrayectoria4_7_0() {
            return {
                pane: 'pane_SistemasdeTransporteTrayectoria4_7',
                opacity: 1,
                color: 'rgba(196,60,57,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteTrayectoria4_7');
        map.getPane('pane_SistemasdeTransporteTrayectoria4_7').style.zIndex = 407;
        map.getPane('pane_SistemasdeTransporteTrayectoria4_7').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteTrayectoria4_7 = new L.geoJson(json_SistemasdeTransporteTrayectoria4_7, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteTrayectoria4_7',
            layerName: 'layer_SistemasdeTransporteTrayectoria4_7',
            pane: 'pane_SistemasdeTransporteTrayectoria4_7',
            onEachFeature: pop_SistemasdeTransporteTrayectoria4_7,
            style: style_SistemasdeTransporteTrayectoria4_7_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteTrayectoria4_7);
        map.addLayer(layer_SistemasdeTransporteTrayectoria4_7);
        function pop_SistemasdeTransporteTrayectoria3_8(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['snippet'] !== null ? autolinker.link(feature.properties['snippet'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteTrayectoria3_8_0() {
            return {
                pane: 'pane_SistemasdeTransporteTrayectoria3_8',
                opacity: 1,
                color: 'rgba(190,178,151,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteTrayectoria3_8');
        map.getPane('pane_SistemasdeTransporteTrayectoria3_8').style.zIndex = 408;
        map.getPane('pane_SistemasdeTransporteTrayectoria3_8').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteTrayectoria3_8 = new L.geoJson(json_SistemasdeTransporteTrayectoria3_8, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteTrayectoria3_8',
            layerName: 'layer_SistemasdeTransporteTrayectoria3_8',
            pane: 'pane_SistemasdeTransporteTrayectoria3_8',
            onEachFeature: pop_SistemasdeTransporteTrayectoria3_8,
            style: style_SistemasdeTransporteTrayectoria3_8_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteTrayectoria3_8);
        map.addLayer(layer_SistemasdeTransporteTrayectoria3_8);
        function pop_SistemasdeTransporteTrayectoria2_9(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteTrayectoria2_9_0() {
            return {
                pane: 'pane_SistemasdeTransporteTrayectoria2_9',
                opacity: 1,
                color: 'rgba(145,82,45,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteTrayectoria2_9');
        map.getPane('pane_SistemasdeTransporteTrayectoria2_9').style.zIndex = 409;
        map.getPane('pane_SistemasdeTransporteTrayectoria2_9').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteTrayectoria2_9 = new L.geoJson(json_SistemasdeTransporteTrayectoria2_9, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteTrayectoria2_9',
            layerName: 'layer_SistemasdeTransporteTrayectoria2_9',
            pane: 'pane_SistemasdeTransporteTrayectoria2_9',
            onEachFeature: pop_SistemasdeTransporteTrayectoria2_9,
            style: style_SistemasdeTransporteTrayectoria2_9_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteTrayectoria2_9);
        map.addLayer(layer_SistemasdeTransporteTrayectoria2_9);
        function pop_SistemasdeTransporteTrayecto_10(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteTrayecto_10_0() {
            return {
                pane: 'pane_SistemasdeTransporteTrayecto_10',
                opacity: 1,
                color: 'rgba(125,139,143,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteTrayecto_10');
        map.getPane('pane_SistemasdeTransporteTrayecto_10').style.zIndex = 410;
        map.getPane('pane_SistemasdeTransporteTrayecto_10').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteTrayecto_10 = new L.geoJson(json_SistemasdeTransporteTrayecto_10, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteTrayecto_10',
            layerName: 'layer_SistemasdeTransporteTrayecto_10',
            pane: 'pane_SistemasdeTransporteTrayecto_10',
            onEachFeature: pop_SistemasdeTransporteTrayecto_10,
            style: style_SistemasdeTransporteTrayecto_10_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteTrayecto_10);
        map.addLayer(layer_SistemasdeTransporteTrayecto_10);
        function pop_SistemasdeTransporteTMODIFICACIONDEPERMISO_11(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteTMODIFICACIONDEPERMISO_11_0() {
            return {
                pane: 'pane_SistemasdeTransporteTMODIFICACIONDEPERMISO_11',
                opacity: 1,
                color: 'rgba(232,113,141,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteTMODIFICACIONDEPERMISO_11');
        map.getPane('pane_SistemasdeTransporteTMODIFICACIONDEPERMISO_11').style.zIndex = 411;
        map.getPane('pane_SistemasdeTransporteTMODIFICACIONDEPERMISO_11').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteTMODIFICACIONDEPERMISO_11 = new L.geoJson(json_SistemasdeTransporteTMODIFICACIONDEPERMISO_11, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteTMODIFICACIONDEPERMISO_11',
            layerName: 'layer_SistemasdeTransporteTMODIFICACIONDEPERMISO_11',
            pane: 'pane_SistemasdeTransporteTMODIFICACIONDEPERMISO_11',
            onEachFeature: pop_SistemasdeTransporteTMODIFICACIONDEPERMISO_11,
            style: style_SistemasdeTransporteTMODIFICACIONDEPERMISO_11_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteTMODIFICACIONDEPERMISO_11);
        map.addLayer(layer_SistemasdeTransporteTMODIFICACIONDEPERMISO_11);
        function pop_SistemasdeTransporteTamiahua_12(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteTamiahua_12_0() {
            return {
                pane: 'pane_SistemasdeTransporteTamiahua_12',
                opacity: 1,
                color: 'rgba(183,72,75,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteTamiahua_12');
        map.getPane('pane_SistemasdeTransporteTamiahua_12').style.zIndex = 412;
        map.getPane('pane_SistemasdeTransporteTamiahua_12').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteTamiahua_12 = new L.geoJson(json_SistemasdeTransporteTamiahua_12, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteTamiahua_12',
            layerName: 'layer_SistemasdeTransporteTamiahua_12',
            pane: 'pane_SistemasdeTransporteTamiahua_12',
            onEachFeature: pop_SistemasdeTransporteTamiahua_12,
            style: style_SistemasdeTransporteTamiahua_12_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteTamiahua_12);
        map.addLayer(layer_SistemasdeTransporteTamiahua_12);
        function pop_SistemasdeTransporteTPE6_13(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteTPE6_13_0() {
            return {
                pane: 'pane_SistemasdeTransporteTPE6_13',
                opacity: 1,
                color: 'rgba(225,89,137,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteTPE6_13');
        map.getPane('pane_SistemasdeTransporteTPE6_13').style.zIndex = 413;
        map.getPane('pane_SistemasdeTransporteTPE6_13').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteTPE6_13 = new L.geoJson(json_SistemasdeTransporteTPE6_13, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteTPE6_13',
            layerName: 'layer_SistemasdeTransporteTPE6_13',
            pane: 'pane_SistemasdeTransporteTPE6_13',
            onEachFeature: pop_SistemasdeTransporteTPE6_13,
            style: style_SistemasdeTransporteTPE6_13_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteTPE6_13);
        map.addLayer(layer_SistemasdeTransporteTPE6_13);
        function pop_SistemasdeTransporteTPE4_14(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteTPE4_14_0() {
            return {
                pane: 'pane_SistemasdeTransporteTPE4_14',
                opacity: 1,
                color: 'rgba(229,182,54,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteTPE4_14');
        map.getPane('pane_SistemasdeTransporteTPE4_14').style.zIndex = 414;
        map.getPane('pane_SistemasdeTransporteTPE4_14').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteTPE4_14 = new L.geoJson(json_SistemasdeTransporteTPE4_14, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteTPE4_14',
            layerName: 'layer_SistemasdeTransporteTPE4_14',
            pane: 'pane_SistemasdeTransporteTPE4_14',
            onEachFeature: pop_SistemasdeTransporteTPE4_14,
            style: style_SistemasdeTransporteTPE4_14_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteTPE4_14);
        map.addLayer(layer_SistemasdeTransporteTPE4_14);
        function pop_SistemasdeTransporte9_15(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte9_15_0() {
            return {
                pane: 'pane_SistemasdeTransporte9_15',
                opacity: 1,
                color: 'rgba(190,178,151,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte9_15');
        map.getPane('pane_SistemasdeTransporte9_15').style.zIndex = 415;
        map.getPane('pane_SistemasdeTransporte9_15').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte9_15 = new L.geoJson(json_SistemasdeTransporte9_15, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte9_15',
            layerName: 'layer_SistemasdeTransporte9_15',
            pane: 'pane_SistemasdeTransporte9_15',
            onEachFeature: pop_SistemasdeTransporte9_15,
            style: style_SistemasdeTransporte9_15_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte9_15);
        map.addLayer(layer_SistemasdeTransporte9_15);
        function pop_SistemasdeTransporte8_16(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte8_16_0() {
            return {
                pane: 'pane_SistemasdeTransporte8_16',
                opacity: 1,
                color: 'rgba(145,82,45,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte8_16');
        map.getPane('pane_SistemasdeTransporte8_16').style.zIndex = 416;
        map.getPane('pane_SistemasdeTransporte8_16').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte8_16 = new L.geoJson(json_SistemasdeTransporte8_16, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte8_16',
            layerName: 'layer_SistemasdeTransporte8_16',
            pane: 'pane_SistemasdeTransporte8_16',
            onEachFeature: pop_SistemasdeTransporte8_16,
            style: style_SistemasdeTransporte8_16_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte8_16);
        map.addLayer(layer_SistemasdeTransporte8_16);
        function pop_SistemasdeTransporte7_17(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte7_17_0() {
            return {
                pane: 'pane_SistemasdeTransporte7_17',
                opacity: 1,
                color: 'rgba(125,139,143,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte7_17');
        map.getPane('pane_SistemasdeTransporte7_17').style.zIndex = 417;
        map.getPane('pane_SistemasdeTransporte7_17').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte7_17 = new L.geoJson(json_SistemasdeTransporte7_17, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte7_17',
            layerName: 'layer_SistemasdeTransporte7_17',
            pane: 'pane_SistemasdeTransporte7_17',
            onEachFeature: pop_SistemasdeTransporte7_17,
            style: style_SistemasdeTransporte7_17_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte7_17);
        map.addLayer(layer_SistemasdeTransporte7_17);
        function pop_SistemasdeTransporte6_18(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte6_18_0() {
            return {
                pane: 'pane_SistemasdeTransporte6_18',
                opacity: 1,
                color: 'rgba(133,182,111,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte6_18');
        map.getPane('pane_SistemasdeTransporte6_18').style.zIndex = 418;
        map.getPane('pane_SistemasdeTransporte6_18').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte6_18 = new L.geoJson(json_SistemasdeTransporte6_18, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte6_18',
            layerName: 'layer_SistemasdeTransporte6_18',
            pane: 'pane_SistemasdeTransporte6_18',
            onEachFeature: pop_SistemasdeTransporte6_18,
            style: style_SistemasdeTransporte6_18_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte6_18);
        map.addLayer(layer_SistemasdeTransporte6_18);
        function pop_SistemasdeTransporte5_19(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte5_19_0() {
            return {
                pane: 'pane_SistemasdeTransporte5_19',
                opacity: 1,
                color: 'rgba(164,113,88,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte5_19');
        map.getPane('pane_SistemasdeTransporte5_19').style.zIndex = 419;
        map.getPane('pane_SistemasdeTransporte5_19').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte5_19 = new L.geoJson(json_SistemasdeTransporte5_19, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte5_19',
            layerName: 'layer_SistemasdeTransporte5_19',
            pane: 'pane_SistemasdeTransporte5_19',
            onEachFeature: pop_SistemasdeTransporte5_19,
            style: style_SistemasdeTransporte5_19_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte5_19);
        map.addLayer(layer_SistemasdeTransporte5_19);
        function pop_SistemasdeTransporte4_20(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte4_20_0() {
            return {
                pane: 'pane_SistemasdeTransporte4_20',
                opacity: 1,
                color: 'rgba(213,180,60,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte4_20');
        map.getPane('pane_SistemasdeTransporte4_20').style.zIndex = 420;
        map.getPane('pane_SistemasdeTransporte4_20').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte4_20 = new L.geoJson(json_SistemasdeTransporte4_20, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte4_20',
            layerName: 'layer_SistemasdeTransporte4_20',
            pane: 'pane_SistemasdeTransporte4_20',
            onEachFeature: pop_SistemasdeTransporte4_20,
            style: style_SistemasdeTransporte4_20_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte4_20);
        map.addLayer(layer_SistemasdeTransporte4_20);
        function pop_SistemasdeTransporte3_21(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte3_21_0() {
            return {
                pane: 'pane_SistemasdeTransporte3_21',
                opacity: 1,
                color: 'rgba(114,155,111,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte3_21');
        map.getPane('pane_SistemasdeTransporte3_21').style.zIndex = 421;
        map.getPane('pane_SistemasdeTransporte3_21').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte3_21 = new L.geoJson(json_SistemasdeTransporte3_21, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte3_21',
            layerName: 'layer_SistemasdeTransporte3_21',
            pane: 'pane_SistemasdeTransporte3_21',
            onEachFeature: pop_SistemasdeTransporte3_21,
            style: style_SistemasdeTransporte3_21_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte3_21);
        map.addLayer(layer_SistemasdeTransporte3_21);
        function pop_SistemasdeTransporte2_22(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte2_22_0() {
            return {
                pane: 'pane_SistemasdeTransporte2_22',
                opacity: 1,
                color: 'rgba(243,166,178,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte2_22');
        map.getPane('pane_SistemasdeTransporte2_22').style.zIndex = 422;
        map.getPane('pane_SistemasdeTransporte2_22').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte2_22 = new L.geoJson(json_SistemasdeTransporte2_22, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte2_22',
            layerName: 'layer_SistemasdeTransporte2_22',
            pane: 'pane_SistemasdeTransporte2_22',
            onEachFeature: pop_SistemasdeTransporte2_22,
            style: style_SistemasdeTransporte2_22_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte2_22);
        map.addLayer(layer_SistemasdeTransporte2_22);
        function pop_SistemasdeTransporte10_23(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte10_23_0() {
            return {
                pane: 'pane_SistemasdeTransporte10_23',
                opacity: 1,
                color: 'rgba(141,90,153,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte10_23');
        map.getPane('pane_SistemasdeTransporte10_23').style.zIndex = 423;
        map.getPane('pane_SistemasdeTransporte10_23').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte10_23 = new L.geoJson(json_SistemasdeTransporte10_23, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte10_23',
            layerName: 'layer_SistemasdeTransporte10_23',
            pane: 'pane_SistemasdeTransporte10_23',
            onEachFeature: pop_SistemasdeTransporte10_23,
            style: style_SistemasdeTransporte10_23_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte10_23);
        map.addLayer(layer_SistemasdeTransporte10_23);
        function pop_SistemasdeTransporte_24(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte_24_0() {
            return {
                pane: 'pane_SistemasdeTransporte_24',
                opacity: 1,
                color: 'rgba(232,113,141,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte_24');
        map.getPane('pane_SistemasdeTransporte_24').style.zIndex = 424;
        map.getPane('pane_SistemasdeTransporte_24').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte_24 = new L.geoJson(json_SistemasdeTransporte_24, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte_24',
            layerName: 'layer_SistemasdeTransporte_24',
            pane: 'pane_SistemasdeTransporte_24',
            onEachFeature: pop_SistemasdeTransporte_24,
            style: style_SistemasdeTransporte_24_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte_24);
        map.addLayer(layer_SistemasdeTransporte_24);
        function pop_SistemasdeTransporteSistemaGAZA_25(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteSistemaGAZA_25_0() {
            return {
                pane: 'pane_SistemasdeTransporteSistemaGAZA_25',
                opacity: 1,
                color: 'rgba(183,72,75,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteSistemaGAZA_25');
        map.getPane('pane_SistemasdeTransporteSistemaGAZA_25').style.zIndex = 425;
        map.getPane('pane_SistemasdeTransporteSistemaGAZA_25').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteSistemaGAZA_25 = new L.geoJson(json_SistemasdeTransporteSistemaGAZA_25, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteSistemaGAZA_25',
            layerName: 'layer_SistemasdeTransporteSistemaGAZA_25',
            pane: 'pane_SistemasdeTransporteSistemaGAZA_25',
            onEachFeature: pop_SistemasdeTransporteSistemaGAZA_25,
            style: style_SistemasdeTransporteSistemaGAZA_25_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteSistemaGAZA_25);
        map.addLayer(layer_SistemasdeTransporteSistemaGAZA_25);
        function pop_SistemasdeTransporteSISTEMABAFAR_26(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteSISTEMABAFAR_26_0() {
            return {
                pane: 'pane_SistemasdeTransporteSISTEMABAFAR_26',
                opacity: 1,
                color: 'rgba(225,89,137,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteSISTEMABAFAR_26');
        map.getPane('pane_SistemasdeTransporteSISTEMABAFAR_26').style.zIndex = 426;
        map.getPane('pane_SistemasdeTransporteSISTEMABAFAR_26').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteSISTEMABAFAR_26 = new L.geoJson(json_SistemasdeTransporteSISTEMABAFAR_26, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteSISTEMABAFAR_26',
            layerName: 'layer_SistemasdeTransporteSISTEMABAFAR_26',
            pane: 'pane_SistemasdeTransporteSISTEMABAFAR_26',
            onEachFeature: pop_SistemasdeTransporteSISTEMABAFAR_26,
            style: style_SistemasdeTransporteSISTEMABAFAR_26_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteSISTEMABAFAR_26);
        map.addLayer(layer_SistemasdeTransporteSISTEMABAFAR_26);
        function pop_SistemasdeTransporteSIMBOLOGIA3_27(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteSIMBOLOGIA3_27_0() {
            return {
                pane: 'pane_SistemasdeTransporteSIMBOLOGIA3_27',
                opacity: 1,
                color: 'rgba(190,178,151,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteSIMBOLOGIA3_27');
        map.getPane('pane_SistemasdeTransporteSIMBOLOGIA3_27').style.zIndex = 427;
        map.getPane('pane_SistemasdeTransporteSIMBOLOGIA3_27').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteSIMBOLOGIA3_27 = new L.geoJson(json_SistemasdeTransporteSIMBOLOGIA3_27, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteSIMBOLOGIA3_27',
            layerName: 'layer_SistemasdeTransporteSIMBOLOGIA3_27',
            pane: 'pane_SistemasdeTransporteSIMBOLOGIA3_27',
            onEachFeature: pop_SistemasdeTransporteSIMBOLOGIA3_27,
            style: style_SistemasdeTransporteSIMBOLOGIA3_27_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteSIMBOLOGIA3_27);
        map.addLayer(layer_SistemasdeTransporteSIMBOLOGIA3_27);
        function pop_SistemasdeTransporteSIMBOLOGIA2_28(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteSIMBOLOGIA2_28_0() {
            return {
                pane: 'pane_SistemasdeTransporteSIMBOLOGIA2_28',
                opacity: 1,
                color: 'rgba(145,82,45,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteSIMBOLOGIA2_28');
        map.getPane('pane_SistemasdeTransporteSIMBOLOGIA2_28').style.zIndex = 428;
        map.getPane('pane_SistemasdeTransporteSIMBOLOGIA2_28').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteSIMBOLOGIA2_28 = new L.geoJson(json_SistemasdeTransporteSIMBOLOGIA2_28, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteSIMBOLOGIA2_28',
            layerName: 'layer_SistemasdeTransporteSIMBOLOGIA2_28',
            pane: 'pane_SistemasdeTransporteSIMBOLOGIA2_28',
            onEachFeature: pop_SistemasdeTransporteSIMBOLOGIA2_28,
            style: style_SistemasdeTransporteSIMBOLOGIA2_28_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteSIMBOLOGIA2_28);
        map.addLayer(layer_SistemasdeTransporteSIMBOLOGIA2_28);
        function pop_SistemasdeTransporteSIMBOLOGIA_29(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteSIMBOLOGIA_29_0() {
            return {
                pane: 'pane_SistemasdeTransporteSIMBOLOGIA_29',
                opacity: 1,
                color: 'rgba(125,139,143,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteSIMBOLOGIA_29');
        map.getPane('pane_SistemasdeTransporteSIMBOLOGIA_29').style.zIndex = 429;
        map.getPane('pane_SistemasdeTransporteSIMBOLOGIA_29').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteSIMBOLOGIA_29 = new L.geoJson(json_SistemasdeTransporteSIMBOLOGIA_29, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteSIMBOLOGIA_29',
            layerName: 'layer_SistemasdeTransporteSIMBOLOGIA_29',
            pane: 'pane_SistemasdeTransporteSIMBOLOGIA_29',
            onEachFeature: pop_SistemasdeTransporteSIMBOLOGIA_29,
            style: style_SistemasdeTransporteSIMBOLOGIA_29_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteSIMBOLOGIA_29);
        map.addLayer(layer_SistemasdeTransporteSIMBOLOGIA_29);
        function pop_SistemasdeTransporteSELECT_30(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteSELECT_30_0() {
            return {
                pane: 'pane_SistemasdeTransporteSELECT_30',
                opacity: 1,
                color: 'rgba(133,182,111,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteSELECT_30');
        map.getPane('pane_SistemasdeTransporteSELECT_30').style.zIndex = 430;
        map.getPane('pane_SistemasdeTransporteSELECT_30').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteSELECT_30 = new L.geoJson(json_SistemasdeTransporteSELECT_30, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteSELECT_30',
            layerName: 'layer_SistemasdeTransporteSELECT_30',
            pane: 'pane_SistemasdeTransporteSELECT_30',
            onEachFeature: pop_SistemasdeTransporteSELECT_30,
            style: style_SistemasdeTransporteSELECT_30_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteSELECT_30);
        map.addLayer(layer_SistemasdeTransporteSELECT_30);
        function pop_SistemasdeTransporteRutaSur_31(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteRutaSur_31_0() {
            return {
                pane: 'pane_SistemasdeTransporteRutaSur_31',
                opacity: 1,
                color: 'rgba(114,155,111,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteRutaSur_31');
        map.getPane('pane_SistemasdeTransporteRutaSur_31').style.zIndex = 431;
        map.getPane('pane_SistemasdeTransporteRutaSur_31').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteRutaSur_31 = new L.geoJson(json_SistemasdeTransporteRutaSur_31, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteRutaSur_31',
            layerName: 'layer_SistemasdeTransporteRutaSur_31',
            pane: 'pane_SistemasdeTransporteRutaSur_31',
            onEachFeature: pop_SistemasdeTransporteRutaSur_31,
            style: style_SistemasdeTransporteRutaSur_31_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteRutaSur_31);
        map.addLayer(layer_SistemasdeTransporteRutaSur_31);
        function pop_SistemasdeTransporteRutaNorte_32(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteRutaNorte_32_0() {
            return {
                pane: 'pane_SistemasdeTransporteRutaNorte_32',
                opacity: 1,
                color: 'rgba(243,166,178,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteRutaNorte_32');
        map.getPane('pane_SistemasdeTransporteRutaNorte_32').style.zIndex = 432;
        map.getPane('pane_SistemasdeTransporteRutaNorte_32').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteRutaNorte_32 = new L.geoJson(json_SistemasdeTransporteRutaNorte_32, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteRutaNorte_32',
            layerName: 'layer_SistemasdeTransporteRutaNorte_32',
            pane: 'pane_SistemasdeTransporteRutaNorte_32',
            onEachFeature: pop_SistemasdeTransporteRutaNorte_32,
            style: style_SistemasdeTransporteRutaNorte_32_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteRutaNorte_32);
        map.addLayer(layer_SistemasdeTransporteRutaNorte_32);
        function pop_SistemasdeTransporteRio_Bravo_a_M1_M2_33(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteRio_Bravo_a_M1_M2_33_0() {
            return {
                pane: 'pane_SistemasdeTransporteRio_Bravo_a_M1_M2_33',
                opacity: 1,
                color: 'rgba(141,90,153,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteRio_Bravo_a_M1_M2_33');
        map.getPane('pane_SistemasdeTransporteRio_Bravo_a_M1_M2_33').style.zIndex = 433;
        map.getPane('pane_SistemasdeTransporteRio_Bravo_a_M1_M2_33').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteRio_Bravo_a_M1_M2_33 = new L.geoJson(json_SistemasdeTransporteRio_Bravo_a_M1_M2_33, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteRio_Bravo_a_M1_M2_33',
            layerName: 'layer_SistemasdeTransporteRio_Bravo_a_M1_M2_33',
            pane: 'pane_SistemasdeTransporteRio_Bravo_a_M1_M2_33',
            onEachFeature: pop_SistemasdeTransporteRio_Bravo_a_M1_M2_33,
            style: style_SistemasdeTransporteRio_Bravo_a_M1_M2_33_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteRio_Bravo_a_M1_M2_33);
        map.addLayer(layer_SistemasdeTransporteRio_Bravo_a_M1_M2_33);
        function pop_SistemasdeTransporteRamalesPJ_34(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteRamalesPJ_34_0() {
            return {
                pane: 'pane_SistemasdeTransporteRamalesPJ_34',
                opacity: 1,
                color: 'rgba(231,113,72,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteRamalesPJ_34');
        map.getPane('pane_SistemasdeTransporteRamalesPJ_34').style.zIndex = 434;
        map.getPane('pane_SistemasdeTransporteRamalesPJ_34').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteRamalesPJ_34 = new L.geoJson(json_SistemasdeTransporteRamalesPJ_34, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteRamalesPJ_34',
            layerName: 'layer_SistemasdeTransporteRamalesPJ_34',
            pane: 'pane_SistemasdeTransporteRamalesPJ_34',
            onEachFeature: pop_SistemasdeTransporteRamalesPJ_34,
            style: style_SistemasdeTransporteRamalesPJ_34_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteRamalesPJ_34);
        map.addLayer(layer_SistemasdeTransporteRamalesPJ_34);
        function pop_SistemasdeTransporteRamales3_35(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteRamales3_35_0() {
            return {
                pane: 'pane_SistemasdeTransporteRamales3_35',
                opacity: 1,
                color: 'rgba(152,125,183,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteRamales3_35');
        map.getPane('pane_SistemasdeTransporteRamales3_35').style.zIndex = 435;
        map.getPane('pane_SistemasdeTransporteRamales3_35').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteRamales3_35 = new L.geoJson(json_SistemasdeTransporteRamales3_35, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteRamales3_35',
            layerName: 'layer_SistemasdeTransporteRamales3_35',
            pane: 'pane_SistemasdeTransporteRamales3_35',
            onEachFeature: pop_SistemasdeTransporteRamales3_35,
            style: style_SistemasdeTransporteRamales3_35_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteRamales3_35);
        map.addLayer(layer_SistemasdeTransporteRamales3_35);
        function pop_SistemasdeTransporteRamales2_36(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteRamales2_36_0() {
            return {
                pane: 'pane_SistemasdeTransporteRamales2_36',
                opacity: 1,
                color: 'rgba(190,207,80,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteRamales2_36');
        map.getPane('pane_SistemasdeTransporteRamales2_36').style.zIndex = 436;
        map.getPane('pane_SistemasdeTransporteRamales2_36').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteRamales2_36 = new L.geoJson(json_SistemasdeTransporteRamales2_36, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteRamales2_36',
            layerName: 'layer_SistemasdeTransporteRamales2_36',
            pane: 'pane_SistemasdeTransporteRamales2_36',
            onEachFeature: pop_SistemasdeTransporteRamales2_36,
            style: style_SistemasdeTransporteRamales2_36_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteRamales2_36);
        map.addLayer(layer_SistemasdeTransporteRamales2_36);
        function pop_SistemasdeTransporteRamales_37(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteRamales_37_0() {
            return {
                pane: 'pane_SistemasdeTransporteRamales_37',
                opacity: 1,
                color: 'rgba(225,89,137,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteRamales_37');
        map.getPane('pane_SistemasdeTransporteRamales_37').style.zIndex = 437;
        map.getPane('pane_SistemasdeTransporteRamales_37').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteRamales_37 = new L.geoJson(json_SistemasdeTransporteRamales_37, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteRamales_37',
            layerName: 'layer_SistemasdeTransporteRamales_37',
            pane: 'pane_SistemasdeTransporteRamales_37',
            onEachFeature: pop_SistemasdeTransporteRamales_37,
            style: style_SistemasdeTransporteRamales_37_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteRamales_37);
        map.addLayer(layer_SistemasdeTransporteRamales_37);
        function pop_SistemasdeTransporteRamal_Energia_del_Caribe_38(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteRamal_Energia_del_Caribe_38_0() {
            return {
                pane: 'pane_SistemasdeTransporteRamal_Energia_del_Caribe_38',
                opacity: 1,
                color: 'rgba(229,182,54,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteRamal_Energia_del_Caribe_38');
        map.getPane('pane_SistemasdeTransporteRamal_Energia_del_Caribe_38').style.zIndex = 438;
        map.getPane('pane_SistemasdeTransporteRamal_Energia_del_Caribe_38').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteRamal_Energia_del_Caribe_38 = new L.geoJson(json_SistemasdeTransporteRamal_Energia_del_Caribe_38, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteRamal_Energia_del_Caribe_38',
            layerName: 'layer_SistemasdeTransporteRamal_Energia_del_Caribe_38',
            pane: 'pane_SistemasdeTransporteRamal_Energia_del_Caribe_38',
            onEachFeature: pop_SistemasdeTransporteRamal_Energia_del_Caribe_38,
            style: style_SistemasdeTransporteRamal_Energia_del_Caribe_38_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteRamal_Energia_del_Caribe_38);
        map.addLayer(layer_SistemasdeTransporteRamal_Energia_del_Caribe_38);
        function pop_SistemasdeTransporteRamalGNC4in_39(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteRamalGNC4in_39_0() {
            return {
                pane: 'pane_SistemasdeTransporteRamalGNC4in_39',
                opacity: 1,
                color: 'rgba(196,60,57,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteRamalGNC4in_39');
        map.getPane('pane_SistemasdeTransporteRamalGNC4in_39').style.zIndex = 439;
        map.getPane('pane_SistemasdeTransporteRamalGNC4in_39').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteRamalGNC4in_39 = new L.geoJson(json_SistemasdeTransporteRamalGNC4in_39, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteRamalGNC4in_39',
            layerName: 'layer_SistemasdeTransporteRamalGNC4in_39',
            pane: 'pane_SistemasdeTransporteRamalGNC4in_39',
            onEachFeature: pop_SistemasdeTransporteRamalGNC4in_39,
            style: style_SistemasdeTransporteRamalGNC4in_39_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteRamalGNC4in_39);
        map.addLayer(layer_SistemasdeTransporteRamalGNC4in_39);
        function pop_SistemasdeTransporteRamalERMCCCampeche6y10in_40(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteRamalERMCCCampeche6y10in_40_0() {
            return {
                pane: 'pane_SistemasdeTransporteRamalERMCCCampeche6y10in_40',
                opacity: 1,
                color: 'rgba(145,82,45,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteRamalERMCCCampeche6y10in_40');
        map.getPane('pane_SistemasdeTransporteRamalERMCCCampeche6y10in_40').style.zIndex = 440;
        map.getPane('pane_SistemasdeTransporteRamalERMCCCampeche6y10in_40').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteRamalERMCCCampeche6y10in_40 = new L.geoJson(json_SistemasdeTransporteRamalERMCCCampeche6y10in_40, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteRamalERMCCCampeche6y10in_40',
            layerName: 'layer_SistemasdeTransporteRamalERMCCCampeche6y10in_40',
            pane: 'pane_SistemasdeTransporteRamalERMCCCampeche6y10in_40',
            onEachFeature: pop_SistemasdeTransporteRamalERMCCCampeche6y10in_40,
            style: style_SistemasdeTransporteRamalERMCCCampeche6y10in_40_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteRamalERMCCCampeche6y10in_40);
        map.addLayer(layer_SistemasdeTransporteRamalERMCCCampeche6y10in_40);
        function pop_SistemasdeTransporteRamalClusterMrida4in_41(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteRamalClusterMrida4in_41_0() {
            return {
                pane: 'pane_SistemasdeTransporteRamalClusterMrida4in_41',
                opacity: 1,
                color: 'rgba(133,182,111,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteRamalClusterMrida4in_41');
        map.getPane('pane_SistemasdeTransporteRamalClusterMrida4in_41').style.zIndex = 441;
        map.getPane('pane_SistemasdeTransporteRamalClusterMrida4in_41').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteRamalClusterMrida4in_41 = new L.geoJson(json_SistemasdeTransporteRamalClusterMrida4in_41, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteRamalClusterMrida4in_41',
            layerName: 'layer_SistemasdeTransporteRamalClusterMrida4in_41',
            pane: 'pane_SistemasdeTransporteRamalClusterMrida4in_41',
            onEachFeature: pop_SistemasdeTransporteRamalClusterMrida4in_41,
            style: style_SistemasdeTransporteRamalClusterMrida4in_41_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteRamalClusterMrida4in_41);
        map.addLayer(layer_SistemasdeTransporteRamalClusterMrida4in_41);
        function pop_SistemasdeTransporteRamalCFETopolobampo_42(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteRamalCFETopolobampo_42_0() {
            return {
                pane: 'pane_SistemasdeTransporteRamalCFETopolobampo_42',
                opacity: 1,
                color: 'rgba(114,155,111,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteRamalCFETopolobampo_42');
        map.getPane('pane_SistemasdeTransporteRamalCFETopolobampo_42').style.zIndex = 442;
        map.getPane('pane_SistemasdeTransporteRamalCFETopolobampo_42').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteRamalCFETopolobampo_42 = new L.geoJson(json_SistemasdeTransporteRamalCFETopolobampo_42, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteRamalCFETopolobampo_42',
            layerName: 'layer_SistemasdeTransporteRamalCFETopolobampo_42',
            pane: 'pane_SistemasdeTransporteRamalCFETopolobampo_42',
            onEachFeature: pop_SistemasdeTransporteRamalCFETopolobampo_42,
            style: style_SistemasdeTransporteRamalCFETopolobampo_42_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteRamalCFETopolobampo_42);
        map.addLayer(layer_SistemasdeTransporteRamalCFETopolobampo_42);
        function pop_SistemasdeTransporteRamalCFEHermosillo_43(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteRamalCFEHermosillo_43_0() {
            return {
                pane: 'pane_SistemasdeTransporteRamalCFEHermosillo_43',
                opacity: 1,
                color: 'rgba(141,90,153,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteRamalCFEHermosillo_43');
        map.getPane('pane_SistemasdeTransporteRamalCFEHermosillo_43').style.zIndex = 443;
        map.getPane('pane_SistemasdeTransporteRamalCFEHermosillo_43').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteRamalCFEHermosillo_43 = new L.geoJson(json_SistemasdeTransporteRamalCFEHermosillo_43, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteRamalCFEHermosillo_43',
            layerName: 'layer_SistemasdeTransporteRamalCFEHermosillo_43',
            pane: 'pane_SistemasdeTransporteRamalCFEHermosillo_43',
            onEachFeature: pop_SistemasdeTransporteRamalCFEHermosillo_43,
            style: style_SistemasdeTransporteRamalCFEHermosillo_43_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteRamalCFEHermosillo_43);
        map.addLayer(layer_SistemasdeTransporteRamalCFEHermosillo_43);
        function pop_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44_0() {
            return {
                pane: 'pane_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44',
                opacity: 1,
                color: 'rgba(190,207,80,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44');
        map.getPane('pane_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44').style.zIndex = 444;
        map.getPane('pane_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44 = new L.geoJson(json_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44',
            layerName: 'layer_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44',
            pane: 'pane_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44',
            onEachFeature: pop_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44,
            style: style_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44);
        map.addLayer(layer_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44);
        function pop_SistemasdeTransportepipelines_45(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransportepipelines_45_0() {
            return {
                pane: 'pane_SistemasdeTransportepipelines_45',
                opacity: 1,
                color: 'rgba(255,158,23,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransportepipelines_45');
        map.getPane('pane_SistemasdeTransportepipelines_45').style.zIndex = 445;
        map.getPane('pane_SistemasdeTransportepipelines_45').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransportepipelines_45 = new L.geoJson(json_SistemasdeTransportepipelines_45, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransportepipelines_45',
            layerName: 'layer_SistemasdeTransportepipelines_45',
            pane: 'pane_SistemasdeTransportepipelines_45',
            onEachFeature: pop_SistemasdeTransportepipelines_45,
            style: style_SistemasdeTransportepipelines_45_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransportepipelines_45);
        map.addLayer(layer_SistemasdeTransportepipelines_45);
        function pop_SistemasdeTransporteM3_a_CFE_46(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteM3_a_CFE_46_0() {
            return {
                pane: 'pane_SistemasdeTransporteM3_a_CFE_46',
                opacity: 1,
                color: 'rgba(231,113,72,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteM3_a_CFE_46');
        map.getPane('pane_SistemasdeTransporteM3_a_CFE_46').style.zIndex = 446;
        map.getPane('pane_SistemasdeTransporteM3_a_CFE_46').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteM3_a_CFE_46 = new L.geoJson(json_SistemasdeTransporteM3_a_CFE_46, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteM3_a_CFE_46',
            layerName: 'layer_SistemasdeTransporteM3_a_CFE_46',
            pane: 'pane_SistemasdeTransporteM3_a_CFE_46',
            onEachFeature: pop_SistemasdeTransporteM3_a_CFE_46,
            style: style_SistemasdeTransporteM3_a_CFE_46_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteM3_a_CFE_46);
        map.addLayer(layer_SistemasdeTransporteM3_a_CFE_46);
        function pop_SistemasdeTransporteM1_M2_a_M3_47(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteM1_M2_a_M3_47_0() {
            return {
                pane: 'pane_SistemasdeTransporteM1_M2_a_M3_47',
                opacity: 1,
                color: 'rgba(152,125,183,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteM1_M2_a_M3_47');
        map.getPane('pane_SistemasdeTransporteM1_M2_a_M3_47').style.zIndex = 447;
        map.getPane('pane_SistemasdeTransporteM1_M2_a_M3_47').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteM1_M2_a_M3_47 = new L.geoJson(json_SistemasdeTransporteM1_M2_a_M3_47, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteM1_M2_a_M3_47',
            layerName: 'layer_SistemasdeTransporteM1_M2_a_M3_47',
            pane: 'pane_SistemasdeTransporteM1_M2_a_M3_47',
            onEachFeature: pop_SistemasdeTransporteM1_M2_a_M3_47,
            style: style_SistemasdeTransporteM1_M2_a_M3_47_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteM1_M2_a_M3_47);
        map.addLayer(layer_SistemasdeTransporteM1_M2_a_M3_47);
        function pop_SistemasdeTransporteLugarestemporales_48(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteLugarestemporales_48_0() {
            return {
                pane: 'pane_SistemasdeTransporteLugarestemporales_48',
                opacity: 1,
                color: 'rgba(190,207,80,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteLugarestemporales_48');
        map.getPane('pane_SistemasdeTransporteLugarestemporales_48').style.zIndex = 448;
        map.getPane('pane_SistemasdeTransporteLugarestemporales_48').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteLugarestemporales_48 = new L.geoJson(json_SistemasdeTransporteLugarestemporales_48, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteLugarestemporales_48',
            layerName: 'layer_SistemasdeTransporteLugarestemporales_48',
            pane: 'pane_SistemasdeTransporteLugarestemporales_48',
            onEachFeature: pop_SistemasdeTransporteLugarestemporales_48,
            style: style_SistemasdeTransporteLugarestemporales_48_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteLugarestemporales_48);
        map.addLayer(layer_SistemasdeTransporteLugarestemporales_48);
        function pop_SistemasdeTransporteLneas_49(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteLneas_49_0() {
            return {
                pane: 'pane_SistemasdeTransporteLneas_49',
                opacity: 1,
                color: 'rgba(229,182,54,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteLneas_49');
        map.getPane('pane_SistemasdeTransporteLneas_49').style.zIndex = 449;
        map.getPane('pane_SistemasdeTransporteLneas_49').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteLneas_49 = new L.geoJson(json_SistemasdeTransporteLneas_49, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteLneas_49',
            layerName: 'layer_SistemasdeTransporteLneas_49',
            pane: 'pane_SistemasdeTransporteLneas_49',
            onEachFeature: pop_SistemasdeTransporteLneas_49,
            style: style_SistemasdeTransporteLneas_49_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteLneas_49);
        map.addLayer(layer_SistemasdeTransporteLneas_49);
        function pop_SistemasdeTransporteLineFeatures8_50(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteLineFeatures8_50_0() {
            return {
                pane: 'pane_SistemasdeTransporteLineFeatures8_50',
                opacity: 1,
                color: 'rgba(190,178,151,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteLineFeatures8_50');
        map.getPane('pane_SistemasdeTransporteLineFeatures8_50').style.zIndex = 450;
        map.getPane('pane_SistemasdeTransporteLineFeatures8_50').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteLineFeatures8_50 = new L.geoJson(json_SistemasdeTransporteLineFeatures8_50, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteLineFeatures8_50',
            layerName: 'layer_SistemasdeTransporteLineFeatures8_50',
            pane: 'pane_SistemasdeTransporteLineFeatures8_50',
            onEachFeature: pop_SistemasdeTransporteLineFeatures8_50,
            style: style_SistemasdeTransporteLineFeatures8_50_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteLineFeatures8_50);
        map.addLayer(layer_SistemasdeTransporteLineFeatures8_50);
        function pop_SistemasdeTransporteLineFeatures7_51(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteLineFeatures7_51_0() {
            return {
                pane: 'pane_SistemasdeTransporteLineFeatures7_51',
                opacity: 1,
                color: 'rgba(145,82,45,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteLineFeatures7_51');
        map.getPane('pane_SistemasdeTransporteLineFeatures7_51').style.zIndex = 451;
        map.getPane('pane_SistemasdeTransporteLineFeatures7_51').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteLineFeatures7_51 = new L.geoJson(json_SistemasdeTransporteLineFeatures7_51, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteLineFeatures7_51',
            layerName: 'layer_SistemasdeTransporteLineFeatures7_51',
            pane: 'pane_SistemasdeTransporteLineFeatures7_51',
            onEachFeature: pop_SistemasdeTransporteLineFeatures7_51,
            style: style_SistemasdeTransporteLineFeatures7_51_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteLineFeatures7_51);
        map.addLayer(layer_SistemasdeTransporteLineFeatures7_51);
        function pop_SistemasdeTransporteLineFeatures6_52(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteLineFeatures6_52_0() {
            return {
                pane: 'pane_SistemasdeTransporteLineFeatures6_52',
                opacity: 1,
                color: 'rgba(133,182,111,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteLineFeatures6_52');
        map.getPane('pane_SistemasdeTransporteLineFeatures6_52').style.zIndex = 452;
        map.getPane('pane_SistemasdeTransporteLineFeatures6_52').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteLineFeatures6_52 = new L.geoJson(json_SistemasdeTransporteLineFeatures6_52, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteLineFeatures6_52',
            layerName: 'layer_SistemasdeTransporteLineFeatures6_52',
            pane: 'pane_SistemasdeTransporteLineFeatures6_52',
            onEachFeature: pop_SistemasdeTransporteLineFeatures6_52,
            style: style_SistemasdeTransporteLineFeatures6_52_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteLineFeatures6_52);
        map.addLayer(layer_SistemasdeTransporteLineFeatures6_52);
        function pop_SistemasdeTransporteLineFeatures5_53(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteLineFeatures5_53_0() {
            return {
                pane: 'pane_SistemasdeTransporteLineFeatures5_53',
                opacity: 1,
                color: 'rgba(164,113,88,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteLineFeatures5_53');
        map.getPane('pane_SistemasdeTransporteLineFeatures5_53').style.zIndex = 453;
        map.getPane('pane_SistemasdeTransporteLineFeatures5_53').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteLineFeatures5_53 = new L.geoJson(json_SistemasdeTransporteLineFeatures5_53, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteLineFeatures5_53',
            layerName: 'layer_SistemasdeTransporteLineFeatures5_53',
            pane: 'pane_SistemasdeTransporteLineFeatures5_53',
            onEachFeature: pop_SistemasdeTransporteLineFeatures5_53,
            style: style_SistemasdeTransporteLineFeatures5_53_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteLineFeatures5_53);
        map.addLayer(layer_SistemasdeTransporteLineFeatures5_53);
        function pop_SistemasdeTransporteLineFeatures4_54(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteLineFeatures4_54_0() {
            return {
                pane: 'pane_SistemasdeTransporteLineFeatures4_54',
                opacity: 1,
                color: 'rgba(213,180,60,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteLineFeatures4_54');
        map.getPane('pane_SistemasdeTransporteLineFeatures4_54').style.zIndex = 454;
        map.getPane('pane_SistemasdeTransporteLineFeatures4_54').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteLineFeatures4_54 = new L.geoJson(json_SistemasdeTransporteLineFeatures4_54, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteLineFeatures4_54',
            layerName: 'layer_SistemasdeTransporteLineFeatures4_54',
            pane: 'pane_SistemasdeTransporteLineFeatures4_54',
            onEachFeature: pop_SistemasdeTransporteLineFeatures4_54,
            style: style_SistemasdeTransporteLineFeatures4_54_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteLineFeatures4_54);
        map.addLayer(layer_SistemasdeTransporteLineFeatures4_54);
        function pop_SistemasdeTransporteLineFeatures3_55(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteLineFeatures3_55_0() {
            return {
                pane: 'pane_SistemasdeTransporteLineFeatures3_55',
                opacity: 1,
                color: 'rgba(114,155,111,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteLineFeatures3_55');
        map.getPane('pane_SistemasdeTransporteLineFeatures3_55').style.zIndex = 455;
        map.getPane('pane_SistemasdeTransporteLineFeatures3_55').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteLineFeatures3_55 = new L.geoJson(json_SistemasdeTransporteLineFeatures3_55, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteLineFeatures3_55',
            layerName: 'layer_SistemasdeTransporteLineFeatures3_55',
            pane: 'pane_SistemasdeTransporteLineFeatures3_55',
            onEachFeature: pop_SistemasdeTransporteLineFeatures3_55,
            style: style_SistemasdeTransporteLineFeatures3_55_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteLineFeatures3_55);
        map.addLayer(layer_SistemasdeTransporteLineFeatures3_55);
        function pop_SistemasdeTransporteLineFeatures2_56(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteLineFeatures2_56_0() {
            return {
                pane: 'pane_SistemasdeTransporteLineFeatures2_56',
                opacity: 1,
                color: 'rgba(243,166,178,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteLineFeatures2_56');
        map.getPane('pane_SistemasdeTransporteLineFeatures2_56').style.zIndex = 456;
        map.getPane('pane_SistemasdeTransporteLineFeatures2_56').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteLineFeatures2_56 = new L.geoJson(json_SistemasdeTransporteLineFeatures2_56, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteLineFeatures2_56',
            layerName: 'layer_SistemasdeTransporteLineFeatures2_56',
            pane: 'pane_SistemasdeTransporteLineFeatures2_56',
            onEachFeature: pop_SistemasdeTransporteLineFeatures2_56,
            style: style_SistemasdeTransporteLineFeatures2_56_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteLineFeatures2_56);
        map.addLayer(layer_SistemasdeTransporteLineFeatures2_56);
        function pop_SistemasdeTransporteLineFeatures_57(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteLineFeatures_57_0() {
            return {
                pane: 'pane_SistemasdeTransporteLineFeatures_57',
                opacity: 1,
                color: 'rgba(141,90,153,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteLineFeatures_57');
        map.getPane('pane_SistemasdeTransporteLineFeatures_57').style.zIndex = 457;
        map.getPane('pane_SistemasdeTransporteLineFeatures_57').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteLineFeatures_57 = new L.geoJson(json_SistemasdeTransporteLineFeatures_57, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteLineFeatures_57',
            layerName: 'layer_SistemasdeTransporteLineFeatures_57',
            pane: 'pane_SistemasdeTransporteLineFeatures_57',
            onEachFeature: pop_SistemasdeTransporteLineFeatures_57,
            style: style_SistemasdeTransporteLineFeatures_57_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteLineFeatures_57);
        map.addLayer(layer_SistemasdeTransporteLineFeatures_57);
        function pop_SistemasdeTransporteISJIAtlacomulco_58(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteISJIAtlacomulco_58_0() {
            return {
                pane: 'pane_SistemasdeTransporteISJIAtlacomulco_58',
                opacity: 1,
                color: 'rgba(255,158,23,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteISJIAtlacomulco_58');
        map.getPane('pane_SistemasdeTransporteISJIAtlacomulco_58').style.zIndex = 458;
        map.getPane('pane_SistemasdeTransporteISJIAtlacomulco_58').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteISJIAtlacomulco_58 = new L.geoJson(json_SistemasdeTransporteISJIAtlacomulco_58, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteISJIAtlacomulco_58',
            layerName: 'layer_SistemasdeTransporteISJIAtlacomulco_58',
            pane: 'pane_SistemasdeTransporteISJIAtlacomulco_58',
            onEachFeature: pop_SistemasdeTransporteISJIAtlacomulco_58,
            style: style_SistemasdeTransporteISJIAtlacomulco_58_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteISJIAtlacomulco_58);
        map.addLayer(layer_SistemasdeTransporteISJIAtlacomulco_58);
        function pop_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Descripci__n'] !== null ? autolinker.link(feature.properties['Descripci__n'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Proyecto'] !== null ? autolinker.link(feature.properties['Proyecto'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['CAP_MMPCD'] !== null ? autolinker.link(feature.properties['CAP_MMPCD'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['INV_MMUSD'] !== null ? autolinker.link(feature.properties['INV_MMUSD'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['DESARROLLA'] !== null ? autolinker.link(feature.properties['DESARROLLA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['PROMOTOR'] !== null ? autolinker.link(feature.properties['PROMOTOR'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['LONGITUD_K'] !== null ? autolinker.link(feature.properties['LONGITUD_K'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Tramo'] !== null ? autolinker.link(feature.properties['Tramo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['PERMISO'] !== null ? autolinker.link(feature.properties['PERMISO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['INICIO_OP'] !== null ? autolinker.link(feature.properties['INICIO_OP'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['INTEGRADO'] !== null ? autolinker.link(feature.properties['INTEGRADO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['NOTA'] !== null ? autolinker.link(feature.properties['NOTA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59_0() {
            return {
                pane: 'pane_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59',
                opacity: 1,
                color: 'rgba(190,207,80,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59');
        map.getPane('pane_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59').style.zIndex = 459;
        map.getPane('pane_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59 = new L.geoJson(json_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59',
            layerName: 'layer_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59',
            pane: 'pane_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59',
            onEachFeature: pop_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59,
            style: style_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59);
        map.addLayer(layer_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59);
        function pop_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60_0() {
            return {
                pane: 'pane_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60',
                opacity: 1,
                color: 'rgba(229,182,54,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60');
        map.getPane('pane_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60').style.zIndex = 460;
        map.getPane('pane_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60 = new L.geoJson(json_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60',
            layerName: 'layer_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60',
            pane: 'pane_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60',
            onEachFeature: pop_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60,
            style: style_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60);
        map.addLayer(layer_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60);
        function pop_SistemasdeTransporteHigueros_61(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteHigueros_61_0() {
            return {
                pane: 'pane_SistemasdeTransporteHigueros_61',
                opacity: 1,
                color: 'rgba(229,182,54,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteHigueros_61');
        map.getPane('pane_SistemasdeTransporteHigueros_61').style.zIndex = 461;
        map.getPane('pane_SistemasdeTransporteHigueros_61').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteHigueros_61 = new L.geoJson(json_SistemasdeTransporteHigueros_61, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteHigueros_61',
            layerName: 'layer_SistemasdeTransporteHigueros_61',
            pane: 'pane_SistemasdeTransporteHigueros_61',
            onEachFeature: pop_SistemasdeTransporteHigueros_61,
            style: style_SistemasdeTransporteHigueros_61_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteHigueros_61);
        map.addLayer(layer_SistemasdeTransporteHigueros_61);
        function pop_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62_0() {
            return {
                pane: 'pane_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62',
                opacity: 1,
                color: 'rgba(255,158,23,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62');
        map.getPane('pane_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62').style.zIndex = 462;
        map.getPane('pane_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62 = new L.geoJson(json_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62',
            layerName: 'layer_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62',
            pane: 'pane_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62',
            onEachFeature: pop_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62,
            style: style_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62);
        map.addLayer(layer_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62);
        function pop_SistemasdeTransporteGNdelValle2_63(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteGNdelValle2_63_0() {
            return {
                pane: 'pane_SistemasdeTransporteGNdelValle2_63',
                opacity: 1,
                color: 'rgba(231,113,72,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteGNdelValle2_63');
        map.getPane('pane_SistemasdeTransporteGNdelValle2_63').style.zIndex = 463;
        map.getPane('pane_SistemasdeTransporteGNdelValle2_63').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteGNdelValle2_63 = new L.geoJson(json_SistemasdeTransporteGNdelValle2_63, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteGNdelValle2_63',
            layerName: 'layer_SistemasdeTransporteGNdelValle2_63',
            pane: 'pane_SistemasdeTransporteGNdelValle2_63',
            onEachFeature: pop_SistemasdeTransporteGNdelValle2_63,
            style: style_SistemasdeTransporteGNdelValle2_63_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteGNdelValle2_63);
        map.addLayer(layer_SistemasdeTransporteGNdelValle2_63);
        function pop_SistemasdeTransporteGasoducto30in_64(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteGasoducto30in_64_0() {
            return {
                pane: 'pane_SistemasdeTransporteGasoducto30in_64',
                opacity: 1,
                color: 'rgba(190,207,80,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteGasoducto30in_64');
        map.getPane('pane_SistemasdeTransporteGasoducto30in_64').style.zIndex = 464;
        map.getPane('pane_SistemasdeTransporteGasoducto30in_64').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteGasoducto30in_64 = new L.geoJson(json_SistemasdeTransporteGasoducto30in_64, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteGasoducto30in_64',
            layerName: 'layer_SistemasdeTransporteGasoducto30in_64',
            pane: 'pane_SistemasdeTransporteGasoducto30in_64',
            onEachFeature: pop_SistemasdeTransporteGasoducto30in_64,
            style: style_SistemasdeTransporteGasoducto30in_64_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteGasoducto30in_64);
        map.addLayer(layer_SistemasdeTransporteGasoducto30in_64);
        function pop_SistemasdeTransporteGasoducto24in_65(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteGasoducto24in_65_0() {
            return {
                pane: 'pane_SistemasdeTransporteGasoducto24in_65',
                opacity: 1,
                color: 'rgba(229,182,54,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteGasoducto24in_65');
        map.getPane('pane_SistemasdeTransporteGasoducto24in_65').style.zIndex = 465;
        map.getPane('pane_SistemasdeTransporteGasoducto24in_65').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteGasoducto24in_65 = new L.geoJson(json_SistemasdeTransporteGasoducto24in_65, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteGasoducto24in_65',
            layerName: 'layer_SistemasdeTransporteGasoducto24in_65',
            pane: 'pane_SistemasdeTransporteGasoducto24in_65',
            onEachFeature: pop_SistemasdeTransporteGasoducto24in_65,
            style: style_SistemasdeTransporteGasoducto24in_65_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteGasoducto24in_65);
        map.addLayer(layer_SistemasdeTransporteGasoducto24in_65);
        function pop_SistemasdeTransporteGasoducto22in_66(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteGasoducto22in_66_0() {
            return {
                pane: 'pane_SistemasdeTransporteGasoducto22in_66',
                opacity: 1,
                color: 'rgba(190,178,151,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteGasoducto22in_66');
        map.getPane('pane_SistemasdeTransporteGasoducto22in_66').style.zIndex = 466;
        map.getPane('pane_SistemasdeTransporteGasoducto22in_66').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteGasoducto22in_66 = new L.geoJson(json_SistemasdeTransporteGasoducto22in_66, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteGasoducto22in_66',
            layerName: 'layer_SistemasdeTransporteGasoducto22in_66',
            pane: 'pane_SistemasdeTransporteGasoducto22in_66',
            onEachFeature: pop_SistemasdeTransporteGasoducto22in_66,
            style: style_SistemasdeTransporteGasoducto22in_66_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteGasoducto22in_66);
        map.addLayer(layer_SistemasdeTransporteGasoducto22in_66);
        function pop_SistemasdeTransporteGasoducto16in_67(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteGasoducto16in_67_0() {
            return {
                pane: 'pane_SistemasdeTransporteGasoducto16in_67',
                opacity: 1,
                color: 'rgba(125,139,143,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteGasoducto16in_67');
        map.getPane('pane_SistemasdeTransporteGasoducto16in_67').style.zIndex = 467;
        map.getPane('pane_SistemasdeTransporteGasoducto16in_67').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteGasoducto16in_67 = new L.geoJson(json_SistemasdeTransporteGasoducto16in_67, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteGasoducto16in_67',
            layerName: 'layer_SistemasdeTransporteGasoducto16in_67',
            pane: 'pane_SistemasdeTransporteGasoducto16in_67',
            onEachFeature: pop_SistemasdeTransporteGasoducto16in_67,
            style: style_SistemasdeTransporteGasoducto16in_67_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteGasoducto16in_67);
        map.addLayer(layer_SistemasdeTransporteGasoducto16in_67);
        function pop_SistemasdeTransporteGasoducto12ACMolex_68(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteGasoducto12ACMolex_68_0() {
            return {
                pane: 'pane_SistemasdeTransporteGasoducto12ACMolex_68',
                opacity: 1,
                color: 'rgba(164,113,88,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteGasoducto12ACMolex_68');
        map.getPane('pane_SistemasdeTransporteGasoducto12ACMolex_68').style.zIndex = 468;
        map.getPane('pane_SistemasdeTransporteGasoducto12ACMolex_68').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteGasoducto12ACMolex_68 = new L.geoJson(json_SistemasdeTransporteGasoducto12ACMolex_68, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteGasoducto12ACMolex_68',
            layerName: 'layer_SistemasdeTransporteGasoducto12ACMolex_68',
            pane: 'pane_SistemasdeTransporteGasoducto12ACMolex_68',
            onEachFeature: pop_SistemasdeTransporteGasoducto12ACMolex_68,
            style: style_SistemasdeTransporteGasoducto12ACMolex_68_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteGasoducto12ACMolex_68);
        map.addLayer(layer_SistemasdeTransporteGasoducto12ACMolex_68);
        function pop_SistemasdeTransporteGasoducto12in_69(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteGasoducto12in_69_0() {
            return {
                pane: 'pane_SistemasdeTransporteGasoducto12in_69',
                opacity: 1,
                color: 'rgba(213,180,60,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteGasoducto12in_69');
        map.getPane('pane_SistemasdeTransporteGasoducto12in_69').style.zIndex = 469;
        map.getPane('pane_SistemasdeTransporteGasoducto12in_69').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteGasoducto12in_69 = new L.geoJson(json_SistemasdeTransporteGasoducto12in_69, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteGasoducto12in_69',
            layerName: 'layer_SistemasdeTransporteGasoducto12in_69',
            pane: 'pane_SistemasdeTransporteGasoducto12in_69',
            onEachFeature: pop_SistemasdeTransporteGasoducto12in_69,
            style: style_SistemasdeTransporteGasoducto12in_69_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteGasoducto12in_69);
        map.addLayer(layer_SistemasdeTransporteGasoducto12in_69);
        function pop_SistemasdeTransporteGasoducto10in_70(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteGasoducto10in_70_0() {
            return {
                pane: 'pane_SistemasdeTransporteGasoducto10in_70',
                opacity: 1,
                color: 'rgba(243,166,178,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteGasoducto10in_70');
        map.getPane('pane_SistemasdeTransporteGasoducto10in_70').style.zIndex = 470;
        map.getPane('pane_SistemasdeTransporteGasoducto10in_70').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteGasoducto10in_70 = new L.geoJson(json_SistemasdeTransporteGasoducto10in_70, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteGasoducto10in_70',
            layerName: 'layer_SistemasdeTransporteGasoducto10in_70',
            pane: 'pane_SistemasdeTransporteGasoducto10in_70',
            onEachFeature: pop_SistemasdeTransporteGasoducto10in_70,
            style: style_SistemasdeTransporteGasoducto10in_70_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteGasoducto10in_70);
        map.addLayer(layer_SistemasdeTransporteGasoducto10in_70);
        function pop_SistemasdeTransporteGasoducto3_71(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteGasoducto3_71_0() {
            return {
                pane: 'pane_SistemasdeTransporteGasoducto3_71',
                opacity: 1,
                color: 'rgba(232,113,141,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteGasoducto3_71');
        map.getPane('pane_SistemasdeTransporteGasoducto3_71').style.zIndex = 471;
        map.getPane('pane_SistemasdeTransporteGasoducto3_71').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteGasoducto3_71 = new L.geoJson(json_SistemasdeTransporteGasoducto3_71, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteGasoducto3_71',
            layerName: 'layer_SistemasdeTransporteGasoducto3_71',
            pane: 'pane_SistemasdeTransporteGasoducto3_71',
            onEachFeature: pop_SistemasdeTransporteGasoducto3_71,
            style: style_SistemasdeTransporteGasoducto3_71_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteGasoducto3_71);
        map.addLayer(layer_SistemasdeTransporteGasoducto3_71);
        function pop_SistemasdeTransporteGasodcuto36in_72(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteGasodcuto36in_72_0() {
            return {
                pane: 'pane_SistemasdeTransporteGasodcuto36in_72',
                opacity: 1,
                color: 'rgba(255,158,23,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteGasodcuto36in_72');
        map.getPane('pane_SistemasdeTransporteGasodcuto36in_72').style.zIndex = 472;
        map.getPane('pane_SistemasdeTransporteGasodcuto36in_72').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteGasodcuto36in_72 = new L.geoJson(json_SistemasdeTransporteGasodcuto36in_72, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteGasodcuto36in_72',
            layerName: 'layer_SistemasdeTransporteGasodcuto36in_72',
            pane: 'pane_SistemasdeTransporteGasodcuto36in_72',
            onEachFeature: pop_SistemasdeTransporteGasodcuto36in_72,
            style: style_SistemasdeTransporteGasodcuto36in_72_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteGasodcuto36in_72);
        map.addLayer(layer_SistemasdeTransporteGasodcuto36in_72);
        function pop_SistemasdeTransporteGASLINE_73(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteGASLINE_73_0() {
            return {
                pane: 'pane_SistemasdeTransporteGASLINE_73',
                opacity: 1,
                color: 'rgba(152,125,183,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteGASLINE_73');
        map.getPane('pane_SistemasdeTransporteGASLINE_73').style.zIndex = 473;
        map.getPane('pane_SistemasdeTransporteGASLINE_73').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteGASLINE_73 = new L.geoJson(json_SistemasdeTransporteGASLINE_73, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteGASLINE_73',
            layerName: 'layer_SistemasdeTransporteGASLINE_73',
            pane: 'pane_SistemasdeTransporteGASLINE_73',
            onEachFeature: pop_SistemasdeTransporteGASLINE_73,
            style: style_SistemasdeTransporteGASLINE_73_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteGASLINE_73);
        map.addLayer(layer_SistemasdeTransporteGASLINE_73);
        function pop_SistemasdeTransporteFALLADISPAROPGIL_74(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteFALLADISPAROPGIL_74_0() {
            return {
                pane: 'pane_SistemasdeTransporteFALLADISPAROPGIL_74',
                opacity: 1,
                color: 'rgba(190,207,80,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteFALLADISPAROPGIL_74');
        map.getPane('pane_SistemasdeTransporteFALLADISPAROPGIL_74').style.zIndex = 474;
        map.getPane('pane_SistemasdeTransporteFALLADISPAROPGIL_74').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteFALLADISPAROPGIL_74 = new L.geoJson(json_SistemasdeTransporteFALLADISPAROPGIL_74, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteFALLADISPAROPGIL_74',
            layerName: 'layer_SistemasdeTransporteFALLADISPAROPGIL_74',
            pane: 'pane_SistemasdeTransporteFALLADISPAROPGIL_74',
            onEachFeature: pop_SistemasdeTransporteFALLADISPAROPGIL_74,
            style: style_SistemasdeTransporteFALLADISPAROPGIL_74_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteFALLADISPAROPGIL_74);
        map.addLayer(layer_SistemasdeTransporteFALLADISPAROPGIL_74);
        function pop_SistemasdeTransporteDuctos2_75(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['snippet'] !== null ? autolinker.link(feature.properties['snippet'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteDuctos2_75_0() {
            return {
                pane: 'pane_SistemasdeTransporteDuctos2_75',
                opacity: 1,
                color: 'rgba(145,82,45,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteDuctos2_75');
        map.getPane('pane_SistemasdeTransporteDuctos2_75').style.zIndex = 475;
        map.getPane('pane_SistemasdeTransporteDuctos2_75').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteDuctos2_75 = new L.geoJson(json_SistemasdeTransporteDuctos2_75, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteDuctos2_75',
            layerName: 'layer_SistemasdeTransporteDuctos2_75',
            pane: 'pane_SistemasdeTransporteDuctos2_75',
            onEachFeature: pop_SistemasdeTransporteDuctos2_75,
            style: style_SistemasdeTransporteDuctos2_75_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteDuctos2_75);
        map.addLayer(layer_SistemasdeTransporteDuctos2_75);
        function pop_SistemasdeTransporteDucto42deCS3AEA_76(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteDucto42deCS3AEA_76_0() {
            return {
                pane: 'pane_SistemasdeTransporteDucto42deCS3AEA_76',
                opacity: 1,
                color: 'rgba(133,182,111,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteDucto42deCS3AEA_76');
        map.getPane('pane_SistemasdeTransporteDucto42deCS3AEA_76').style.zIndex = 476;
        map.getPane('pane_SistemasdeTransporteDucto42deCS3AEA_76').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteDucto42deCS3AEA_76 = new L.geoJson(json_SistemasdeTransporteDucto42deCS3AEA_76, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteDucto42deCS3AEA_76',
            layerName: 'layer_SistemasdeTransporteDucto42deCS3AEA_76',
            pane: 'pane_SistemasdeTransporteDucto42deCS3AEA_76',
            onEachFeature: pop_SistemasdeTransporteDucto42deCS3AEA_76,
            style: style_SistemasdeTransporteDucto42deCS3AEA_76_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteDucto42deCS3AEA_76);
        map.addLayer(layer_SistemasdeTransporteDucto42deCS3AEA_76);
        function pop_SistemasdeTransporteDucto24in_77(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteDucto24in_77_0() {
            return {
                pane: 'pane_SistemasdeTransporteDucto24in_77',
                opacity: 1,
                color: 'rgba(213,180,60,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteDucto24in_77');
        map.getPane('pane_SistemasdeTransporteDucto24in_77').style.zIndex = 477;
        map.getPane('pane_SistemasdeTransporteDucto24in_77').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteDucto24in_77 = new L.geoJson(json_SistemasdeTransporteDucto24in_77, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteDucto24in_77',
            layerName: 'layer_SistemasdeTransporteDucto24in_77',
            pane: 'pane_SistemasdeTransporteDucto24in_77',
            onEachFeature: pop_SistemasdeTransporteDucto24in_77,
            style: style_SistemasdeTransporteDucto24in_77_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteDucto24in_77);
        map.addLayer(layer_SistemasdeTransporteDucto24in_77);
        function pop_SistemasdeTransporteDucto16deSLPLaPila_78(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteDucto16deSLPLaPila_78_0() {
            return {
                pane: 'pane_SistemasdeTransporteDucto16deSLPLaPila_78',
                opacity: 1,
                color: 'rgba(114,155,111,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteDucto16deSLPLaPila_78');
        map.getPane('pane_SistemasdeTransporteDucto16deSLPLaPila_78').style.zIndex = 478;
        map.getPane('pane_SistemasdeTransporteDucto16deSLPLaPila_78').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteDucto16deSLPLaPila_78 = new L.geoJson(json_SistemasdeTransporteDucto16deSLPLaPila_78, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteDucto16deSLPLaPila_78',
            layerName: 'layer_SistemasdeTransporteDucto16deSLPLaPila_78',
            pane: 'pane_SistemasdeTransporteDucto16deSLPLaPila_78',
            onEachFeature: pop_SistemasdeTransporteDucto16deSLPLaPila_78,
            style: style_SistemasdeTransporteDucto16deSLPLaPila_78_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteDucto16deSLPLaPila_78);
        map.addLayer(layer_SistemasdeTransporteDucto16deSLPLaPila_78);
        function pop_SistemasdeTransporteDIRECCIONALES2_79(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteDIRECCIONALES2_79_0() {
            return {
                pane: 'pane_SistemasdeTransporteDIRECCIONALES2_79',
                opacity: 1,
                color: 'rgba(232,113,141,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteDIRECCIONALES2_79');
        map.getPane('pane_SistemasdeTransporteDIRECCIONALES2_79').style.zIndex = 479;
        map.getPane('pane_SistemasdeTransporteDIRECCIONALES2_79').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteDIRECCIONALES2_79 = new L.geoJson(json_SistemasdeTransporteDIRECCIONALES2_79, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteDIRECCIONALES2_79',
            layerName: 'layer_SistemasdeTransporteDIRECCIONALES2_79',
            pane: 'pane_SistemasdeTransporteDIRECCIONALES2_79',
            onEachFeature: pop_SistemasdeTransporteDIRECCIONALES2_79,
            style: style_SistemasdeTransporteDIRECCIONALES2_79_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteDIRECCIONALES2_79);
        map.addLayer(layer_SistemasdeTransporteDIRECCIONALES2_79);
        function pop_SistemasdeTransporteDireccionales_80(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteDireccionales_80_0() {
            return {
                pane: 'pane_SistemasdeTransporteDireccionales_80',
                opacity: 1,
                color: 'rgba(255,158,23,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteDireccionales_80');
        map.getPane('pane_SistemasdeTransporteDireccionales_80').style.zIndex = 480;
        map.getPane('pane_SistemasdeTransporteDireccionales_80').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteDireccionales_80 = new L.geoJson(json_SistemasdeTransporteDireccionales_80, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteDireccionales_80',
            layerName: 'layer_SistemasdeTransporteDireccionales_80',
            pane: 'pane_SistemasdeTransporteDireccionales_80',
            onEachFeature: pop_SistemasdeTransporteDireccionales_80,
            style: style_SistemasdeTransporteDireccionales_80_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteDireccionales_80);
        map.addLayer(layer_SistemasdeTransporteDireccionales_80);
        function pop_SistemasdeTransporteDDV_81(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteDDV_81_0() {
            return {
                pane: 'pane_SistemasdeTransporteDDV_81',
                opacity: 1,
                color: 'rgba(183,72,75,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteDDV_81');
        map.getPane('pane_SistemasdeTransporteDDV_81').style.zIndex = 481;
        map.getPane('pane_SistemasdeTransporteDDV_81').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteDDV_81 = new L.geoJson(json_SistemasdeTransporteDDV_81, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteDDV_81',
            layerName: 'layer_SistemasdeTransporteDDV_81',
            pane: 'pane_SistemasdeTransporteDDV_81',
            onEachFeature: pop_SistemasdeTransporteDDV_81,
            style: style_SistemasdeTransporteDDV_81_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteDDV_81);
        map.addLayer(layer_SistemasdeTransporteDDV_81);
        function pop_SistemasdeTransporteCSFCTPALM_82(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteCSFCTPALM_82_0() {
            return {
                pane: 'pane_SistemasdeTransporteCSFCTPALM_82',
                opacity: 1,
                color: 'rgba(145,82,45,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteCSFCTPALM_82');
        map.getPane('pane_SistemasdeTransporteCSFCTPALM_82').style.zIndex = 482;
        map.getPane('pane_SistemasdeTransporteCSFCTPALM_82').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteCSFCTPALM_82 = new L.geoJson(json_SistemasdeTransporteCSFCTPALM_82, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteCSFCTPALM_82',
            layerName: 'layer_SistemasdeTransporteCSFCTPALM_82',
            pane: 'pane_SistemasdeTransporteCSFCTPALM_82',
            onEachFeature: pop_SistemasdeTransporteCSFCTPALM_82,
            style: style_SistemasdeTransporteCSFCTPALM_82_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteCSFCTPALM_82);
        map.addLayer(layer_SistemasdeTransporteCSFCTPALM_82);
        function pop_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83_0() {
            return {
                pane: 'pane_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83',
                opacity: 1,
                color: 'rgba(125,139,143,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83');
        map.getPane('pane_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83').style.zIndex = 483;
        map.getPane('pane_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83 = new L.geoJson(json_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83',
            layerName: 'layer_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83',
            pane: 'pane_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83',
            onEachFeature: pop_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83,
            style: style_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83);
        map.addLayer(layer_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83);
        function pop_SistemasdeTransporteCrucesdireccionales_84(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteCrucesdireccionales_84_0() {
            return {
                pane: 'pane_SistemasdeTransporteCrucesdireccionales_84',
                opacity: 1,
                color: 'rgba(133,182,111,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteCrucesdireccionales_84');
        map.getPane('pane_SistemasdeTransporteCrucesdireccionales_84').style.zIndex = 484;
        map.getPane('pane_SistemasdeTransporteCrucesdireccionales_84').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteCrucesdireccionales_84 = new L.geoJson(json_SistemasdeTransporteCrucesdireccionales_84, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteCrucesdireccionales_84',
            layerName: 'layer_SistemasdeTransporteCrucesdireccionales_84',
            pane: 'pane_SistemasdeTransporteCrucesdireccionales_84',
            onEachFeature: pop_SistemasdeTransporteCrucesdireccionales_84,
            style: style_SistemasdeTransporteCrucesdireccionales_84_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteCrucesdireccionales_84);
        map.addLayer(layer_SistemasdeTransporteCrucesdireccionales_84);
        function pop_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85_0() {
            return {
                pane: 'pane_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85',
                opacity: 1,
                color: 'rgba(231,113,72,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85');
        map.getPane('pane_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85').style.zIndex = 485;
        map.getPane('pane_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85 = new L.geoJson(json_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85',
            layerName: 'layer_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85',
            pane: 'pane_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85',
            onEachFeature: pop_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85,
            style: style_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85);
        map.addLayer(layer_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85);
        function pop_SistemasdeTransporteArguelles3_86(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteArguelles3_86_0() {
            return {
                pane: 'pane_SistemasdeTransporteArguelles3_86',
                opacity: 1,
                color: 'rgba(225,89,137,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteArguelles3_86');
        map.getPane('pane_SistemasdeTransporteArguelles3_86').style.zIndex = 486;
        map.getPane('pane_SistemasdeTransporteArguelles3_86').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteArguelles3_86 = new L.geoJson(json_SistemasdeTransporteArguelles3_86, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteArguelles3_86',
            layerName: 'layer_SistemasdeTransporteArguelles3_86',
            pane: 'pane_SistemasdeTransporteArguelles3_86',
            onEachFeature: pop_SistemasdeTransporteArguelles3_86,
            style: style_SistemasdeTransporteArguelles3_86_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteArguelles3_86);
        map.addLayer(layer_SistemasdeTransporteArguelles3_86);
        function pop_SistemasdeTransporteAltamiraV_87(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteAltamiraV_87_0() {
            return {
                pane: 'pane_SistemasdeTransporteAltamiraV_87',
                opacity: 1,
                color: 'rgba(243,166,178,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteAltamiraV_87');
        map.getPane('pane_SistemasdeTransporteAltamiraV_87').style.zIndex = 487;
        map.getPane('pane_SistemasdeTransporteAltamiraV_87').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteAltamiraV_87 = new L.geoJson(json_SistemasdeTransporteAltamiraV_87, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteAltamiraV_87',
            layerName: 'layer_SistemasdeTransporteAltamiraV_87',
            pane: 'pane_SistemasdeTransporteAltamiraV_87',
            onEachFeature: pop_SistemasdeTransporteAltamiraV_87,
            style: style_SistemasdeTransporteAltamiraV_87_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteAltamiraV_87);
        map.addLayer(layer_SistemasdeTransporteAltamiraV_87);
        function pop_SistemasdeTransporteAltamira_88(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporteAltamira_88_0() {
            return {
                pane: 'pane_SistemasdeTransporteAltamira_88',
                opacity: 1,
                color: 'rgba(141,90,153,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporteAltamira_88');
        map.getPane('pane_SistemasdeTransporteAltamira_88').style.zIndex = 488;
        map.getPane('pane_SistemasdeTransporteAltamira_88').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporteAltamira_88 = new L.geoJson(json_SistemasdeTransporteAltamira_88, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporteAltamira_88',
            layerName: 'layer_SistemasdeTransporteAltamira_88',
            pane: 'pane_SistemasdeTransporteAltamira_88',
            onEachFeature: pop_SistemasdeTransporteAltamira_88,
            style: style_SistemasdeTransporteAltamira_88_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporteAltamira_88);
        map.addLayer(layer_SistemasdeTransporteAltamira_88);
        function pop_SistemasdeTransporte4AC_89(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte4AC_89_0() {
            return {
                pane: 'pane_SistemasdeTransporte4AC_89',
                opacity: 1,
                color: 'rgba(232,113,141,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte4AC_89');
        map.getPane('pane_SistemasdeTransporte4AC_89').style.zIndex = 489;
        map.getPane('pane_SistemasdeTransporte4AC_89').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte4AC_89 = new L.geoJson(json_SistemasdeTransporte4AC_89, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte4AC_89',
            layerName: 'layer_SistemasdeTransporte4AC_89',
            pane: 'pane_SistemasdeTransporte4AC_89',
            onEachFeature: pop_SistemasdeTransporte4AC_89,
            style: style_SistemasdeTransporte4AC_89_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte4AC_89);
        map.addLayer(layer_SistemasdeTransporte4AC_89);
        function pop_SistemasdeTransporte3DPROPROPUESTAFINAL_90(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte3DPROPROPUESTAFINAL_90_0() {
            return {
                pane: 'pane_SistemasdeTransporte3DPROPROPUESTAFINAL_90',
                opacity: 1,
                color: 'rgba(183,72,75,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte3DPROPROPUESTAFINAL_90');
        map.getPane('pane_SistemasdeTransporte3DPROPROPUESTAFINAL_90').style.zIndex = 490;
        map.getPane('pane_SistemasdeTransporte3DPROPROPUESTAFINAL_90').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte3DPROPROPUESTAFINAL_90 = new L.geoJson(json_SistemasdeTransporte3DPROPROPUESTAFINAL_90, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte3DPROPROPUESTAFINAL_90',
            layerName: 'layer_SistemasdeTransporte3DPROPROPUESTAFINAL_90',
            pane: 'pane_SistemasdeTransporte3DPROPROPUESTAFINAL_90',
            onEachFeature: pop_SistemasdeTransporte3DPROPROPUESTAFINAL_90,
            style: style_SistemasdeTransporte3DPROPROPUESTAFINAL_90_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte3DPROPROPUESTAFINAL_90);
        map.addLayer(layer_SistemasdeTransporte3DPROPROPUESTAFINAL_90);
        function pop_SistemasdeTransporte3AC2_91(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte3AC2_91_0() {
            return {
                pane: 'pane_SistemasdeTransporte3AC2_91',
                opacity: 1,
                color: 'rgba(232,113,141,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte3AC2_91');
        map.getPane('pane_SistemasdeTransporte3AC2_91').style.zIndex = 491;
        map.getPane('pane_SistemasdeTransporte3AC2_91').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte3AC2_91 = new L.geoJson(json_SistemasdeTransporte3AC2_91, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte3AC2_91',
            layerName: 'layer_SistemasdeTransporte3AC2_91',
            pane: 'pane_SistemasdeTransporte3AC2_91',
            onEachFeature: pop_SistemasdeTransporte3AC2_91,
            style: style_SistemasdeTransporte3AC2_91_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte3AC2_91);
        map.addLayer(layer_SistemasdeTransporte3AC2_91);
        function pop_SistemasdeTransporte3AC_92(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte3AC_92_0() {
            return {
                pane: 'pane_SistemasdeTransporte3AC_92',
                opacity: 1,
                color: 'rgba(255,158,23,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte3AC_92');
        map.getPane('pane_SistemasdeTransporte3AC_92').style.zIndex = 492;
        map.getPane('pane_SistemasdeTransporte3AC_92').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte3AC_92 = new L.geoJson(json_SistemasdeTransporte3AC_92, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte3AC_92',
            layerName: 'layer_SistemasdeTransporte3AC_92',
            pane: 'pane_SistemasdeTransporte3AC_92',
            onEachFeature: pop_SistemasdeTransporte3AC_92,
            style: style_SistemasdeTransporte3AC_92_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte3AC_92);
        map.addLayer(layer_SistemasdeTransporte3AC_92);
        function pop_SistemasdeTransporte16AC_93(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte16AC_93_0() {
            return {
                pane: 'pane_SistemasdeTransporte16AC_93',
                opacity: 1,
                color: 'rgba(183,72,75,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte16AC_93');
        map.getPane('pane_SistemasdeTransporte16AC_93').style.zIndex = 493;
        map.getPane('pane_SistemasdeTransporte16AC_93').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte16AC_93 = new L.geoJson(json_SistemasdeTransporte16AC_93, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte16AC_93',
            layerName: 'layer_SistemasdeTransporte16AC_93',
            pane: 'pane_SistemasdeTransporte16AC_93',
            onEachFeature: pop_SistemasdeTransporte16AC_93,
            style: style_SistemasdeTransporte16AC_93_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte16AC_93);
        map.addLayer(layer_SistemasdeTransporte16AC_93);
        function pop_SistemasdeTransporte12AC2_94(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte12AC2_94_0() {
            return {
                pane: 'pane_SistemasdeTransporte12AC2_94',
                opacity: 1,
                color: 'rgba(231,113,72,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte12AC2_94');
        map.getPane('pane_SistemasdeTransporte12AC2_94').style.zIndex = 494;
        map.getPane('pane_SistemasdeTransporte12AC2_94').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte12AC2_94 = new L.geoJson(json_SistemasdeTransporte12AC2_94, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte12AC2_94',
            layerName: 'layer_SistemasdeTransporte12AC2_94',
            pane: 'pane_SistemasdeTransporte12AC2_94',
            onEachFeature: pop_SistemasdeTransporte12AC2_94,
            style: style_SistemasdeTransporte12AC2_94_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte12AC2_94);
        map.addLayer(layer_SistemasdeTransporte12AC2_94);
        function pop_SistemasdeTransporte12AC_95(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte12AC_95_0() {
            return {
                pane: 'pane_SistemasdeTransporte12AC_95',
                opacity: 1,
                color: 'rgba(152,125,183,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte12AC_95');
        map.getPane('pane_SistemasdeTransporte12AC_95').style.zIndex = 495;
        map.getPane('pane_SistemasdeTransporte12AC_95').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte12AC_95 = new L.geoJson(json_SistemasdeTransporte12AC_95, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte12AC_95',
            layerName: 'layer_SistemasdeTransporte12AC_95',
            pane: 'pane_SistemasdeTransporte12AC_95',
            onEachFeature: pop_SistemasdeTransporte12AC_95,
            style: style_SistemasdeTransporte12AC_95_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte12AC_95);
        map.addLayer(layer_SistemasdeTransporte12AC_95);
        function pop_SistemasdeTransporte04_SNH_96(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte04_SNH_96_0() {
            return {
                pane: 'pane_SistemasdeTransporte04_SNH_96',
                opacity: 1,
                color: 'rgba(190,207,80,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte04_SNH_96');
        map.getPane('pane_SistemasdeTransporte04_SNH_96').style.zIndex = 496;
        map.getPane('pane_SistemasdeTransporte04_SNH_96').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte04_SNH_96 = new L.geoJson(json_SistemasdeTransporte04_SNH_96, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte04_SNH_96',
            layerName: 'layer_SistemasdeTransporte04_SNH_96',
            pane: 'pane_SistemasdeTransporte04_SNH_96',
            onEachFeature: pop_SistemasdeTransporte04_SNH_96,
            style: style_SistemasdeTransporte04_SNH_96_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte04_SNH_96);
        map.addLayer(layer_SistemasdeTransporte04_SNH_96);
        function pop_SistemasdeTransporte01_SNG_97(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['description'] !== null ? autolinker.link(feature.properties['description'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['altitudeMode'] !== null ? autolinker.link(feature.properties['altitudeMode'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SistemasdeTransporte01_SNG_97_0() {
            return {
                pane: 'pane_SistemasdeTransporte01_SNG_97',
                opacity: 1,
                color: 'rgba(225,89,137,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: false,
            }
        }
        map.createPane('pane_SistemasdeTransporte01_SNG_97');
        map.getPane('pane_SistemasdeTransporte01_SNG_97').style.zIndex = 497;
        map.getPane('pane_SistemasdeTransporte01_SNG_97').style['mix-blend-mode'] = 'normal';
        var layer_SistemasdeTransporte01_SNG_97 = new L.geoJson(json_SistemasdeTransporte01_SNG_97, {
            attribution: '',
            interactive: false,
            dataVar: 'json_SistemasdeTransporte01_SNG_97',
            layerName: 'layer_SistemasdeTransporte01_SNG_97',
            pane: 'pane_SistemasdeTransporte01_SNG_97',
            onEachFeature: pop_SistemasdeTransporte01_SNG_97,
            style: style_SistemasdeTransporte01_SNG_97_0,
        });
        bounds_group.addLayer(layer_SistemasdeTransporte01_SNG_97);
        map.addLayer(layer_SistemasdeTransporte01_SNG_97);
        function pop_ExpendiosGN_98(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de Permiso</strong><br />' + (feature.properties['Número de Permiso'] !== null ? autolinker.link(feature.properties['Número de Permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Razón Social</th>\
                        <td>' + (feature.properties['Razón Social'] !== null ? autolinker.link(feature.properties['Razón Social'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Domicilio del Predio</th>\
                        <td>' + (feature.properties['Domicilio del Predio'] !== null ? autolinker.link(feature.properties['Domicilio del Predio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Municipio</th>\
                        <td>' + (feature.properties['Municipio'] !== null ? autolinker.link(feature.properties['Municipio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado</th>\
                        <td>' + (feature.properties['Estado'] !== null ? autolinker.link(feature.properties['Estado'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_ExpendiosGN_98_0() {
            return {
                pane: 'pane_ExpendiosGN_98',
                radius: 4.0,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(196,60,57,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_ExpendiosGN_98');
        map.getPane('pane_ExpendiosGN_98').style.zIndex = 498;
        map.getPane('pane_ExpendiosGN_98').style['mix-blend-mode'] = 'normal';
        var layer_ExpendiosGN_98 = new L.geoJson(json_ExpendiosGN_98, {
            attribution: '',
            interactive: true,
            dataVar: 'json_ExpendiosGN_98',
            layerName: 'layer_ExpendiosGN_98',
            pane: 'pane_ExpendiosGN_98',
            onEachFeature: pop_ExpendiosGN_98,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.circleMarker(latlng, style_ExpendiosGN_98_0(feature));
            },
        });
        bounds_group.addLayer(layer_ExpendiosGN_98);
        map.addLayer(layer_ExpendiosGN_98);
        var osmGeocoder = new L.Control.Geocoder({
            collapsed: true,
            position: 'topleft',
            text: 'Search',
            title: 'Testing'
        }).addTo(map);
        document.getElementsByClassName('leaflet-control-geocoder-icon')[0]
        .className += ' fa fa-search';
        document.getElementsByClassName('leaflet-control-geocoder-icon')[0]
        .title += 'Search for a place';
        var baseMaps = {};
        L.control.layers(baseMaps,{'<img src="/Mapas/Públicos/SEM/legend/ExpendiosGN_98.png" /> Expendios GN': layer_ExpendiosGN_98,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte01_SNG_97.png" /> Sistemas de Transporte — 01_SNG': layer_SistemasdeTransporte01_SNG_97,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte04_SNH_96.png" /> Sistemas de Transporte — 04_SNH': layer_SistemasdeTransporte04_SNH_96,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte12AC_95.png" /> Sistemas de Transporte — 12" AC': layer_SistemasdeTransporte12AC_95,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte12AC2_94.png" /> Sistemas de Transporte — 12" AC (#2)': layer_SistemasdeTransporte12AC2_94,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte16AC_93.png" /> Sistemas de Transporte — 16" AC': layer_SistemasdeTransporte16AC_93,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte3AC_92.png" /> Sistemas de Transporte — 3" AC': layer_SistemasdeTransporte3AC_92,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte3AC2_91.png" /> Sistemas de Transporte — 3" AC (#2)': layer_SistemasdeTransporte3AC2_91,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte3DPROPROPUESTAFINAL_90.png" /> Sistemas de Transporte — 3D-PRO PROPUESTA FINAL': layer_SistemasdeTransporte3DPROPROPUESTAFINAL_90,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte4AC_89.png" /> Sistemas de Transporte — 4" AC': layer_SistemasdeTransporte4AC_89,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteAltamira_88.png" /> Sistemas de Transporte — Altamira': layer_SistemasdeTransporteAltamira_88,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteAltamiraV_87.png" /> Sistemas de Transporte — Altamira V': layer_SistemasdeTransporteAltamiraV_87,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteArguelles3_86.png" /> Sistemas de Transporte — Arguelles (#3)': layer_SistemasdeTransporteArguelles3_86,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85.png" /> Sistemas de Transporte — AS BUILT PARQUE OPCION.kmz': layer_SistemasdeTransporteASBUILTPARQUEOPCIONkmz_85,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteCrucesdireccionales_84.png" /> Sistemas de Transporte — Cruces direccionales': layer_SistemasdeTransporteCrucesdireccionales_84,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteCrucesdireccionalesdeTuberade16_83.png" /> Sistemas de Transporte — Cruces direccionales de Tubería de 16"': layer_SistemasdeTransporteCrucesdireccionalesdeTuberade16_83,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteCSFCTPALM_82.png" /> Sistemas de Transporte — CSF & CT PALM': layer_SistemasdeTransporteCSFCTPALM_82,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteDDV_81.png" /> Sistemas de Transporte — DDV': layer_SistemasdeTransporteDDV_81,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteDireccionales_80.png" /> Sistemas de Transporte — Direccionales': layer_SistemasdeTransporteDireccionales_80,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteDIRECCIONALES2_79.png" /> Sistemas de Transporte — DIRECCIONALES (#2)': layer_SistemasdeTransporteDIRECCIONALES2_79,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteDucto16deSLPLaPila_78.png" /> Sistemas de Transporte — Ducto 16" de SLP - La Pila': layer_SistemasdeTransporteDucto16deSLPLaPila_78,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteDucto24in_77.png" /> Sistemas de Transporte — Ducto 24in': layer_SistemasdeTransporteDucto24in_77,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteDucto42deCS3AEA_76.png" /> Sistemas de Transporte — Ducto 42" de CS 3 - AEA': layer_SistemasdeTransporteDucto42deCS3AEA_76,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteDuctos2_75.png" /> Sistemas de Transporte — Ductos (#2)': layer_SistemasdeTransporteDuctos2_75,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteFALLADISPAROPGIL_74.png" /> Sistemas de Transporte — FALLA DISPARO PGIL': layer_SistemasdeTransporteFALLADISPAROPGIL_74,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteGASLINE_73.png" /> Sistemas de Transporte — GASLINE': layer_SistemasdeTransporteGASLINE_73,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteGasodcuto36in_72.png" /> Sistemas de Transporte — Gasodcuto 36 in': layer_SistemasdeTransporteGasodcuto36in_72,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteGasoducto3_71.png" /> Sistemas de Transporte — Gasoducto (#3)': layer_SistemasdeTransporteGasoducto3_71,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteGasoducto10in_70.png" /> Sistemas de Transporte — Gasoducto 10 in': layer_SistemasdeTransporteGasoducto10in_70,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteGasoducto12in_69.png" /> Sistemas de Transporte — Gasoducto 12 in': layer_SistemasdeTransporteGasoducto12in_69,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteGasoducto12ACMolex_68.png" /> Sistemas de Transporte — Gasoducto 12" AC Molex': layer_SistemasdeTransporteGasoducto12ACMolex_68,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteGasoducto16in_67.png" /> Sistemas de Transporte — Gasoducto 16 in': layer_SistemasdeTransporteGasoducto16in_67,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteGasoducto22in_66.png" /> Sistemas de Transporte — Gasoducto 22 in': layer_SistemasdeTransporteGasoducto22in_66,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteGasoducto24in_65.png" /> Sistemas de Transporte — Gasoducto 24 in': layer_SistemasdeTransporteGasoducto24in_65,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteGasoducto30in_64.png" /> Sistemas de Transporte — Gasoducto 30 in': layer_SistemasdeTransporteGasoducto30in_64,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteGNdelValle2_63.png" /> Sistemas de Transporte — GN del Valle (#2)': layer_SistemasdeTransporteGNdelValle2_63,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteGTO30FRONTERAESTBRASIL_62.png" /> Sistemas de Transporte — GTO 30" FRONTERA-EST BRASIL': layer_SistemasdeTransporteGTO30FRONTERAESTBRASIL_62,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteHigueros_61.png" /> Sistemas de Transporte — Higueros': layer_SistemasdeTransporteHigueros_61,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60.png" /> Sistemas de Transporte — INVERNADEROS POTOSINOS S.A.': layer_SistemasdeTransporteINVERNADEROSPOTOSINOSSA_60,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59.png" /> Sistemas de Transporte — INVERNADEROS POTOSINOS S.A.FINAL 16052018.kmz': layer_SistemasdeTransporteINVERNADEROSPOTOSINOSSAFINAL16052018kmz_59,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteISJIAtlacomulco_58.png" /> Sistemas de Transporte — ISJI - Atlacomulco': layer_SistemasdeTransporteISJIAtlacomulco_58,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteLineFeatures_57.png" /> Sistemas de Transporte — Line Features': layer_SistemasdeTransporteLineFeatures_57,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteLineFeatures2_56.png" /> Sistemas de Transporte — Line Features (#2)': layer_SistemasdeTransporteLineFeatures2_56,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteLineFeatures3_55.png" /> Sistemas de Transporte — Line Features (#3)': layer_SistemasdeTransporteLineFeatures3_55,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteLineFeatures4_54.png" /> Sistemas de Transporte — Line Features (#4)': layer_SistemasdeTransporteLineFeatures4_54,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteLineFeatures5_53.png" /> Sistemas de Transporte — Line Features (#5)': layer_SistemasdeTransporteLineFeatures5_53,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteLineFeatures6_52.png" /> Sistemas de Transporte — Line Features (#6)': layer_SistemasdeTransporteLineFeatures6_52,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteLineFeatures7_51.png" /> Sistemas de Transporte — Line Features (#7)': layer_SistemasdeTransporteLineFeatures7_51,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteLineFeatures8_50.png" /> Sistemas de Transporte — Line Features (#8)': layer_SistemasdeTransporteLineFeatures8_50,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteLneas_49.png" /> Sistemas de Transporte — Líneas': layer_SistemasdeTransporteLneas_49,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteLugarestemporales_48.png" /> Sistemas de Transporte — Lugares temporales': layer_SistemasdeTransporteLugarestemporales_48,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteM1_M2_a_M3_47.png" /> Sistemas de Transporte — M1_M2_a_M3': layer_SistemasdeTransporteM1_M2_a_M3_47,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteM3_a_CFE_46.png" /> Sistemas de Transporte — M3_a_CFE': layer_SistemasdeTransporteM3_a_CFE_46,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransportepipelines_45.png" /> Sistemas de Transporte — pipelines': layer_SistemasdeTransportepipelines_45,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44.png" /> Sistemas de Transporte — Proyecto Campo Real y Alsa Alimentos': layer_SistemasdeTransporteProyectoCampoRealyAlsaAlimentos_44,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteRamalCFEHermosillo_43.png" /> Sistemas de Transporte — Ramal CFE Hermosillo': layer_SistemasdeTransporteRamalCFEHermosillo_43,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteRamalCFETopolobampo_42.png" /> Sistemas de Transporte — Ramal CFE Topolobampo': layer_SistemasdeTransporteRamalCFETopolobampo_42,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteRamalClusterMrida4in_41.png" /> Sistemas de Transporte — Ramal Cluster Mérida 4 in': layer_SistemasdeTransporteRamalClusterMrida4in_41,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteRamalERMCCCampeche6y10in_40.png" /> Sistemas de Transporte — Ramal ERM CC Campeche 6 y10 in': layer_SistemasdeTransporteRamalERMCCCampeche6y10in_40,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteRamalGNC4in_39.png" /> Sistemas de Transporte — Ramal GNC 4 in': layer_SistemasdeTransporteRamalGNC4in_39,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteRamal_Energia_del_Caribe_38.png" /> Sistemas de Transporte — Ramal_Energia_del_Caribe': layer_SistemasdeTransporteRamal_Energia_del_Caribe_38,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteRamales_37.png" /> Sistemas de Transporte — Ramales': layer_SistemasdeTransporteRamales_37,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteRamales2_36.png" /> Sistemas de Transporte — Ramales (#2)': layer_SistemasdeTransporteRamales2_36,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteRamales3_35.png" /> Sistemas de Transporte — Ramales (#3)': layer_SistemasdeTransporteRamales3_35,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteRamalesPJ_34.png" /> Sistemas de Transporte — Ramales PJ': layer_SistemasdeTransporteRamalesPJ_34,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteRio_Bravo_a_M1_M2_33.png" /> Sistemas de Transporte — Rio_Bravo_a_M1_M2': layer_SistemasdeTransporteRio_Bravo_a_M1_M2_33,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteRutaNorte_32.png" /> Sistemas de Transporte — Ruta Norte': layer_SistemasdeTransporteRutaNorte_32,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteRutaSur_31.png" /> Sistemas de Transporte — Ruta Sur': layer_SistemasdeTransporteRutaSur_31,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteSELECT_30.png" /> Sistemas de Transporte — SELECT': layer_SistemasdeTransporteSELECT_30,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteSIMBOLOGIA_29.png" /> Sistemas de Transporte — SIMBOLOGIA': layer_SistemasdeTransporteSIMBOLOGIA_29,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteSIMBOLOGIA2_28.png" /> Sistemas de Transporte — SIMBOLOGIA (#2)': layer_SistemasdeTransporteSIMBOLOGIA2_28,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteSIMBOLOGIA3_27.png" /> Sistemas de Transporte — SIMBOLOGIA (#3)': layer_SistemasdeTransporteSIMBOLOGIA3_27,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteSISTEMABAFAR_26.png" /> Sistemas de Transporte — SISTEMA BAFAR': layer_SistemasdeTransporteSISTEMABAFAR_26,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteSistemaGAZA_25.png" /> Sistemas de Transporte — Sistema GAZA': layer_SistemasdeTransporteSistemaGAZA_25,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte_24.png" /> Sistemas de Transporte': layer_SistemasdeTransporte_24,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte10_23.png" /> Sistemas de Transporte (#10)': layer_SistemasdeTransporte10_23,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte2_22.png" /> Sistemas de Transporte (#2)': layer_SistemasdeTransporte2_22,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte3_21.png" /> Sistemas de Transporte (#3)': layer_SistemasdeTransporte3_21,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte4_20.png" /> Sistemas de Transporte (#4)': layer_SistemasdeTransporte4_20,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte5_19.png" /> Sistemas de Transporte (#5)': layer_SistemasdeTransporte5_19,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte6_18.png" /> Sistemas de Transporte (#6)': layer_SistemasdeTransporte6_18,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte7_17.png" /> Sistemas de Transporte (#7)': layer_SistemasdeTransporte7_17,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte8_16.png" /> Sistemas de Transporte (#8)': layer_SistemasdeTransporte8_16,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporte9_15.png" /> Sistemas de Transporte (#9)': layer_SistemasdeTransporte9_15,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteTPE4_14.png" /> Sistemas de Transporte — T-PE-4': layer_SistemasdeTransporteTPE4_14,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteTPE6_13.png" /> Sistemas de Transporte — T-PE-6': layer_SistemasdeTransporteTPE6_13,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteTamiahua_12.png" /> Sistemas de Transporte — Tamiahua': layer_SistemasdeTransporteTamiahua_12,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteTMODIFICACIONDEPERMISO_11.png" /> Sistemas de Transporte — TMODIFICACION DE PERMISO': layer_SistemasdeTransporteTMODIFICACIONDEPERMISO_11,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteTrayecto_10.png" /> Sistemas de Transporte — Trayecto': layer_SistemasdeTransporteTrayecto_10,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteTrayectoria2_9.png" /> Sistemas de Transporte — Trayectoria (#2)': layer_SistemasdeTransporteTrayectoria2_9,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteTrayectoria3_8.png" /> Sistemas de Transporte — Trayectoria (#3)': layer_SistemasdeTransporteTrayectoria3_8,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteTrayectoria4_7.png" /> Sistemas de Transporte — Trayectoria (#4)': layer_SistemasdeTransporteTrayectoria4_7,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteTrayectoriaGasoducto_6.png" /> Sistemas de Transporte — Trayectoria Gasoducto': layer_SistemasdeTransporteTrayectoriaGasoducto_6,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteTUBERA_5.png" /> Sistemas de Transporte — TUBERÍA': layer_SistemasdeTransporteTUBERA_5,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteTUBERA2_4.png" /> Sistemas de Transporte — TUBERÍA (#2)': layer_SistemasdeTransporteTUBERA2_4,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteTUBERA3_3.png" /> Sistemas de Transporte — TUBERÍA (#3)': layer_SistemasdeTransporteTUBERA3_3,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteTUBERA4_2.png" /> Sistemas de Transporte — TUBERÍA (#4)': layer_SistemasdeTransporteTUBERA4_2,'<img src="/Mapas/Públicos/SEM/legend/SistemasdeTransporteTuxpanTula_1.png" /> Sistemas de Transporte — Tuxpan/Tula': layer_SistemasdeTransporteTuxpanTula_1,"Mapa google": layer_Mapagoogle_0,}).addTo(map);
        setBounds();
        map.addControl(new L.Control.Search({
            layer: layer_ExpendiosGN_98,
            initial: false,
            hideMarkerOnCollapse: true,
            propertyName: 'Número de Permiso'}));
        document.getElementsByClassName('search-button')[0].className +=
         ' fa fa-binoculars';

        /*Add google Street view https://www.mkrgeo-blog.com/quick-access-to-street-view-from-various-applications-based-on-leaflet-map-example/ */
    map.on('click', function (e) {
        let lat = e.latlng.lat.toPrecision(8);
        let lon = e.latlng.lng.toPrecision(8);
        const point = L.marker([lat, lon]).addTo(map)
            .bindPopup('<a href="http://maps.google.com/maps?q=&layer=c&cbll=' + lat + ',' + lon + '&cbp=11,0,0,0,0" target="blank"><b> Google Street View </b></a>').openPopup();
    })

</script>


<script>
    // Crea un objeto de mapa de LeafletJS en el contenedor "map"
    var map = L.map("map").setView([23.6345, -102.5528], 5);

    // Agrega una capa de OpenStreetMap al mapa
    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        attribution: "Map data &copy; <a href='https://www.openstreetmap.org/'>OpenStreetMap</a> contributors",
        maxZoom: 18,
    }).addTo(map);


</script>

<script>
    // Detecta el cambio de selección en el menú de estados
    document.getElementById("estado").addEventListener("change", function () {
        // Obtiene el valor seleccionado del menú de estados
        var estado = document.getElementById("estado").value;

               // Muestra el estado seleccionado en el mapa
        switch (estado) {
            case "ags":
                map.setView([22.025278, -102.372778], 9);
                break;
            case "bc":
                map.setView([30.391389, -115.291389], 7);
                break;
            case "bcs":
                map.setView([26.044444, -112.399722], 7);
                break;
            case "camp":
                map.setView([18.938333, -90.764722], 7);
                break;
            case "coah":
                map.setView([27.158056, -101.719444], 7);
                break;
            case "col":
                map.setView([19.101944, -103.014722], 9);
                break;
            case "chis":
                map.setView([16.753056, -92.6375], 7);
                break;
            case "chih":
                map.setView([28.673611, -106.102222], 7);
                break;
            case "cdmx":
                map.setView([19.432778, -99.133333], 10);
                break;
            case "dgo":
                map.setView([24.865278, -104.902222], 7);
                break;
            case "gto":
                map.setView([20.875, -101.478611], 8);
                break;
            case "gro":
                map.setView([17.814722, -100.353056], 8);
                break;
            case "hgo":
                map.setView([20.5325, -98.870556], 8);
                break;
            case "jal":
                map.setView([20.673611, -103.343333], 8);
                break;
            case "mex":
                map.setView([19.483611, -99.689722], 8);
                break;
            case "mich":
                map.setView([19.699722, -101.191389], 8);
                break;
            case "mor":
                map.setView([18.858611, -99.223611], 9);
                break;
            case "nay":
                map.setView([21.799444, -105.220833], 8);
                break;
            case "nl":
                map.setView([25.649167, -100.443611], 9);
                break;
            case "oax":
                map.setView([16.895833, -96.806667], 8);
                break;
            case "pue":
                map.setView([19.051389, -98.193889], 8);
                break;
            case "qro":
                map.setView([20.854722, -99.847222], 9);
                break;
            case "qroo":
                map.setView([19.642778, -87.072222], 8);
                break;
            case "slp":
                map.setView([22.156944, -100.985556], 8);
                break;
            case "sin":
                map.setView([24.288611, -107.366944], 8);
                break;
            case "son":
                map.setView([29.089444, -110.961667], 7);
                break;
            case "tab":
                map.setView([17.980000, -92.930000], 8);
                break;
            case "tamps":

                map.setView([24.014167, -98.844444], 7);
                break;
            case "tlax":
                map.setView([19.312222, -98.239722], 10);
                break;
            case "ver":
                map.setView([19.546389, -96.914167], 8);
                break;
            case "yuc":
                map.setView([20.891944, -89.528611], 8);
                break;
            case "zac":
                map.setView([22.770833, -102.583611], 8);
                break;
            default:
                map.setView([23.634501, -102.552784], 5);
                break;
        }
    });

</script>

