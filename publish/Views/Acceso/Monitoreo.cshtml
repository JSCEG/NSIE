@model MonitoreoViewModel
@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json
@using NSIE.Models
@inject IHttpContextAccessor HttpContextAccessor
@{
    var httpContext = HttpContextAccessor.HttpContext;
    var perfilUsuarioJson = httpContext.Session.GetString("PerfilUsuario");
    var perfilUsuario = JsonConvert.DeserializeObject<PerfilUsuario>(perfilUsuarioJson);

    // Utilizar los datos del usuario para personalizar la vista
    ViewData["NombreUsuario"] = perfilUsuario.Nombre;
    ViewData["RolUsuario"] = perfilUsuario.Rol;
    ViewData["MercadoUsuario"] = perfilUsuario.Mercado_ID;
}
@{
    var ipsUnicas = ViewBag.IpsUnicas as List<string>;
}



@{
    ViewData["Title"] = "Monitoreo y Uso de la Plataforma";
}



<div class="text-center">
    <h4 class="cp-section cp-grouping-section">
        <img src="/img/monitoreo.png" alt="Icono personalizado" class="iconomenu" />
        @ViewData["Title"]
    </h4>
</div>
<!-- Miga de Pan -->
<nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb" style="padding-left:15px">
    <ol class="breadcrumb lp-5">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home" )">Inicio</a></li>
        <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
    </ol>
</nav>
@*Sección que Despliega el Mapap Inicial*@
<div class="container">

    <h1 class="subtitulo">Monitoreo de Usuarios y Accesos en "EnerGeoCRE""</h1>
    <br>
 
    <div class="app-card shadow-sm mb-4 border-left-decoration">
        <div class="inner">
            <div class="app-card-body p-4">
                <div class="row gx-5 gy-3">
                    <div class="col-12 col-lg-9">
                        <div>Aquí se presentan las estadísticas de Uso y Monitoreo de Usuarios que usan la Plataforma</div>
                    </div><!--//col-->

                </div><!--//row-->

            </div><!--//app-card-body-->

        </div><!--//inner-->
    </div><!--//app-card-->

    <div class="row g-4 mb-4">
        <div class="col-6 col-lg-4">
            <div class="app-card app-card-stat shadow-sm h-100">
                <div class="app-card-body p-3 p-lg-4">
                    <h4 class="stats-type mb-1">Total de Accesos</h4>
                    <div class="stats-figure"> @Model.TotalAccesos</div>

                </div><!--//app-card-body-->
                <a class="app-card-link-mask" href="#"></a>
            </div><!--//app-card-->
        </div><!--//col-->

        <div class="col-6 col-lg-4">
            <div class="app-card app-card-stat shadow-sm h-100">
                <div class="app-card-body p-3 p-lg-4">
                    <h4 class="stats-type mb-1">Acceso como Consulta Pública</h4>
                    <div class="stats-figure">
                        @Model.TotalAccesosPorTipo.FirstOrDefault(t => t.TipoAcceso == "Acceso como Consulta Pública")?.Total
                    </div>

                </div><!--//app-card-body-->
                <a class="app-card-link-mask" href="#"></a>
            </div><!--//app-card-->
        </div><!--//col-->
        <div class="col-6 col-lg-4">
            <div class="app-card app-card-stat shadow-sm h-100">
                <div class="app-card-body p-3 p-lg-4">
                    <h4 class="stats-type mb-1">Inicios de Sesión Funcionarios CRE</h4>
                    <div class="stats-figure">
                        @Model.TotalAccesosPorTipo.FirstOrDefault(t => t.TipoAcceso == "Inicio de sesión funcionario CRE")?.Total
                    </div>

                </div><!--//app-card-body-->
                <a class="app-card-link-mask" href="#"></a>
            </div><!--//app-card-->
        </div><!--//col-->

    </div><!--//row-->




        @*Gráfico Histórico*@

        <div class="row g-4 mb-4">
            <div class="col-12 col-lg-6">
                <div class="app-card app-card-chart h-100 shadow-sm">
                    <div class="app-card-header p-3 border-0">
                        <h4 class="app-card-title">Accesos por Usuario</h4>
                    </div><!--//app-card-header-->
                    <div class="app-card-body p-4">
                        <div class="chart-container">
                            <div id="grafico-container" class="app-card-body p-4">
                                <div id="grafico-accesos" style="height: 400px;"></div>
                            </div>
                        </div>
                    </div><!--//app-card-body-->
                </div><!--//app-card-->
            </div><!--//col-->
            @*Accesos por dia*@
            <div class="col-12 col-lg-6">
                <div class="app-card app-card-chart h-100 shadow-sm">
                    <div class="app-card-header p-3 border-0">
                        <h4 class="app-card-title">Accesos el día de Hoy</h4>
                    </div><!--//app-card-header-->
                    <div class="app-card-body p-4">
                        <div class="chart-container">
                            <div id="grafico-container" class="app-card-body p-4">
                                <div id="grafico-accesos-hoy" style="height: 400px;"></div>
                            </div>
                        </div>
                    </div><!--//app-card-body-->
                </div><!--//app-card-->
            </div><!--//col-->
        </div><!--//row-->

       <div class="row g-4 mb-4">
            <div class="col-12 col-lg-6">
                <div class="app-card app-card-chart h-100 shadow-sm">
                    <div class="app-card-header p-3 border-0">
                        <h4 class="app-card-title">Accesos por Cargo</h4>
                    </div><!--//app-card-header-->
                    <div class="app-card-body p-4">
                        <div class="chart-container">
                            <div id="grafico-container" class="app-card-body p-4">
                                <div id="grafico-accesos-por-cargo" style="height: 400px;"></div>
                            </div>
                        </div>
                    </div><!--//app-card-body-->
                </div><!--//app-card-->
            </div><!--//col-->
            @*Accesos por dia*@
            <div class="col-12 col-lg-6">
                <div class="app-card app-card-chart h-100 shadow-sm">
                    <div class="app-card-header p-3 border-0">
                        <h4 class="app-card-title">Accesos por Unidad de Adscripción</h4>
                    </div><!--//app-card-header-->
                    <div class="app-card-body p-4">
                        <div class="chart-container">
                            <div id="grafico-container" class="app-card-body p-4">
                             <div id="grafico-accesos-por-unidad" style="height: 400px;"></div> 
                            </div>
                        </div>
                    </div><!--//app-card-body-->
                </div><!--//app-card-->
            </div><!--//col-->
        </div><!--//row-->


          <div class="row g-4 mb-4">
                <div class="col">
                <div class="app-card app-card-chart h-100 shadow-sm">
                    <div class="app-card-header p-3 border-0">
                        <h4 class="app-card-title">Accesos por Fecha</h4>
                    </div><!--//app-card-header-->
                    <div class="app-card-body p-4">
                        <div class="chart-container">
                            <div id="grafico-container" class="app-card-body p-4">
                              <div id="grafico-accesos-por-fecha" style="height: 400px;"></div>
                            </div>
                        </div>
                    </div><!--//app-card-body-->
                </div><!--//app-card-->
            </div><!--//col-->  
          </div>
    <h1 class="subtitulo">Monitoreo de Usuarios y Accesos en "EnerGeoCRE""</h1>
    <br>
    <div  class="table-responsive">

        <table id="ultimoacceso" class="table table-hover table-responsive table-bordered">
            <thead>
                <tr>
                    <th>Usuario</th>
                    <th>Último Acceso</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var acceso in Model.UltimoAccesoPorUsuario)
                {
                    <tr>
                        <td>@acceso.Nombre</td>
                        <td>@acceso.UltimoAcceso.ToString("dd/MM/yyyy HH:mm:ss")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <h1 class="subtitulo">Ubicaciones de las Conexiones en EnerGeoCRE""</h1>
    <br>
          <div class="row g-4 mb-4">
                <div class="col">
                <div class="app-card app-card-chart h-100 shadow-sm">
                    <div class="app-card-header p-3 border-0">
                        <h4 class="app-card-title">Accesos por IP</h4>
                    </div><!--//app-card-header-->
                    <div class="app-card-body p-4">
                        <div class="chart-container">
                            <div id="grafico-container" class="app-card-body p-4">
                             <div id="mapid" style="height: 400px;"></div>
                            </div>
                        </div>
                    </div><!--//app-card-body-->
                </div><!--//app-card-->
            </div><!--//col-->  
</div>

</div>
<script type="text/javascript">
    $(document).ready(function () {
        var viewModelData = @Html.Raw(ViewBag.JsonModel);
        console.log("Datos del ViewModel", viewModelData);


      



        // Asegúrate de que estás accediendo a detallesAcceso correctamente
        var detallesAcceso = viewModelData.DetallesAcceso;

        // Resto de tu lógica para agrupar y crear el gráfico...
        var accesosPorUsuario = {};
        detallesAcceso.forEach(function (acceso) {
            if (accesosPorUsuario[acceso.Nombre]) {
                accesosPorUsuario[acceso.Nombre]++;
            } else {
                accesosPorUsuario[acceso.Nombre] = 1;
            }
        });

        // Convierte el objeto en un array que Highcharts pueda entender
        var seriesData = Object.keys(accesosPorUsuario).map(function (nombre) {
            return [nombre, accesosPorUsuario[nombre]];
        });

        // Crea el gráfico
        Highcharts.chart('grafico-accesos', {
            chart: {
                type: 'column'
            },
            title: {
                text: 'Accesos por Usuario'
            },
            xAxis: {
                type: 'category',
                title: {
                    text: 'Usuario'
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Número de Accesos',
                    align: 'high'
                },
                labels: {
                    overflow: 'justify'
                }
            },
            plotOptions: {
                bar: {
                    dataLabels: {
                        enabled: true
                    }
                }
            },
            series: [{
                name: 'Accesos',
                data: seriesData
            }]
        });


        // Obtén la fecha de hoy
        var hoy = new Date();
        hoy.setHours(0, 0, 0, 0); // Establece la hora al inicio del día

        // Filtra los accesos para obtener solo los de hoy
        var accesosHoy = detallesAcceso.filter(function (acceso) {
            var fechaAcceso = new Date(acceso.FechaHoraLocal);
            return fechaAcceso >= hoy;
        });

        // Cuenta los accesos por usuario para hoy
        var accesosPorUsuarioHoy = {};
        accesosHoy.forEach(function (acceso) {
            if (accesosPorUsuarioHoy[acceso.Nombre]) {
                accesosPorUsuarioHoy[acceso.Nombre]++;
            } else {
                accesosPorUsuarioHoy[acceso.Nombre] = 1;
            }
        });

        // Prepara los datos para Highcharts
        var seriesData = Object.keys(accesosPorUsuarioHoy).map(function (nombre) {
            return [nombre, accesosPorUsuarioHoy[nombre]];
        });
        // Crea el gráfico
        Highcharts.chart('grafico-accesos-hoy', {
            chart: {
                type: 'column'
            },
            title: {
                text: 'Accesos por Usuario Hoy'
            },
            xAxis: {
                type: 'category',
                title: {
                    text: 'Usuario'
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Número de Accesos'
                }
            },
            series: [{
                name: 'Accesos',
                data: seriesData
            }]
        });

        //Accesos por Cargo
     var accesosPorCargo = @Html.Raw(ViewBag.AccesosPorCargoJson);

        Highcharts.chart('grafico-accesos-por-cargo', {
            chart: {
                type: 'column' // o el tipo de gráfico que prefieras
            },
            title: {
                text: 'Accesos Históricos por Cargo'
            },
            xAxis: {
                type: 'category',
                title: {
                    text: 'Cargo'
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Número de Accesos'
                }
            },
            series: [{
                name: 'Accesos',
                data: accesosPorCargo.map(function (item) {
                    return [item.Cargo, item.TotalAccesos];
                })
            }]
        });


        //Acceso por Fechas
         var accesosPorFecha = @Html.Raw(ViewBag.AccesosPorFechaJson);

        Highcharts.chart('grafico-accesos-por-fecha', {
            chart: {
                type: 'line' // o 'column', dependiendo de cómo quieras mostrar los datos
            },
            title: {
                text: 'Accesos por Fecha'
            },
            xAxis: {
                type: 'category',
                title: {
                    text: 'Fecha'
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Número de Accesos'
                }
            },
            series: [{
                name: 'Accesos',
                data: accesosPorFecha.map(function (item) {
                    return [item.Fecha, item.TotalAccesos];
                })
            }]
        });
       
        //Accesos por Unidad de Adscripción

          var accesosPorUnidad = @Html.Raw(ViewBag.AccesosPorUnidadJson);

        Highcharts.chart('grafico-accesos-por-unidad', {
            chart: {
                type: 'column' // o el tipo de gráfico que prefieras
            },
            title: {
                text: 'Accesos por Unidad de Adscripción'
            },
            xAxis: {
                type: 'category',
                title: {
                    text: 'Unidad de Adscripción'
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Número de Accesos'
                }
            },
            series: [{
                name: 'Accesos',
                data: accesosPorUnidad.map(function (item) {
                    return [item.UnidadDeAdscripcion, item.TotalAccesos];
                })
            }]
        });


        var table = $('#ultimoacceso').DataTable({
            lengthMenu: [[10, 50, 100, -1], [10, 50, 100, "Todos"]],
            dom: 'Blfrtip',
            buttons: [
                {
                    extend: 'copyHtml5',
                    title: 'Energeo Lista de Usuarios de la Plataforma'
                },
                {
                    extend: 'excelHtml5',
                    title: 'Energeo Lista de Usuarios de la Plataforma'
                },
                {
                    extend: 'csvHtml5',
                    title: 'Energeo Lista de Usuarios de la Plataforma'
                },
                {
                    extend: 'pdfHtml5',
                    title: 'Energeo Lista de Usuarios de la Plataforma',
                    customize: function (doc) {
                        // Cambia el color de la línea de encabezado a rojo
                        doc.styles.tableHeader.color = '#9fa1a4';
                        // Centra la tabla
                        doc.defaultStyle.alignment = 'center';
                        // Cambia el color de fondo del encabezado
                        doc.styles.tableHeader.fillColor = '#4c1922'; // Cambia a tu color preferido
                    }
                }
            ],
        });


        //Mapa
        var latitudInicial = 19.4326; // Ajusta a tus necesidades
        var longitudInicial = -99.1332; // Ajusta a tus necesidades
        var zoomInicial = 13; // Ajusta a tus necesidades

     //   var geoLocations = @Html.Raw(JsonConvert.SerializeObject(ViewBag.GeoLocations));
      //  console.log("Las IP's:",geoLocations);

        var map = L.map('mapid').setView([latitudInicial, longitudInicial], zoomInicial);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        //Cruzo los viewbag para obtener el nombre
        @* var usuarioPorIp = {};
            detallesAcceso.forEach(function(acceso) {
                usuarioPorIp[acceso.IP] = acceso.Nombre;
            });


          geoLocations.forEach(function(loc) {
            // Verifica si la ubicación contiene datos válidos
            if (loc.City && loc.Country && loc.Loc) {
                var coords = loc.Loc.split(',');
                if (coords.length === 2) {
                    var usuario = usuarioPorIp[loc.Ip] || 'Desconocido'; // 'Desconocido' en caso de que no haya un usuario para esa IP
                    L.marker([parseFloat(coords[0]), parseFloat(coords[1])]).addTo(map)
                        .bindPopup('IP: ' + loc.Ip + '<br>Ubicación: ' + loc.City + ', ' + loc.Country + '<br>Usuario: ' + usuario);
                }
            }
        }); *@
    });
</script>

<script>
    $(document).ready(function() {

      

    });
</script>