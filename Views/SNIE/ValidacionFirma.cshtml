@model dynamic
@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json
@using NSIE.Models
@inject IHttpContextAccessor HttpContextAccessor

@{
    var httpContext = HttpContextAccessor.HttpContext;
    var perfilUsuarioJson = httpContext.Session.GetString("PerfilUsuario");
    var perfilUsuario = JsonConvert.DeserializeObject<PerfilUsuario>(perfilUsuarioJson);
    ViewData["NombreUsuario"] = perfilUsuario.Nombre;
    ViewData["RolUsuario"] = perfilUsuario.Rol;
    ViewData["IDUsuario"] = perfilUsuario.IdUsuario;
    ViewData["Title"] = "Validación y Firma";
}

<div class="text-center">
    <h3 class="cp-section cp-grouping-section">
        <img src="~/img/upload.png" alt="Icono Validación y Firma" class="iconomenu">
        @ViewData["Title"]
    </h3>
</div>

<div class="alert alert-light" role="alert">
    <nav style="--bs-breadcrumb-divider: url('data:image/svg+xml,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'8\' height=\'8\'%3E%3Cpath d=\'M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z\' fill=\'currentColor\'/%3E%3C/svg%3E');"
        aria-label="breadcrumb" style="padding-left:15px">
        <ol class="breadcrumb lp-5">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Inicio</a></li>
            <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
        </ol>
    </nav>
</div>

<div class="container ps-5 pe-5">
    <div class="alert alert-info">
        <strong>Instrucciones:</strong>
        <ul class="mb-0">
            <li>Revisa los archivos pendientes y cambia su estado a <strong>Revisado</strong> o
                <strong>Correcto</strong> antes de firmar.
            </li>
            <li>Haz clic en el botón de firma, proporciona tu <strong>.cer</strong>, <strong>.key</strong> y contraseña.
            </li>
            <li>Se simulará la firma y se abrirá un acuse en PDF en una nueva pestaña.</li>
        </ul>
    </div>

    <div class="mt-4">
        <h5>Archivos para Validar y Firmar</h5>
        <table class="table table-striped" id="tablaArchivos">
            <thead>
                <tr>
                    <th>Archivo</th>
                    <th>Fecha de Carga</th>
                    <th>Dependencia</th>
                    <th>Estado</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><a href="https://excel.officeapps.live.com/x/_layouts/XlRemoteInterlink.aspx"
                            target="_blank">balance_sener_abril2025.xlsx</a></td>
                    <td>2025-04-21 10:42 AM</td>
                    <td>SENER</td>
                    <td>
                        <select class="form-select form-select-sm">
                            <option>Pendiente</option>
                            <option>Revisado</option>
                            <option>Correcto</option>
                        </select>
                    </td>
                    <td>
                        <button class="btn btn-outline-success btn-sm btn-firmar" title="Firmar"><i
                                class="bi bi-pencil-square"></i></button>
                        <button class="btn btn-outline-danger btn-sm btn-eliminar" title="Eliminar"><i
                                class="bi bi-trash"></i></button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<!-- Modal para firma electrónica -->
<div class="modal fade" id="modalFirma" tabindex="-1" aria-labelledby="modalFirmaLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalFirmaLabel">Firma con e.firma</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <form id="formFirma">
                    <div class="mb-3">
                        <label for="archivoKey" class="form-label">Archivo .key</label>
                        <input type="file" class="form-control" id="archivoKey" required>
                    </div>
                    <div class="mb-3">
                        <label for="archivoCer" class="form-label">Archivo .cer</label>
                        <input type="file" class="form-control" id="archivoCer" required>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Contraseña</label>
                        <input type="password" class="form-control" id="password" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="btnConfirmarFirma">Firmar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Inicializar DataTable
            const tabla = $('#tablaArchivos').DataTable({
                language: { url: '//cdn.datatables.net/plug-ins/1.13.4/i18n/es-ES.json' },
                columns: [
                    { data: 'archivo' },
                    { data: 'fecha' },
                    { data: 'dependencia' },
                    { data: 'estado' },
                    { data: 'acciones', orderable: false }
                ]
            });

            // Manejador de eliminación
            $(document).on('click', '.btn-eliminar', function () {
                const fila = $(this).closest('tr');
                const nombreArchivo = $(fila).find('td:first').text();

                Swal.fire({
                    title: '¿Eliminar archivo?',
                    text: `¿Está seguro de eliminar "${nombreArchivo}"?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Sí, eliminar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        tabla.row(fila).remove().draw();
                        Swal.fire({
                            icon: 'success',
                            title: 'Archivo eliminado',
                            text: 'El archivo ha sido eliminado correctamente',
                            timer: 1500,
                            showConfirmButton: false
                        });
                    }
                });
            });

            // Validar estado antes de firmar
            $(document).on('click', '.btn-firmar', function () {
                const fila = $(this).closest('tr');
                const estado = $(fila).find('select').val();

                if (estado === 'Pendiente') {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Validación pendiente',
                        text: 'Debe cambiar el estado del archivo antes de firmarlo'
                    });
                    return;
                }

                $('#modalFirma').modal('show');
            });

            // Simular proceso de firma
            $('#btnConfirmarFirma').on('click', async function () {
                const form = document.getElementById('formFirma');
                if (!form.checkValidity()) {
                    form.classList.add('was-validated');
                    return;
                }

                const key = $('#archivoKey').val();
                const cer = $('#archivoCer').val();
                const pass = $('#password').val();

                if (!key || !cer || !pass) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Campos incompletos',
                        text: 'Por favor complete todos los campos requeridos'
                    });
                    return;
                }

                $('#modalFirma').modal('hide');

                // Simular proceso de firma
                Swal.fire({
                    title: 'Procesando firma...',
                    html: `
                        <div class="progress mb-3">
                            <div class="progress-bar progress-bar-striped progress-bar-animated" 
                                 role="progressbar" style="width: 0%">
                            </div>
                        </div>
                        <p>Validando certificados...</p>
                    `,
                    showConfirmButton: false,
                    allowOutsideClick: false,
                    didOpen: () => {
                        const barra = Swal.getHtmlContainer().querySelector('.progress-bar');
                        let progreso = 0;
                        const intervalo = setInterval(() => {
                            if (progreso < 100) {
                                progreso += 5;
                                barra.style.width = `${progreso}%`;
                            }
                        }, 100);
                    }
                });

                // Simular tiempo de proceso
                await new Promise(resolve => setTimeout(resolve, 2000));

                Swal.fire({
                    icon: 'success',
                    title: '¡Firma exitosa!',
                    text: 'El documento ha sido firmado correctamente',
                    showConfirmButton: true,
                    confirmButtonText: 'Ver acuse'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.open('https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf', '_blank');
                    }
                });

                // Limpiar formulario
                form.reset();
                form.classList.remove('was-validated');
            });

            // Actualizar estado en la tabla
            $(document).on('change', 'select', function() {
                const nuevoEstado = $(this).val();
                const color = {
                    'Pendiente': 'secondary',
                    'Revisado': 'warning',
                    'Correcto': 'success'
                }[nuevoEstado];
                
                $(this).removeClass('text-bg-secondary text-bg-warning text-bg-success')
                       .addClass(`text-bg-${color}`);
            });
        });
    </script>
}

<style>
    select.form-select {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
        border-radius: 0.2rem;
    }

    .text-bg-secondary { background-color: #6c757d; color: white; }
    .text-bg-warning { background-color: #ffc107; color: black; }
    .text-bg-success { background-color: #198754; color: white; }

    .progress { height: 20px; }
    .progress-bar { transition: width 0.5s ease; }
</style>
