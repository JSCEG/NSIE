@model Mep


@*Sección que Despliega el Mapap Inicial*@
<h3 class="subtitulo display-9 fw-bold">Ubicación de las Solicitudes a Evaluar</h3>

@*<button class="btn btn-cre-rojo" id="botonMapa" onclick="toggleMapa()">Ocultar Mapa de Solicitudes</button>*@
<br />
<section id="despliega_mapa shadow p-3 mb-5 bg-body-tertiary rounded">

    <div class="container">
        <div class="row">
            <div class="col-sm pt-3">
                <div class="justify-content-center">
                    <button class="btn btn-cre-rojo" data-bs-toggle="offcanvas" data-bs-target="#ejemploOffcanvas">
                        <i class="bi bi-info-circle-fill"></i> - Ver Información
                    </button>
                    <partial name="_Infomapas_PRPEP" />

                </div>
            </div>
            <div class="col-sm pt-3">
                <select id="estado" class="form-select">
                    <option selected>
                        Selecciona una Entidad Federativa:
                    </option>
                    <option value="ags">Aguascalientes</option>
                    <option value="bc">Baja California</option>
                    <option value="bcs">Baja California Sur</option>
                    <option value="camp">Campeche</option>
                    <option value="coah">Coahuila</option>
                    <option value="col">Colima</option>
                    <option value="chis">Chiapas</option>
                    <option value="chih">Chihuahua</option>
                    <option value="cdmx">Ciudad de México</option>
                    <option value="dgo">Durango</option>
                    <option value="gto">Guanajuato</option>
                    <option value="gro">Guerrero</option>
                    <option value="hgo">Hidalgo</option>
                    <option value="jal">Jalisco</option>
                    <option value="mex">México</option>
                    <option value="mich">Michoacán</option>
                    <option value="mor">Morelos</option>
                    <option value="nay">Nayarit</option>
                    <option value="nl">Nuevo León</option>
                    <option value="oax">Oaxaca</option>
                    <option value="pue">Puebla</option>
                    <option value="qro">Querétaro</option>
                    <option value="qroo">Quintana Roo</option>
                    <option value="slp">San Luis Potosí</option>
                    <option value="sin">Sinaloa</option>
                    <option value="son">Sonora</option>
                    <option value="tab">Tabasco</option>
                    <option value="tamps">Tamaulipas</option>
                    <option value="tlax">Tlaxcala</option>
                    <option value="ver">Veracruz</option>
                    <option value="yuc">Yucatán</option>
                    <option value="zac">Zacatecas</option>
                </select>
            </div>
            <div class="col-sm pt-3">
                @*Prueba*@
                <div class="dropdown" style="position: relative; z-index: 1000;">
                    <button class="btn btn-cre-rojo dropdown-toggle" id="dropdownMenuLink" type="button"
                        data-bs-toggle="dropdown" aria-expanded="false">
                        Selecciona Capa/Opción:
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" onclick="limpiarMarcadores()">Limpiar Mapa</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="CargaSolicitudes()">Ver
                                Solicitudes a Revisar</a></li>
                        @* <li><a class="dropdown-item" href="javascript:void(0)" onclick="CargaExpendios()">Ver Expendios Autorizados a Nivel Nacional</a></li> *@
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="CargaSyE()">Ver Solicitudes y
                                Expendios Autorizados</a></li>
                    </ul>
                </div>

            </div>
            <div class="col-sm pt-3">
                <!-- Botón que activará el modal -->
                <button onclick="openModal()" class="btn btn-cre-rojo"><i class="bi bi-camera-reels-fill"></i> Ver
                    Guía</button>

                <!-- Modal para mostrar el video -->
                <div id="videoModal"
                    style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background-color:rgba(0,0,0,0.5); align-items:center; justify-content:center; z-index:3000">
                    <video width="80%" controls>
                        <source src="/video/guia.mp4" type="video/mp4">
                        Tu navegador no soporta el elemento video.
                    </video>
                    <button onclick="closeModal()" class="btn btn-cre-rojo"
                        style="position:absolute; top:10px; right:10px;z-index:3000; width:300px!important">Cerrar</button>
                </div>

            </div>
        </div>
    </div>

    <div id="main-container">

        <div class="search-container p-3" id="search-container">
            <label class="form-label">Buscar en el Mapa:</label>
            <input type="text" id="busquedaPermisoInput" class="form-control"
                placeholder="Escribe el Número de Solicitud, Turno K-MIS, Entidad Federativa o Municipio: 000 ó V-12345">
            <div id="autocomplete-list" class="autocomplete-items"></div>
            <button class="btn btn-cre-rojo-home" onclick="buscarPorNumeroPermiso()" style="width:10% !important"><i
                    class="bi bi-search"></i></button>
        </div>
        <br />

        <div id="" class="app-card-body p-4 d-flex align-items-center">
            <button id="fullscreen-btn" class="btn btn-primary">Pantalla Completa</button>
            <div id="alert-message" class="alert alert-info ms-3" role="alert"
                style="margin-left: 15px; padding: 10px; background-color: #FCFEE7; border-left: 6px solid #DEF321; color: #818F31;">
                Para el caso del mercado de electricidad, las ubicaciones corresponden a la dirección proporcionada en
                la documentación del permiso otorgado que puede corresponder a la ubicación física de central eléctrica
                que representa.
            </div>
        </div>

        <div id="fullscreen-container" class="d-flex h-100">
            <div class="row m-0 w-100">
                <div id="sidebar" class="d-flex flex-column justify-content-between col-3 p-2">
                    <!-- Contenido de la barra de datos -->
                </div>
                <div id="map" class="col p-0" style="position: relative; z-index: 500;">
                    <!-- Contenido del mapa -->
                </div>
            </div>
        </div>
    </div>

    <style>
        /* Estilos para pantalla completa */
        .fullscreen-mode #fullscreen-container,
        .fullscreen-mode .row,
        .fullscreen-mode #sidebar,
        .fullscreen-mode #map {
            height: 100%;
        }

        .fullscreen-mode #fullscreen-container {
            display: flex;
            flex-direction: column;
        }

        .fullscreen-mode #search-container {
            background-color: white;
            z-index: 1000;
            /* Asegura que el buscador esté por encima de otros elementos si es necesario */
        }

        .fullscreen-mode #sidebar {
            overflow-y: auto;
            /* Si deseas que la barra de datos sea desplazable */
        }

        .fullscreen-mode #map {
            height: 100%;
        }
    </style>

    <div class="leyenda">
        <p>Mayor Concentración de Solicitudes</p>
        <p>Concentración Promedio de Solicitudes</p>
        <p>Menor concentración de Solicitudes</p>
        <p>Radio de 3 Km</p>
        <p> Ductos</p>
    </div>

    <br />

</section>

@*Script de Pantalla Completa*@
<script>
    document.addEventListener('DOMContentLoaded', (event) => {
        const fullscreenButton = document.getElementById('fullscreen-btn');
        const fullscreenContainer = document.getElementById('fullscreen-container');
        const searchContainer = document.getElementById('search-container');
        const originalParent = searchContainer.parentNode;
        const originalNextSibling = searchContainer.nextSibling;

        fullscreenButton.addEventListener('click', () => {
            if (!document.fullscreenElement) {
                fullscreenContainer.requestFullscreen().catch(err => {
                    alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);
                });
            } else {
                document.exitFullscreen();
            }
        });

        document.addEventListener('fullscreenchange', (event) => {
            if (document.fullscreenElement) {
                document.documentElement.classList.add('fullscreen-mode');
                fullscreenButton.textContent = "Salir de Pantalla Completa";
                fullscreenContainer.insertBefore(searchContainer, fullscreenContainer.firstChild);
            } else {
                document.documentElement.classList.remove('fullscreen-mode');
                fullscreenButton.textContent = "Pantalla Completa";
                if (originalNextSibling) {
                    originalParent.insertBefore(searchContainer, originalNextSibling);
                } else {
                    originalParent.appendChild(searchContainer);
                }
            }
        });
    });
</script>

@*Funcionalidades del Mapa Inicial*@
<script>
    var map = L.map('map', {
        zoomControl: true, maxZoom: 28, minZoom: 5
    }).fitBounds([[16.515297504744552, -116.01198143543994], [31.280203931152798, -90.79533052556764]]);
    var hash = new L.Hash(map);
    map.attributionControl.setPrefix('<a href="https://github.com/tomchadwin/qgis2web" target="_blank">qgis2web</a> &middot; <a href="https://leafletjs.com" title="A JS library for interactive maps">Leaflet</a> &middot; <a href="https://qgis.org">QGIS</a>');
    var autolinker = new Autolinker({ truncate: { length: 30, location: 'smart' } });
    var bounds_group = new L.featureGroup([]);
    function setBounds() {
    }


    //Crea los Iconos
    var iconoBase = L.Icon.extend({
        options: {
            iconSize: [24, 24],
            iconAnchor: [12, 16],
            popupAnchor: [-3, -76]
        }
    });

    //Asignación de Iconos
    var iconoSolicitudes = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Solicitudes.png' }),
        iconoExpendio = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Expendio.png' }),
        iconoAzul = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/azul.png' });
    iconoAprobado = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Aprobado.png' });
    iconoNoaprobado = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/NoAprobado.png' });
    //Vista Satelite
    map.createPane('pane_GoogleSatellite_0');
    map.getPane('pane_GoogleSatellite_0').style.zIndex = 0;
    var layer_GoogleSatellite_0 = L.tileLayer('https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
        pane: 'pane_GoogleSatellite_0',
        opacity: 1.0,
        attribution: '<a href="https://www.google.at/permissions/geoguidelines/attr-guide.html">Map data ©2015 Google</a>',
        minZoom: 1,
        maxZoom: 28,
        minNativeZoom: 0,
        maxNativeZoom: 20
    });
    layer_GoogleSatellite_0;
    map.addLayer(layer_GoogleSatellite_0);

    var cartoDBDarkAll = L.tileLayer('https://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://carto.com/attributions">CARTO</a>'
    });


    //Configura los Base Layers
    var baseLayers = {
        "OpenStreetMap": L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }),
        "Vista Satélite": layer_GoogleSatellite_0,
        "Modo Oscuro": cartoDBDarkAll
    };


    //Info del Estado Shape EF
    var info = L.control();

    info.onAdd = function (map) {
        this._div = L.DomUtil.create('div', 'info');
        this.update();
        return this._div;
    };

    info.update = function (props) {
        this._div.innerHTML = (props ?
            '<b>' + props.NOMGEO + '</b><br />' + getStatusLabel(props.a2023) :
            '¡Selecciona un Estado!');
    };

    function getStatusLabel(value) {
        if (value === -1) {
            return 'Saturado';
        } else if (value === 0) {
            return 'Equilibrado';
        } else if (value === 1) {
            return 'Oportunidad';
        } else {
            return '';
        }
    };

    info.addTo(map);

    // Activa una capa de mosaicos como vista inicial
    baseLayers["OpenStreetMap"].addTo(map);

    // Control de capas para seleccionar la vista del mapa
    L.control.layers(baseLayers).addTo(map);


    L.control.scale().addTo(map); // Agregar la escala gráfica al mapa

    //Shape de EF colores y capas
    ///Mapa estados
    function getColor(d) {
        return d == 1 ? '#008000' :
            d == 0 ? '#FFFF00' :
                d == -1 ? '#FF0000' :
                    '#FFEDA0';
    }

    function style(feature) {
        return {
            //  fillColor: getColor(feature.properties.a2023),
            weight: 1,
            opacity: 1,
            color: 'white',
            dashArray: '3',
            fillOpacity: 0.01
        };
    }


    function highlightFeature(e) {
        var layer = e.target;

        layer.setStyle({
            weight: 5,
            color: '#666',
            dashArray: '',
            fillOpacity: 0.5
        });

        layer.bringToFront();
        info.update(layer.feature.properties);
    }

    function resetHighlight(e) {
        geojson.resetStyle(e.target);
        info.update();
    }

    function zoomToFeature(e) {
        map.fitBounds(e.target.getBounds());
    }

    function onEachFeature(feature, layer) {
        layer.on({
            mouseover: highlightFeature,
            mouseout: resetHighlight,
            click: zoomToFeature
        });
    }

    var geojson = L.geoJson(estados, {
        style: style,
        onEachFeature: onEachFeature
    }).addTo(map);



    //ZOOM
    var resetZoomControl = L.control({ position: 'topleft' });

    resetZoomControl.onAdd = function (map) {
        var div = L.DomUtil.create('div', 'reset-zoom-control');
        div.innerHTML = '<button class="btn btn-cre-rojo-home"><i class="bi bi-house-door"></i></button>';
        div.firstChild.onclick = function () {
            resetZoom(map);
        };
        return div;
    };

    resetZoomControl.addTo(map);

    function resetZoom(map) {
        map.setView([24.572503, -101.768257], 5);
    }



    /////////////DISTANCIAS/////////////////////
    // Configura las opciones de dibujo
    var drawControl = new L.Control.Draw({
        draw: {
            polygon: false,
            polyline: true,
            rectangle: false,
            circle: false,
            marker: false,
            circlemarker: false
        },
        edit: false
    });

    map.addControl(drawControl);

    // Cuando se dibuja una línea, calcula la distancia
    map.on('draw:created', function (e) {
        var type = e.layerType,
            layer = e.layer;

        if (type === 'polyline') {
            var latlngs = layer.getLatLngs();
            var distance = 0;
            for (var i = 1; i < latlngs.length; i++) {
                distance += latlngs[i - 1].distanceTo(latlngs[i]);
            }
            // Convertir la distancia a km y redondear a 2 decimales
            distance = Math.round((distance / 1000) * 100) / 100;
            // Crear un popup con la distancia
            layer.bindPopup('Distancia: ' + distance + ' km').openPopup();
            // Añadir la línea al mapa
            layer.addTo(map);
        }
    });

</script>


@*Funciones del Mapa*@
<script>

    //Limpia los Marcadores del Mapa
    function limpiarMarcadores() {
        // Limpiar todas las capas de marcadores y círculos
        map.eachLayer(function (layer) {
            if (layer instanceof L.Marker || layer instanceof L.MarkerClusterGroup || layer instanceof L.Circle) {
                map.removeLayer(layer);
            }
        });

        // Eliminar la capa de municipios
        //if (municipiosLayer) {
        //    map.removeLayer(municipiosLayer);
        //    municipiosLayer = null; // Establecer la variable municipiosLayer como nula
        //}
    }

    //Carga las Solicitudes de GLP(Ahorita Petrolíferos actualizar!) al mapa
    function CargaSolicitudes() {
        limpiarMarcadores();
        $.ajax({
            url: '/Indicadores/GetSolicitudes_Electricidad',
            type: 'GET',


            contentType: 'application/json',

            success: function (response) {
                // console.log("Get Solicitudes:", response); // ver la respuesta en consola
                // Crea un grupo de marcadores
                var markers = L.markerClusterGroup();

                //Crea los Iconos
                var iconoBase = L.Icon.extend({
                    options: {
                        iconSize: [24, 24],
                        iconAnchor: [12, 16],
                        popupAnchor: [-3, -76]
                    }
                });

                //Asignación de Iconos
                var iconoSolicitudes = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Solicitudes.png' });
                var iconoSolicitudesUrl;
                iconoSolicitudesUrl = '@Cdn.Url/img_snier/vistas/Solicitudes.png';
                // Añade marcadores al grupo para cada conjunto de coordenadas en la respuesta
                response.forEach(function (item) {
                    // Asigna el icono de acuerdo a la categoría


                    var marker = L.marker([item.latitud_GEO, item.longitud_GEO], { icon: iconoSolicitudes });


                    marker.bindPopup(
                        "<style>" +
                        ".popup-content {" +
                        "width: 300px;" +
                        "height: 150px;" +
                        "overflow-y: auto;" +
                        "padding: 10px;" +
                        "}" +
                        "h2, h3, h4, p, li {" +
                        "margin: 0 0 10px 0;" +
                        "}" +
                        "ul {" +
                        "padding-left: 20px;" +
                        "}" +
                        "img {" +
                        "vertical-align: middle;" +
                        "margin-right: 10px;" +
                        "}" +
                        "</style>" +
                        "<div class='popup-content'>" +
                        "<h2 class='subtitulo'><img src='" + iconoSolicitudesUrl + "' style='height: 24px; width: 24px;'/><strong>" + item.razon_social + "</strong></h2>" +
                        "<br>" +
                        "<h6><i class='bi bi-fuel-pump''></i> Marca Solicitada: " + item.marca_solicitada + "</h6>" +
                        "<h6><i class='bi bi-qr-code'></i> Turno de Kmis: " + item.turno + "</h6>" +
                        "<h6><i class='bi bi-fingerprint'></i> ID Solicitud: " + item.id + "</h6>" +
                        "<p><i class='bi bi-geo-alt-fill'></i> Entidad Federativa: " + item.eF_Nombre + "</p>" +
                        "<ul>" +
                        "<li><strong>Municipio:</strong> " + item.municipio_Nombre + "</li>" +
                        "<li><strong>¿Documentos Completos?:</strong> " + (item.documentos_completos == "1" ? 'SI' : 'No') + "</li>" +
                        "<li><strong>¿Tiene Análisis de Riesgo?:</strong> " + (item.analisis_riesgo == "1" ? 'SI' : 'No') + "</li>" +
                        "</ul>" +
                        "<a class='street-view-link btn btn-cre-verde' href='#'>Ver vista de calle</a> <hr />" +
                        "<a class='btn btn-cre-rojo' target='_blank' href='https://titan.cre.gob.mx/Consulta/Turno/" + item.turno + "'>Ver Expediente en Kmis</a>" +
                        "</div>"
                    );


                    marker.on('popupopen', function (e) {
                        var popup = e.popup;
                        var streetViewLink = popup.getElement().querySelector('.street-view-link');
                        streetViewLink.addEventListener('click', function () {
                            var lat = e.target.getLatLng().lat.toPrecision(8);
                            var lon = e.target.getLatLng().lng.toPrecision(8);
                            var streetViewURL = 'http://maps.google.com/maps?q=&layer=c&cbll=' + lat + ',' + lon + '&cbp=11,0,0,0,0';
                            window.open(streetViewURL, '_blank');
                        });
                    });

                    markers.addLayer(marker);
                    var circle = L.circle([item.latitud_GEO, item.longitud_GEO], {
                        color: '#1e3143', // Color del círculo
                        fillColor: '#1e3143', // Color de relleno del círculo
                        fillOpacity: 0.2, // Opacidad del relleno del círculo
                        radius: 300       // Radio en metros
                    }).addTo(map);

                });

                map.addLayer(markers);






            },


            error: function (error) {
                // Maneja el error si ocurre.
            }


        });


    }
    function CargaSolicitudes_1() {

        $.ajax({
            url: '/Indicadores/GetSolicitudes_Electricidad',
            type: 'GET',


            contentType: 'application/json',

            success: function (response) {
                // console.log("Get Solicitudes:", response); // ver la respuesta en consola
                // Crea un grupo de marcadores
                var markers = L.markerClusterGroup();

                //Crea los Iconos
                var iconoBase = L.Icon.extend({
                    options: {
                        iconSize: [24, 24],
                        iconAnchor: [12, 16],
                        popupAnchor: [-3, -76]
                    }
                });

                //Asignación de Iconos
                var iconoSolicitudes = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Solicitudes.png' });
                var iconoSolicitudesUrl;
                iconoSolicitudesUrl = '@Cdn.Url/img_snier/vistas/Solicitudes.png';
                // Añade marcadores al grupo para cada conjunto de coordenadas en la respuesta
                response.forEach(function (item) {
                    // Asigna el icono de acuerdo a la categoría


                    var marker = L.marker([item.latitud_GEO, item.longitud_GEO], { icon: iconoSolicitudes });


                    marker.bindPopup(
                        "<style>" +
                        ".popup-content {" +
                        "width: 300px;" +
                        "height: 150px;" +
                        "overflow-y: auto;" +
                        "padding: 10px;" +
                        "}" +
                        "h2, h3, h4, p, li {" +
                        "margin: 0 0 10px 0;" +
                        "}" +
                        "ul {" +
                        "padding-left: 20px;" +
                        "}" +
                        "img {" +
                        "vertical-align: middle;" +
                        "margin-right: 10px;" +
                        "}" +
                        "</style>" +
                        "<div class='popup-content'>" +
                        "<h2 class='subtitulo'><img src='" + iconoSolicitudesUrl + "' style='height: 24px; width: 24px;'/><strong>" + item.razon_social + "</strong></h2>" +
                        "<br>" +
                        "<h6><i class='bi bi-fuel-pump''></i> Marca Solicitada: " + item.marca_solicitada + "</h6>" +
                        "<h6><i class='bi bi-qr-code'></i> Turno de Kmis: " + item.turno + "</h6>" +
                        "<h6><i class='bi bi-fingerprint'></i> ID Solicitud: " + item.id + "</h6>" +
                        "<p><i class='bi bi-geo-alt-fill'></i> Entidad Federativa: " + item.eF_Nombre + "</p>" +
                        "<ul>" +
                        "<li><strong>Municipio:</strong> " + item.municipio_Nombre + "</li>" +
                        "<li><strong>¿Documentos Completos?:</strong> " + (item.documentos_completos == "1" ? 'SI' : 'No') + "</li>" +
                        "<li><strong>¿Tiene Análisis de Riesgo?:</strong> " + (item.analisis_riesgo == "1" ? 'SI' : 'No') + "</li>" +
                        "</ul>" +
                        "<a class='street-view-link btn btn-cre-verde' href='#'>Ver vista de calle</a> <hr />" +
                        "<a class='btn btn-cre-rojo' target='_blank' href='https://titan.cre.gob.mx/Consulta/Turno/" + item.turno + "'>Ver Expediente en Kmis</a>" +
                        "</div>"
                    );


                    marker.on('popupopen', function (e) {
                        var popup = e.popup;
                        var streetViewLink = popup.getElement().querySelector('.street-view-link');
                        streetViewLink.addEventListener('click', function () {
                            var lat = e.target.getLatLng().lat.toPrecision(8);
                            var lon = e.target.getLatLng().lng.toPrecision(8);
                            var streetViewURL = 'http://maps.google.com/maps?q=&layer=c&cbll=' + lat + ',' + lon + '&cbp=11,0,0,0,0';
                            window.open(streetViewURL, '_blank');
                        });
                    });

                    markers.addLayer(marker);
                    var circle = L.circle([item.latitud_GEO, item.longitud_GEO], {
                        color: '#1e3143', // Color del círculo
                        fillColor: '#1e3143', // Color de relleno del círculo
                        fillOpacity: 0.2, // Opacidad del relleno del círculo
                        radius: 300       // Radio en metros
                    }).addTo(map);

                });

                map.addLayer(markers);






            },


            error: function (error) {
                // Maneja el error si ocurre.
            }


        });


    }


    //Carga los Expendios de GLP Autorizados Validando que atributos son visibles en el pop-up de la coordenada
    function handleNull(value) {
        return value ? value : "S/D-Sin Dato";
    }
    var datosExpendios; // variable global para almacenar todos los expendios
    function CargaExpendios_1() {
        $.ajax({
            url: '/Indicadores/GetExpendiosAutorizadosElectricidad',
            type: 'GET',
            // data: JSON.stringify(datos_mun),
            contentType: 'application/json',
            success: function (response) {
                console.log("Estos son los Expendios Autorizados:", response); // ver la respuesta en consola
                datosExpendios = response; // Guarda la respuesta en la variable global

                function generarContenidoPopup(coordenada) {
                    var contenido = "<style>" +
                        ".popup-content {" +
                        "    width: 280px;" +
                        "    max-height: 180px;" +
                        "    overflow-y: auto;" +
                        "    padding: 10px;" +
                        "}" +
                        "h2, h3, h4, p, li {" +
                        "    margin: 0 0 10px 0;" +
                        "}" +
                        "ul {" +
                        "    padding-left: 20px;" +
                        "}" +
                        "img {" +
                        "    vertical-align: middle;" +
                        "    margin-right: 10px;" +
                        "}" +
                        "</style>";

                    contenido += "<div class='popup-content'>";

                    if (camposVisiblesGlobal.includes("RazonSocial")) {
                        contenido += "<h2 class='subtitulo'><img src='@Cdn.Url/img_snier/vistas/central_electrica.png' style='height: 24px; width: 24px;'/><strong>" + handleNull(coordenada.razonSocial) + "</strong></h2><br>";
                    }

                    contenido += "<ul>";

                    if (camposVisiblesGlobal.includes("EfId")) {//NO TENEMOS EL NOMBRE DE LA EF EN CAMPOS VISIBLES SOLO EL ID LO CRUZO EN LA CONSULTA DEL REPOSITORIO
                        contenido += "<li><strong>Entidad Federativa:</strong> " + handleNull(coordenada.efNombre) + "</li>";
                    }
                    if (camposVisiblesGlobal.includes("NumeroPermiso")) {
                        contenido += "<li><strong>NumeroPermiso:</strong> " + handleNull(coordenada.numeroPermiso) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("EfId")) {
                        contenido += "<li><strong>EfId:</strong> " + handleNull(coordenada.efId) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("MpoId")) {
                        contenido += "<li><strong>MpoId:</strong> " + handleNull(coordenada.mpoId) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("Expediente")) {
                        contenido += "<li><strong>Expediente:</strong> " + handleNull(coordenada.expediente) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("RazonSocial")) {
                        contenido += "<li><strong>RazonSocial:</strong> " + handleNull(coordenada.razonSocial) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("FechaDeOtorgamiento")) {
                        contenido += "<li><strong>FechaDeOtorgamiento:</strong> " + handleNull(coordenada.fechaDeOtorgamiento) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("LatitudGeo")) {
                        contenido += "<li><strong>LatitudGeo:</strong> " + handleNull(coordenada.latitudGeo) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("LongitudGeo")) {
                        contenido += "<li><strong>LongitudGeo:</strong> " + handleNull(coordenada.longitudGeo) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("Calle")) {
                        contenido += "<li><strong>Calle:</strong> " + handleNull(coordenada.calle) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("Colonia")) {
                        contenido += "<li><strong>Colonia:</strong> " + handleNull(coordenada.colonia) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("CodigoPostal")) {
                        contenido += "<li><strong>CodigoPostal:</strong> " + handleNull(coordenada.codigoPostal) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("Estatus")) {
                        contenido += "<li><strong>Estatus:</strong> " + handleNull(coordenada.estatus) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("Rfc")) {
                        contenido += "<li><strong>Rfc:</strong> " + handleNull(coordenada.rfc) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("FechaRecepcion")) {
                        contenido += "<li><strong>FechaRecepcion:</strong> " + handleNull(coordenada.fechaRecepcion) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("Marca")) {
                        contenido += "<li><strong>Marca:</strong> " + handleNull(coordenada.marca) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("TipoPermiso")) {
                        contenido += "<li><strong>TipoPermiso:</strong> " + handleNull(coordenada.tipoPermiso) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("inicioOperaciones")) {
                        contenido += "<li><strong>inicioOperaciones:</strong> " + handleNull(coordenada.inicioOperaciones) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("CapacidadInstalacion")) {
                        contenido += "<li><strong>CapacidadInstalacion:</strong> " + handleNull(coordenada.capacidadInstalacion) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("VigenciaAnos")) {
                        contenido += "<li><strong>VigenciaAnos:</strong> " + handleNull(coordenada.vigenciaAnos) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("NumeroSENER")) {
                        contenido += "<li><strong>NumeroSENER:</strong> " + handleNull(coordenada.numeroSENER) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("SubTipo")) {
                        contenido += "<li><strong>SubTipo:</strong> " + handleNull(coordenada.subTipo) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("SiglasTipo")) {
                        contenido += "<li><strong>SiglasTipo:</strong> " + handleNull(coordenada.siglasTipo) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("Otorgamiento")) {
                        contenido += "<li><strong>Otorgamiento:</strong> " + handleNull(coordenada.otorgamiento) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("FechaAcuse")) {
                        contenido += "<li><strong>FechaAcuse:</strong> " + handleNull(coordenada.fechaAcuse) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("EstatusSAT")) {
                        contenido += "<li><strong>EstatusSAT:</strong> " + handleNull(coordenada.estatusSAT) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("SuspensionInicio")) {
                        contenido += "<li><strong>SuspensionInicio:</strong> " + handleNull(coordenada.suspensionInicio) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("SuspensionFin")) {
                        contenido += "<li><strong>SuspensionFin:</strong> " + handleNull(coordenada.suspensionFin) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("NumeroTanques")) {
                        contenido += "<li><strong>NumeroTanques:</strong> " + handleNull(coordenada.numeroTanques) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("CapacidadLitros")) {
                        contenido += "<li><strong>CapacidadLitros:</strong> " + handleNull(coordenada.capacidadLitros) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("NumeroUnidades")) {
                        contenido += "<li><strong>NumeroUnidades:</strong> " + handleNull(coordenada.numeroUnidades) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("NumeroDeCentralesDeGuarda")) {
                        contenido += "<li><strong>NumeroDeCentralesDeGuarda:</strong> " + handleNull(coordenada.numeroDeCentralesDeGuarda) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("DomicilioDeGuarda")) {
                        contenido += "<li><strong>DomicilioDeGuarda:</strong> " + handleNull(coordenada.domicilioDeGuarda) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("SuministroRecepcion")) {
                        contenido += "<li><strong>SuministroRecepcion:</strong> " + handleNull(coordenada.suministroRecepcion) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("PermisoSuministro")) {
                        contenido += "<li><strong>PermisoSuministro:</strong> " + handleNull(coordenada.permisoSuministro) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("CompartenTanques")) {
                        contenido += "<li><strong>CompartenTanques:</strong> " + handleNull(coordenada.compartenTanques) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("Modificacion")) {
                        contenido += "<li><strong>Modificacion:</strong> " + handleNull(coordenada.modificacion) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("Asociacion")) {
                        contenido += "<li><strong>Asociacion:</strong> " + handleNull(coordenada.asociacion) + "</li>";
                    }

                    if (camposVisiblesGlobal.includes("Gie")) {
                        contenido += "<li><strong>Gie:</strong> " + handleNull(coordenada.gie) + "</li>";
                    }

                    contenido += "</ul>";

                    if (camposVisiblesGlobal.includes("NumeroPermiso")) {
                        contenido += "<a class='btn btn-cre-rojo' target='_blank' href='/Indicadores/DetalleExpendio?NumeroPermiso=" + coordenada.numeroPermiso + "'>Ver detalle</a>";
                    }

                    contenido += "<a class='street-view-link btn btn-cre-verde' href='http://maps.google.com/maps?q=&layer=c&cbll=" + coordenada.latitudGeo + "," + coordenada.longitudGeo + "&cbp=11,0,0,0,0' target='_blank'><b> Ver vista de calle </b></a>";


                    contenido += "</div>";

                    return contenido;
                }
                //Mapa de Resultados/////////////////////////////////////////////////////////////////////
                // Crea un grupo de marcadores
                var markers = L.markerClusterGroup();
                // Crea los iconos
                var iconoBase = L.Icon.extend({
                    options: {
                        iconSize: [24, 24],
                        iconAnchor: [12, 16],
                        popupAnchor: [-3, -76]
                    }
                });

                var iconoExpendio = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/central_electrica.png' });

                // Agrega los marcadores para las coordenadas del mapa actual
                for (var j = 0; j < response.length; j++) {
                    var coordenada = response[j];
                    var marker = L.marker([coordenada.latitudGeo, coordenada.longitudGeo], { icon: iconoExpendio });
                    var contenidoPopup = generarContenidoPopup(coordenada);
                    marker.bindPopup(contenidoPopup);



                    markers.addLayer(marker);
                }

                map.addLayer(markers);



            },
            error: function (error) {
                // Maneja el error si ocurre.
            }
        });
    }




    function CargaSyE() {
        limpiarMarcadores();
        CargaExpendios_1();
        CargaSolicitudes_1();
    }

</script>
@*Guia*@
<script>
    function openModal() {
        document.getElementById('videoModal').style.display = 'flex';
    }

    function closeModal() {
        document.getElementById('videoModal').style.display = 'none';
    }

</script>