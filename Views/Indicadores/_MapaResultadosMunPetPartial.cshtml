@model Mep


<section id="despliega_mapa shadow p-3 mb-5 bg-body-tertiary rounded" >
 
    <div >
        <div class="row">
            <div class="col-sm p-3">
                <select id="estadomun" class="form-select" style="height: 45px;">
                    <option selected>
                        Selecciona una Entidad Federativa:
                    </option>
                    <option value="ags">Aguascalientes</option>
                    <option value="bc">Baja California</option>
                    <option value="bcs">Baja California Sur</option>
                    <option value="camp">Campeche</option>
                    <option value="coah">Coahuila</option>
                    <option value="col">Colima</option>
                    <option value="chis">Chiapas</option>
                    <option value="chih">Chihuahua</option>
                    <option value="cdmx">Ciudad de México</option>
                    <option value="dgo">Durango</option>
                    <option value="gto">Guanajuato</option>
                    <option value="gro">Guerrero</option>
                    <option value="hgo">Hidalgo</option>
                    <option value="jal">Jalisco</option>
                    <option value="mex">México</option>
                    <option value="mich">Michoacán</option>
                    <option value="mor">Morelos</option>
                    <option value="nay">Nayarit</option>
                    <option value="nl">Nuevo León</option>
                    <option value="oax">Oaxaca</option>
                    <option value="pue">Puebla</option>
                    <option value="qro">Querétaro</option>
                    <option value="qroo">Quintana Roo</option>
                    <option value="slp">San Luis Potosí</option>
                    <option value="sin">Sinaloa</option>
                    <option value="son">Sonora</option>
                    <option value="tab">Tabasco</option>
                    <option value="tamps">Tamaulipas</option>
                    <option value="tlax">Tlaxcala</option>
                    <option value="ver">Veracruz</option>
                    <option value="yuc">Yucatán</option>
                    <option value="zac">Zacatecas</option>
                </select>
            </div>
@*            <div class="col-sm p-3">
                <div class="justify-content-center">
                    <button class="btn btn-cre-rojo" data-bs-toggle="offcanvas" data-bs-target="#ejemploOffcanvas">
                        <i class="bi bi-info-circle-fill"></i> - Ver Información
                    </button>
                    <partial name="_Infomapas_PRPEP" />

                </div>
            </div>*@
            <div class="col-sm p-3">
                @*Prueba*@
                <div class="dropdown" style="position: relative; z-index: 1000;">
                    <button class="btn btn-cre-rojo dropdown-toggle" id="dropdownMenuLinkMun" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Selecciona Capa/Opción:
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" onclick="limpiarMarcadoresmun()">Limpiar Mapa</a></li>
                        <li><hr></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="CargaSolicitudesmun()">Ver Solicitudes a Revisar</a></li>
                       @* <li><a class="dropdown-item" href="javascript:void(0)" onclick="CargaExpendiosmun()">Ver Permisos de Expendios a Nivel Nacional</a></li>*@
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="CargaSyEmun()">Ver Solicitudes y Expendios</a></li>
                        <li><hr></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="ObtieneI1M()">Ver Indicador Municipal 1 - Atención al Usuario Final</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="ObtieneI2M()">Ver Indicador Municipal 2 - Densidad Territoprial del Expendios</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="ObtieneI3M()">Ver Indicador Municipal 3 - Densidad Territorial de Vehículos </a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="ObtieneI4M()">Ver Indicador Municipal 4 - Marginación </a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="ObtieneI5M()">Ver Indicador Municipal 5 - Cuota de Mercados Petrololíferos </a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="ObtieneI6M()">Ver Indicador Municipal 6 - Couta de Mercado Gasolinas</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="ObtieneI8M()">Ver Indicador Municipal 7 - Impulso al Desarrollo del Sureste </a></li>
                      @*  <li><a class="dropdown-item" href="javascript:void(0)" onclick="ColoresIMun()">ColoresIMun() </a></li>*@
                       
                    </ul>
                </div>

            </div>
@*            <div class="col-sm p-3">
                <!-- Botón que activará el modal -->
                <button onclick="openModal()" class="btn btn-cre-rojo"><i class="bi bi-camera-reels-fill"></i> Ver Guía</button>

                <!-- Modal para mostrar el video -->
                <div id="videoModal" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background-color:rgba(0,0,0,0.5); align-items:center; justify-content:center; z-index:3000">
                    <video width="80%" controls>
                        <source src="/video/guia.mp4" type="video/mp4">
                        Tu navegador no soporta el elemento video.
                    </video>
                    <button onclick="closeModal()" class="btn btn-cre-rojo" style="position:absolute; top:10px; right:10px;z-index:3000; width:300px!important">Cerrar</button>
                </div>

            </div>*@
        </div>
    </div>

    <div id="main-container-mun"> 
    <div class="search-container p-3" id="search-container-mun">
        <label class="form-label">Buscar en el Mapa:</label>
        <input type="text" id="busquedaGeneralInputmun" class="form-control" placeholder="Escribe el Número de Solicitud, Turno K-MIS, Entidad Federativa o Municipio: 000 ó V-12345">
        <div id="autocomplete-list-mun" class="autocomplete-items"></div>
        <button class="btn btn-cre-rojo-home" onclick="buscarGeneralmun()" style="width:10% !important"><i class="bi bi-search"></i></button>
    
    </div>
    <br />

    <button id="fullscreen-btn-mun" class="btn btn-primary">Pantalla Completa</button>

    <div id="fullscreen-container-mun" class="d-flex h-100">
        <div class="row m-0 w-100">
            <div id="sidebarmun" class="d-flex flex-column justify-content-between col-3 p-2">
            </div>
            <div id="mapmun" class="col" style="position: relative; z-index: 500; "></div>
        </div>
    </div>
    </div>

    <style>
        /* Estilos para pantalla completa */
        .fullscreen-mode #fullscreen-container-mun,
        .fullscreen-mode .row,
        .fullscreen-mode #sidebarmun,
        .fullscreen-mode #mapmun {
            height: 100%;
        }

        .fullscreen-mode #fullscreen-container-mun {
            display: flex;
            flex-direction: column;
        }

        .fullscreen-mode #search-container-mun {
            background-color: white;
            z-index: 1000; /* Asegura que el buscador esté por encima de otros elementos si es necesario */
        }

        .fullscreen-mode #sidebarmun {
            overflow-y: auto; /* Si deseas que la barra de datos sea desplazable */
        }

        .fullscreen-mode #mapmun {
            height: 100%;
        }
    </style> 
    <div class="leyenda">
            <p>Mayor Concentración de Solicitudes</p>
            <p>Concentración Promedio de Solicitudes</p>
            <p>Menor concentración de Solicitudes</p>
            <p>Radio de 3 Km</p>
            <p> Ductos</p>
    </div>
    
    <br />
</section>

@*Script de Pantalla Completa*@
<script>
    document.addEventListener('DOMContentLoaded', (event) => {
        const fullscreenButton = document.getElementById('fullscreen-btn-mun');
        const fullscreenContainer = document.getElementById('fullscreen-container-mun');
        const searchContainer = document.getElementById('search-container-mun');
        const originalParent = searchContainer.parentNode;
        const originalNextSibling = searchContainer.nextSibling;

        fullscreenButton.addEventListener('click', () => {
            if (!document.fullscreenElement) {
                fullscreenContainer.requestFullscreen().catch(err => {
                    alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);
                });
            } else {
                document.exitFullscreen();
            }
        });

        document.addEventListener('fullscreenchange', (event) => {
            if (document.fullscreenElement) {
                document.documentElement.classList.add('fullscreen-mode');
                fullscreenButton.textContent = "Salir de Pantalla Completa";
                fullscreenContainer.insertBefore(searchContainer, fullscreenContainer.firstChild);
            } else {
                document.documentElement.classList.remove('fullscreen-mode');
                fullscreenButton.textContent = "Pantalla Completa";
                if (originalNextSibling) {
                    originalParent.insertBefore(searchContainer, originalNextSibling);
                } else {
                    originalParent.appendChild(searchContainer);
                }
            }
        });
    });
</script>

@*Menú de Estados*@
<script>
    // Detecta el cambio de selección en el menú de estados
    document.getElementById("estadomun").addEventListener("change", function () {
        // Obtiene el valor seleccionado del menú de estados
        var estado = document.getElementById("estadomun").value;

        // Muestra el estado seleccionado en el mapmuna
        switch (estado) {
            case "ags":
                mapmun.setView([22.025278, -102.372778], 9);
                break;
            case "bc":
                mapmun.setView([30.391389, -115.291389], 7);
                break;
            case "bcs":
                mapmun.setView([26.044444, -112.399722], 7);
                break;
            case "camp":
                mapmun.setView([18.938333, -90.764722], 7);
                break;
            case "coah":
                mapmun.setView([27.158056, -101.719444], 7);
                break;
            case "col":
                mapmun.setView([19.101944, -103.014722], 9);
                break;
            case "chis":
                mapmun.setView([16.753056, -92.6375], 7);
                break;
            case "chih":
                mapmun.setView([28.673611, -106.102222], 7);
                break;
            case "cdmx":
                mapmun.setView([19.432778, -99.133333], 10);
                break;
            case "dgo":
                mapmun.setView([24.865278, -104.902222], 7);
                break;
            case "gto":
                mapmun.setView([20.875, -101.478611], 8);
                break;
            case "gro":
                mapmun.setView([17.814722, -100.353056], 8);
                break;
            case "hgo":
                mapmun.setView([20.5325, -98.870556], 8);
                break;
            case "jal":
                mapmun.setView([20.673611, -103.343333], 8);
                break;
            case "mex":
                mapmun.setView([19.483611, -99.689722], 8);
                break;
            case "mich":
                mapmun.setView([19.699722, -101.191389], 8);
                break;
            case "mor":
                mapmun.setView([18.858611, -99.223611], 9);
                break;
            case "nay":
                mapmun.setView([21.799444, -105.220833], 8);
                break;
            case "nl":
                mapmun.setView([25.649167, -100.443611], 9);
                break;
            case "oax":
                mapmun.setView([16.895833, -96.806667], 8);
                break;
            case "pue":
                mapmun.setView([19.051389, -98.193889], 8);
                break;
            case "qro":
                mapmun.setView([20.854722, -99.847222], 9);
                break;
            case "qroo":
                mapmun.setView([19.642778, -87.072222], 8);
                break;
            case "slp":
                mapmun.setView([22.156944, -100.985556], 8);
                break;
            case "sin":
                mapmun.setView([24.288611, -107.366944], 8);
                break;
            case "son":
                mapmun.setView([29.089444, -110.961667], 7);
                break;
            case "tab":
                mapmun.setView([17.980000, -92.930000], 8);
                break;
            case "tamps":

                mapmun.setView([24.014167, -98.844444], 7);
                break;
            case "tlax":
                mapmun.setView([19.312222, -98.239722], 10);
                break;
            case "ver":
                mapmun.setView([19.546389, -96.914167], 8);
                break;
            case "yuc":
                mapmun.setView([20.891944, -89.528611], 8);
                break;
            case "zac":
                mapmun.setView([22.770833, -102.583611], 8);
                break;
            default:

                mapmun.setView([23.634501, -102.552784], 5);
                break;
        }
    });
</script>
@*Configuración del Mapa  de Municipios*@
<script>
    //1.-Sección de Variables

    var camposVisiblesGlobalmun = []; //Variable global para almacenar los terminos de búqueda Sugerencia de Terminos
    var availableTermsmun = [];//Variable global para almacenar los terminos de búqueda Sugerencia de Terminos
    var datosExpendiosmun = []; // variable global para almacenar todos los expendios
    var datosSolExpendiosmun = []; // variable global para almacenar las aolicitudes de todos los expendios
  

    //2.-Función que obtiene los Campos Visibles para el Mapa de Municipios
    function obtenerCamposVisibles() {
        $.ajax({
            url: '/Indicadores/GetCamposVisibles', // Asegúrate de actualizar 'TuControlador' con el nombre de tu controlador
            type: 'GET',
            contentType: 'application/json',
            success: function (camposVisibles) {
                // Aquí tienes la lista de campos visibles
                console.log(camposVisibles);
                camposVisiblesGlobalmun = camposVisibles;
                // Llama a la función para llenar los términos de búsqueda aquí si es necesario
                // Por ejemplo:
                // llenarTerminosDeBusqueda();
            },
            error: function (error) {
                console.error("Error al obtener campos visibles", error);
            }
        });
    }

    //3.-Mapa de Calificación a Nivel Municipal

    var mapmun = L.map('mapmun', {
        zoomControl: true, maxZoom: 28, minZoom: 5
    }).fitBounds([[16.515297504744552, -116.01198143543994], [31.280203931152798, -90.79533052556764]]);
    var hash = new L.Hash(mapmun);
    mapmun.attributionControl.setPrefix('<a href="https://github.com/tomchadwin/qgis2web" target="_blank">qgis2web</a> &middot; <a href="https://leafletjs.com" title="A JS library for interactive maps">Leaflet</a> &middot; <a href="https://qgis.org">QGIS</a>');
    var autolinker = new Autolinker({ truncate: { length: 30, location: 'smart' } });
    var bounds_group = new L.featureGroup([]);
    function setBounds() {
    }


    //3.1.-Crea los Iconos
    var iconoBase = L.Icon.extend({
        options: {
            iconSize: [24, 24],
            iconAnchor: [12, 16],
            popupAnchor: [-3, -76]
        }
    });

    //3.2-Asigna Iconos
    var iconoOptimas = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Aprobado.png' }),
        iconoViable = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/viable.png' }),
        iconoFactible = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/NoviableMun.png' });
    iconoNoViable = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/NoAprobado.png' });

    //////
    var currentMarkermun = null; // Referencia al marcador actual
    // var seleccionado = 'estado'; // Estado inicial
    var municipiosFiltradosmun = null;



    //Colores
    var initialStyle = {
        color: '#187A8C', // Color de línea
        fillColor: '#187A8C', // Color de relleno
        fillOpacity: 0.3, // Opacidad del relleno
        weight: 3 // Ancho de la línea
    };

    // Estilo para el hover
    var highlightStyle = {
        color: '#FFDB2EC',
        fillColor: '#FFDB2E', // Color de relleno
        fillOpacity: 0.3, // Opacidad del relleno
        weight: 3
    };

    // Capa de estados
    var estadosLayermun = L.geoJSON(estados, {
        style: initialStyle, // Aplicar estilo inicial
        onEachFeature: function (feature, layer) {
            layer.bindTooltip('<div class="custom-tooltip">' + feature.properties.NOMGEO + '</div>');
            layer.on('click', function (e) {
                cargarMunicipios(feature.properties.CVE_ENT);
                mapmun.fitBounds(layer.getBounds()); // Centra el mapa en el estado
            });
            // Efecto de hover
            layer.on('mouseover', function (e) {
                layer.setStyle(highlightStyle);
            });
            layer.on('mouseout', function (e) {
                estadosLayermun.resetStyle(layer);
            });
        }
    }).addTo(mapmun);

    // Capa de municipios (inicialmente vacía)
    var municipiosLayermun = L.geoJSON(null, {
        style: initialStyle, // Aplicar estilo inicial
        onEachFeature: onEachMunicipio
    }).addTo(mapmun);

    function onEachMunicipio(feature, layer) {
        layer.bindTooltip('<div class="custom-tooltip">' + feature.properties.NOM_MUN + ', ' + feature.properties.NOMGEO + '</div>');
        // Efecto de hover
        layer.on('mouseover', function (e) {
            layer.setStyle(highlightStyle);
        });
        layer.on('mouseout', function (e) {
            municipiosLayermun.resetStyle(layer);
        });

    }

    // Función para cargar los municipios correspondientes a un estado
    function cargarMunicipios(cveEnt) {
        municipiosLayermun.clearLayers();

        if (currentMarkermun) {
            mapmun.removeLayer(currentMarkermun);
            currentMarkermun = null;
        }

        municipiosFiltradosmun = {
            type: "FeatureCollection",
            features: municipios_mapa.features.filter(function (feature) {
                return feature.properties.CVE_ENT === cveEnt;
            })
        };

        municipiosLayermun.addData(municipiosFiltradosmun);
    }


    // Asignando a la búsqueda de términos
    estadosLayermun.eachLayer(function (layer) {
        if (layer.feature.properties.NOMGEO) { // Asegúrate de que la propiedad existe
            availableTermsmun.push(layer.feature.properties.NOMGEO);
        }
    });

    for (var i = 0; i < municipios_mapa.features.length; i++) {
        var municipio = municipios_mapa.features[i].properties.NOM_MUN;
        var estado = municipios_mapa.features[i].properties.NOMGEO; // Asumiendo que esta es la propiedad correcta para el estado

        // Asegúrate de que ambas propiedades existen antes de concatenar
        if (municipio && estado) {
            var nombreCompleto = municipio + ", " + estado;
            availableTermsmun.push(nombreCompleto);
        }
    }




    ////

    //3.3.-Vista Satelite
    mapmun.createPane('pane_GoogleSatellite_0');
    mapmun.getPane('pane_GoogleSatellite_0').style.zIndex = 0;
    var layer_GoogleSatellite_0 = L.tileLayer('https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
        pane: 'pane_GoogleSatellite_0',
        opacity: 1.0,
        attribution: '<a href="https://www.google.at/permissions/geoguidelines/attr-guide.html">Map data �2015 Google</a>',
        minZoom: 1,
        maxZoom: 28,
        minNativeZoom: 0,
        maxNativeZoom: 20
    });
    layer_GoogleSatellite_0;
    mapmun.addLayer(layer_GoogleSatellite_0);


    //3.4.-Configura los Base Layers
    var baseLayers = {
        "OpenStreetMap": L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }),

        "Vista Satélite": layer_GoogleSatellite_0


    };

    //3.5- Activa una capa de mosaicos como vista inicial
    baseLayers["OpenStreetMap"].addTo(mapmun);

    //3.6- Control de capas para seleccionar la vista del mapa
    L.control.layers(baseLayers).addTo(mapmun);
    L.control.scale().addTo(mapmun); // Agregar la escala gr�fica al mapa

    //3.7.-Botón de Zoom
    var resetZoomControl = L.control({ position: 'topleft' });

    resetZoomControl.onAdd = function (mapmun) {
        var div = L.DomUtil.create('div', 'reset-zoom-control');
        div.innerHTML = '<button class="btn btn-cre-rojo-home" onclick="resetZoom()"><i class="bi bi-house-door"></i></button>';
        return div;
    };

    resetZoomControl.addTo(mapmun);

    function resetZoom() {
        mapmun.setView([24.572503, -101.768257], 5);
    }


    //3.8.-Regla de Distancias
    var drawControl = new L.Control.Draw({
        draw: {
            polygon: false,
            polyline: true,
            rectangle: false,
            circle: false,
            marker: false,
            circlemarker: false
        },
        edit: false
    });

    mapmun.addControl(drawControl);

    //3.9-Cuando se dibuja una linea, calcula la distancia
    mapmun.on('draw:created', function (e) {
        var type = e.layerType,
            layer = e.layer;

        if (type === 'polyline') {
            var latlngs = layer.getLatLngs();
            var distance = 0;
            for (var i = 1; i < latlngs.length; i++) {
                distance += latlngs[i - 1].distanceTo(latlngs[i]);
            }
            // Convertir la distancia a km y redondear a 2 decimales
            distance = Math.round((distance / 1000) * 100) / 100;
            // Crear un popup con la distancia
            layer.bindPopup('Distancia: ' + distance + ' km').openPopup();
            // A�adir la l�nea al mapa
            layer.addTo(mapmun);
        }
    });



</script>



@*Carga de Resultados y Shapes de Indicvadores*@
<script>
    var municipiosLayer; // Declarar la variable municipiosLayer en un ámbito global

    //console.log("Colores Original:", coloresImJson)
    function limpiarMarcadoresmun() {
        // Limpiar todas las capas de marcadores y círculos
        mapmun.eachLayer(function (layer) {
            if (layer instanceof L.Marker || layer instanceof L.MarkerClusterGroup || layer instanceof L.Circle || layer instanceof L.Polyline) {
                mapmun.removeLayer(layer);
            }
        });

        // Eliminar la capa de municipios
        if (municipiosLayer) {
            mapmun.removeLayer(municipiosLayer);
            municipiosLayer = null; // Establecer la variable municipiosLayer como nula
        }
    }
    //Función que carga los permisos de Expendio
    function CargaExpendiosmun() {
        // Limpiar marcadores existentes
        limpiarMarcadoresmun();
        // Tabla de Resultados
        $.ajax({
            url: '/Indicadores/GetExpendios',
            type: 'GET',
            // data: JSON.stringify(datos_mun),
            contentType: 'application/json',
            success: function (response) {
                console.log("Estos son los Expendios Vigentes:", response); // ver la respuesta en consola

                //Mapa de Resultados/////////////////////////////////////////////////////////////////////
                // Crea un grupo de marcadores
                var markers = L.markerClusterGroup();
                // Crea los iconos
                var iconoBase = L.Icon.extend({
                    options: {
                        iconSize: [24, 24],
                        iconAnchor: [12, 16],
                        popupAnchor: [-3, -76]
                    }
                });

                var iconoExpendio = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Expendio.png' });

                // Agrega los marcadores para las coordenadas del mapa actual
                for (var j = 0; j < response.length; j++) {
                    var coordenada = response[j];
                    var marker = L.marker([coordenada.latitud_GEO, coordenada.longitud_GEO], { icon: iconoExpendio });

                    marker.bindPopup(
                    "<h3>" + coordenada.numeroPermiso + "</h3>" +
                    "<p>" + coordenada.razón_social + "</p>" +
                    "<hr/>" +
                    "<ul>" +
                        "<li>Fecha de Otorgamiento del Permiso: " + coordenada.fechaOtorgamiento + "</li>" +
                        "<li>RFC: " + coordenada.rfc + "</li>" +
                    "</ul>" +
                    "<a class='btn btn-cre-amarillo' target='_blank' href='/Indicadores/DetalleExpendio?NumeroPermiso=" + coordenada.numeroPermiso + "'>Ver detalle</a>" +
                    "<br/>" +
                    "<a class='street-view-link btn btn-cre-verde' href='http://maps.google.com/maps?q=&layer=c&cbll=" + coordenada.latitud_GEO + "," + coordenada.longitud_GEO + "&cbp=11,0,0,0,0' target='_blank'><b>Ver vista de calle</b></a>"
                );

                    markers.addLayer(marker);
                }

                mapmun.addLayer(markers);
                Ductospetmun();
            },
            error: function (error) {
                // Maneja el error si ocurre.
            }
        });
    }
    function CargaSolicitudesmun() {
        // Limpiar marcadores existentes
        limpiarMarcadoresmun();
        var indicadores_seleccionados_nal = [];
        $('#misCheckboxes input:checked').each(function () {
            indicadores_seleccionados_nal.push($(this).val());
        });

        var indicadores_seleccionados_mun = [];
        $('#misCheckboxes_mun input:checked').each(function () {
            indicadores_seleccionados_mun.push($(this).val());
        });

        var datos_mun = {
            Umbral_Seleccionado_Nal: $('#umbral').val(),
            Indicadores_Seleccionados_Nal: indicadores_seleccionados_nal,
            Umbral_Seleccionado_Mun: $('#umbral_mun').val(),
            Indicadores_Seleccionados_Mun: indicadores_seleccionados_mun

            //dEBEN LLAMARSE IGUAL EN LA CLASE CLASE CALIFICACION FINAL
        };
        //    alert(JSON.stringify(datos_mun));
        console.log("Datos Municipio Nacional:", datos_mun);

        // Tabla de Resultados
        $.ajax({
            url: '/Indicadores/calificacion_MUN',
            type: 'POST',
            data: JSON.stringify(datos_mun),

            contentType: 'application/json',
            success: function (response) {
                console.log("Salida store MUN:", response); // ver la respuesta en consola


                //Mapa de Resultados/////////////////////////////////////////////////////////////////////
                // Crea un grupo de marcadores
                var markers = L.markerClusterGroup();
                // Crea los iconos
                var iconoBase = L.Icon.extend({
                    options: {
                        iconSize: [24, 24],
                        iconAnchor: [12, 16],
                        popupAnchor: [-3, -76]
                    }
                });

                var iconoOptimo = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Aprobado.png' }),
                    iconoViable = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/viable.png' }),
                    iconoFactible = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/NoviableMun.png' });
                    iconoNoViable = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/NoAprobado.png' });

                // Añade marcadores al grupo para cada conjunto de coordenadas en la respuesta
                response.forEach(function (item) {
                    // Asigna el icono de acuerdo a la categoría
                    var iconoActual;
                    var iconoActualUrl;
                    if (item.categoria == "Óptimo") {
                        iconoActual = iconoOptimo;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/Aprobado.png';
                    } else if (item.categoria == "Viable") {
                        iconoActual = iconoViable;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/viable.png';
                    } else if (item.categoria == "No Viable a Nivel Municipal") {
                        iconoActual = iconoFactible;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/NoviableMun.png';
                    }  else if (item.categoria == "No Viable a Nivel Entidad Federativa") {
                        iconoActual = iconoNoViable;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/NoAprobado.png';
                    }
                    
                    else {
                        iconoActual = iconoNoViable;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/NoAprobado.png';
                    }

                    var marker = L.marker([item.x_Geo, item.y_Geo], { icon: iconoActual });
                      
                      var botonEvaluar = iconoActualUrl === '@Cdn.Url/img_snier/vistas/NoAprobado.png'
                      ? "<button class='btn btn-cre-azul' onclick='redireccionarAEvaluacion(" + item.id + ", \"Petroliferos\")'>Acción Adicional: ¡Evaluar a Nivel Barrio!</button> <hr />"
                      : "";

                    marker.bindPopup(
                        "<style>" +
                        ".popup-content {" +
                        "width: 300px;" +
                        "height: 150px;" +
                        "overflow-y: auto;" +
                        "padding: 10px;" +
                        "}" +
                        "h2, h3, h4, p, li {" +
                        "margin: 0 0 10px 0;" +
                        "}" +
                        "ul {" +
                        "padding-left: 20px;" +
                        "}" +
                        "img {" +
                        "vertical-align: middle;" +
                        "margin-right: 10px;" +
                        "}" +
                        "</style>" +
                        "<div class='popup-content'>" +
                        "<h2 class='subtitulo'><img src='" + iconoActualUrl + "' style='height: 24px; width: 24px;'/><strong>" + item.razon_social + "</strong></h2>" +
                        "<br>" +
                        "<h6><i class='bi bi-fuel-pump''></i> Marca Solicitada: " + item.marca_solicitada + "</h6>" +
                       // "<h6><strong>Categoría:</strong> " + item.categoria + "</h6>" +
                        "<h6><i class='bi bi-qr-code'></i> Turno de Kmis: " + item.turno + "</h6>" +
                        "<h6><i class='bi bi-fingerprint'></i> ID Solicitud: " + item.id + "</h6>" +
                        "<p><i class='bi bi-geo-alt-fill'></i> Entidad Federativa: " + item.eF_Nombre + "</p>" +
                        "<ul>" +
                        "<li><strong>Municipio:</strong> " + item.municipio_Nombre + "</li>" +
                        "<li><strong>¿Documentos Completos?:</strong> " + (item.documentos_completos == "1" ? 'Sí' : 'No') + "</li>" +
                        "<li><strong>¿Tiene Análisis de Riesgo?:</strong> " + (item.analisis_riesgo == "1" ? 'Sí' : 'No') + "</li>" +
                        "</ul>" +
                        botonEvaluar +
                        "<button class='btn btn-cre-amarillo' onclick='redireccionarADetalle(" + item.id + ")'>Ver Expendios Cercanos a Solicitud y Parque Vehicular</button>  <hr />" +
                        "<a class='street-view-link btn btn-cre-verde' href='#'>Ver vista de calle</a> <hr />" +
                        "<a class='btn btn-cre-rojo' target='_blank' href='https://titan.cre.gob.mx/Consulta/Turno/" + item.turno + "'>Ver Expediente en Kmis</a>" +
                        "</div>"
                    );


                    marker.on('popupopen', function (e) {
                        var popup = e.popup;
                        var streetViewLink = popup.getElement().querySelector('.street-view-link');
                        streetViewLink.addEventListener('click', function () {
                            var lat = e.target.getLatLng().lat.toPrecision(8);
                            var lon = e.target.getLatLng().lng.toPrecision(8);
                            var streetViewURL = 'http://maps.google.com/maps?q=&layer=c&cbll=' + lat + ',' + lon + '&cbp=11,0,0,0,0';
                            window.open(streetViewURL, '_blank');
                        });
                    });

                    markers.addLayer(marker);
                    var circle = L.circle([item.x_Geo, item.y_Geo], {
                        color: '#1e3143', // Color del círculo
                        fillColor: '#1e3143', // Color de relleno del círculo
                        fillOpacity: 0.2, // Opacidad del relleno del círculo
                        radius: 3000       // Radio en metros
                    }).addTo(mapmun);

                });

                mapmun.addLayer(markers);
                Ductospetmun();
            },
            error: function (error) {
                // Maneja el error si ocurre.
            }


        });
    }
    function CargaExpendiosmun_1() {
     
        // Tabla de Resultados
        $.ajax({
            url: '/Indicadores/GetExpendios',
            type: 'GET',
           // data: JSON.stringify(datos_mun),
            contentType: 'application/json',
            success: function (response) {
                console.log("Estos son los Expendios Vigentes:", response); // ver la respuesta en consola

                //Mapa de Resultados/////////////////////////////////////////////////////////////////////
                // Crea un grupo de marcadores
                var markers = L.markerClusterGroup();
                // Crea los iconos
                var iconoBase = L.Icon.extend({
                    options: {
                        iconSize: [24, 24],
                        iconAnchor: [12, 16],
                        popupAnchor: [-3, -76]
                    }
                });

                var iconoExpendio = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Expendio.png' });

                // Agrega los marcadores para las coordenadas del mapa actual
                for (var j = 0; j < response.length; j++) {
                    var coordenada = response[j];
                    var marker = L.marker([coordenada.latitud_GEO, coordenada.longitud_GEO], { icon: iconoExpendio });

                    marker.bindPopup(
                        "<h3>" + coordenada.numeroPermiso + "</h3>" +
                        "<p>" + coordenada.razón_social + "</p>" +
                        "<hr/>" +
                        "<ul>" +
                            "<li>Fecha de Otorgamiento del Permiso: " + coordenada.fechaOtorgamiento + "</li>" +
                            "<li>RFC: " + coordenada.rfc + "</li>" +
                        "</ul>" +
                        "<a class='btn btn-cre-amarillo' target='_blank' href='/Indicadores/DetalleExpendio?NumeroPermiso=" + coordenada.numeroPermiso + "'>Ver detalle</a>" +
                        "<br/>" +
                        "<a class='street-view-link btn btn-cre-verde' href='http://maps.google.com/maps?q=&layer=c&cbll=" + coordenada.latitud_GEO + "," + coordenada.longitud_GEO + "&cbp=11,0,0,0,0' target='_blank'><b>Ver vista de calle</b></a>"
                    );

                    markers.addLayer(marker);
                }

                mapmun.addLayer(markers);
            },
            error: function (error) {
                // Maneja el error si ocurre.
            }
        });        

    }
    function CargaSolicitudesmun_1() {
       
        var indicadores_seleccionados_nal = [];
        $('#misCheckboxes input:checked').each(function () {
            indicadores_seleccionados_nal.push($(this).val());
        });

        var indicadores_seleccionados_mun = [];
        $('#misCheckboxes_mun input:checked').each(function () {
            indicadores_seleccionados_mun.push($(this).val());
        });

        var datos_mun = {
            Umbral_Seleccionado_Nal: $('#umbral').val(),
            Indicadores_Seleccionados_Nal: indicadores_seleccionados_nal,
            Umbral_Seleccionado_Mun: $('#umbral_mun').val(),
            Indicadores_Seleccionados_Mun: indicadores_seleccionados_mun

            //dEBEN LLAMARSE IGUAL EN LA CLASE CLASE CALIFICACION FINAL
        };
        //    alert(JSON.stringify(datos_mun));
        console.log("Datos Municipio Nacional:", datos_mun);

        // Tabla de Resultados
        $.ajax({
            url: '/Indicadores/calificacion_MUN',
            type: 'POST',
            data: JSON.stringify(datos_mun),

            contentType: 'application/json',
            success: function (response) {
                console.log("Salida store MUN:", response); // ver la respuesta en consola


                //Mapa de Resultados/////////////////////////////////////////////////////////////////////
                // Crea un grupo de marcadores
                var markers = L.markerClusterGroup();
                // Crea los iconos
                var iconoBase = L.Icon.extend({
                    options: {
                        iconSize: [24, 24],
                        iconAnchor: [12, 16],
                        popupAnchor: [-3, -76]
                    }
                });

                var iconoOptimo = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Aprobado.png' }),
                    iconoViable = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/viable.png' }),
                    iconoFactible = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/NoviableMun.png' });
                    iconoNoViable = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/NoAprobado.png' });

                // Añade marcadores al grupo para cada conjunto de coordenadas en la respuesta
                response.forEach(function (item) {
                    // Asigna el icono de acuerdo a la categoría
                    var iconoActual;
                    var iconoActualUrl;
                    if (item.categoria == "Óptimo") {
                        iconoActual = iconoOptimo;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/Aprobado.png';
                    } else if (item.categoria == "Viable") {
                        iconoActual = iconoViable;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/viable.png';
                    } else if (item.categoria == "No Viable a Nivel Municipal") {
                        iconoActual = iconoFactible;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/NoviableMun.png';
                    }else if (item.categoria == "No Viable a Nivel Entidad Federativa") {
                        iconoActual = iconoNoViable;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/NoAprobado.png';
                    }
                    
                    else {
                        iconoActual = iconoNoViable;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/NoAprobado.png';
                    }

                    var marker = L.marker([item.x_Geo, item.y_Geo], { icon: iconoActual });
                    var botonEvaluar = iconoActualUrl === '@Cdn.Url/img_snier/vistas/NoAprobado.png'
                    ? "<button class='btn btn-cre-azul' onclick='redireccionarAEvaluacion(" + item.id + ", \"Petroliferos\")'>Acción Adicional: ¡Evaluar a Nivel Barrio!</button> <hr />"
                    : "";

                    marker.bindPopup(
                        "<style>" +
                        ".popup-content {" +
                        "width: 300px;" +
                        "height: 150px;" +
                        "overflow-y: auto;" +
                        "padding: 10px;" +
                        "}" +
                        "h2, h3, h4, p, li {" +
                        "margin: 0 0 10px 0;" +
                        "}" +
                        "ul {" +
                        "padding-left: 20px;" +
                        "}" +
                        "img {" +
                        "vertical-align: middle;" +
                        "margin-right: 10px;" +
                        "}" +
                        "</style>" +
                        "<div class='popup-content'>" +
                        "<h2 class='subtitulo'><img src='" + iconoActualUrl + "' style='height: 24px; width: 24px;'/><strong>" + item.razon_social + "</strong></h2>" +
                        "<br>" +
                        "<h6><i class='bi bi-fuel-pump''></i> Marca Solicitada: " + item.marca_solicitada + "</h6>" +
                        //"<h6><strong>Categoría:</strong> " + item.categoria + "</h6>" +
                        "<h6><i class='bi bi-qr-code'></i> Turno de Kmis: " + item.turno + "</h6>" +
                        "<h6><i class='bi bi-fingerprint'></i> ID Solicitud: " + item.id + "</h6>" +
                        "<p><i class='bi bi-geo-alt-fill'></i> Entidad Federativa: " + item.eF_Nombre + "</p>" +
                        "<ul>" +
                        "<li><strong>Municipio:</strong> " + item.municipio_Nombre + "</li>" +
                        "<li><strong>¿Documentos Completos?:</strong> " + (item.documentos_completos == "1" ? 'Sí' : 'No') + "</li>" +
                        "<li><strong>¿Tiene Análisis de Riesgo?:</strong> " + (item.analisis_riesgo == "1" ? 'Sí' : 'No') + "</li>" +
                        "</ul>" +
                         botonEvaluar +
                        "<button class='btn btn-cre-amarillo' onclick='redireccionarADetalle(" + item.id + ")'>Ver Expendios Cercanos a Solicitud y Parque Vehicular</button>  <hr />" +
                        "<a class='street-view-link btn btn-cre-verde' href='#'>Ver vista de calle</a> <hr />" +
                        "<a class='btn btn-cre-rojo' target='_blank' href='https://titan.cre.gob.mx/Consulta/Turno/" + item.turno + "'>Ver Expediente en Kmis</a>" +
                        "</div>"
                    );


                    marker.on('popupopen', function (e) {
                        var popup = e.popup;
                        var streetViewLink = popup.getElement().querySelector('.street-view-link');
                        streetViewLink.addEventListener('click', function () {
                            var lat = e.target.getLatLng().lat.toPrecision(8);
                            var lon = e.target.getLatLng().lng.toPrecision(8);
                            var streetViewURL = 'http://maps.google.com/maps?q=&layer=c&cbll=' + lat + ',' + lon + '&cbp=11,0,0,0,0';
                            window.open(streetViewURL, '_blank');
                        });
                    });

                    markers.addLayer(marker);
                    var circle = L.circle([item.x_Geo, item.y_Geo], {
                        color: '#1e3143', // Color del círculo
                        fillColor: '#1e3143', // Color de relleno del círculo
                        fillOpacity: 0.2, // Opacidad del relleno del círculo
                        radius: 3000       // Radio en metros
                    }).addTo(mapmun);

                });

                mapmun.addLayer(markers);

            },
            error: function (error) {
                // Maneja el error si ocurre.
            }


        });
    }
    function CargaSyEmun() {
        limpiarMarcadoresmun();  // Limpia los marcadores existentes

        CargaExpendiosmun_1();  // Carga los permisos de expendio

        CargaSolicitudesmun_1();  // Carga las solicitudes a revisar
        Ductospetmun();
    }  
    function ObtieneI1M() {
        limpiarMarcadoresmun();
        // Tabla de Resultados
        $.ajax({
            url: '/Indicadores/Colores',
            type: 'GET',
            // data: JSON.stringify(datos_mun),
            contentType: 'application/json',
            success: function (response) {
                console.log("Estos son los Colres ICM:", response); // ver la respuesta en consola
                //Cargando los datos al mapa de Municipios
                limpiarMarcadoresmun();
                CargaExpendiosmun_1();  // Carga los permisos de expendio
                CargaSolicitudesmun_1();  // Carga las solicitudes a revisar

                function getColorEF(d) {
                    return d == 1 ? '#97d96d' :
                        d == 0 ? '#f2cf44' :
                            d == -1 ? '#e63950' :
                                d == 2 ? '#fafafa' :
                                    '#aad3df';
                }

                function style(feature) {
                    return {
                        fillColor: getColorEF(I1_M),
                        weight: 1,
                        opacity: 1,
                        color: 'white',
                        dashArray: '3',
                        fillOpacity: 0.01
                    };
                }




                municipiosLayer = L.geoJSON(municipios_mapa, {
                    style: function (feature) {
                        var cvegeo = feature.properties.CVEGEO;
                        var indicadorMunicipio = response.find(function (indicador) {
                            return indicador.cveGeo === cvegeo;
                        });

                        var I1_M = indicadorMunicipio ? indicadorMunicipio.i1_M : 0;

                        return {
                            fillColor: getColorEF(I1_M),
                            weight: 1,
                            opacity: 1,
                            color: 'white',
                            dashArray: '3',
                            fillOpacity: 0.7
                        };
                    },
                    onEachFeature: function (feature, layer) {
                        layer.bindTooltip(feature.properties.NOM_MUN, {
                            permanent: false,
                            direction: 'auto',
                            opacity: 0.7,
                            className: 'custom-tooltip'
                        });
                        layer.on({
                            mouseover: function (e) {
                                var layer = e.target;
                                layer.setStyle({
                                    weight: 2,
                                    color: '#666',
                                    dashArray: '',
                                    fillOpacity: 0.9
                                });
                                if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                                    layer.bringToFront();
                                }
                            },
                            mouseout: function (e) {
                                municipiosLayer.resetStyle(e.target);
                            }
                        });
                    }
                }).addTo(mapmun);
                 Ductospetmun();
                // Resto del código relacionado con el mapa Leaflet
            },
            error: function (error) {
                console.log("ESalio Mal Colores", response); // ver la respuesta en consola
            }
        });
    }
    function ObtieneI2M() {
        limpiarMarcadoresmun();
        // Tabla de Resultados
        $.ajax({
            url: '/Indicadores/Colores',
            type: 'GET',
            // data: JSON.stringify(datos_mun),
            contentType: 'application/json',
            success: function (response) {
          
                //Cargando los datos al mapa de Municipios
                limpiarMarcadoresmun();
                CargaExpendiosmun_1();  // Carga los permisos de expendio
                CargaSolicitudesmun_1();  // Carga las solicitudes a revisar

                function getColorEF(d) {
                    return d == 1 ? '#97d96d' :
                        d == 0 ? '#f2cf44' :
                            d == -1 ? '#e63950' :
                                d == 2 ? '#fafafa' :
                                    '#aad3df';
                }

                function style(feature) {
                    return {
                        fillColor: getColorEF(I2_M),
                        weight: 1,
                        opacity: 1,
                        color: 'white',
                        dashArray: '3',
                        fillOpacity: 0.01
                    };
                }




                municipiosLayer = L.geoJSON(municipios_mapa, {
                    style: function (feature) {
                        var cvegeo = feature.properties.CVEGEO;
                        var indicadorMunicipio = response.find(function (indicador) {
                            return indicador.cveGeo === cvegeo;
                        });

                        var I2_M = indicadorMunicipio ? indicadorMunicipio.i2_M : 0;

                        return {
                            fillColor: getColorEF(I2_M),
                            weight: 1,
                            opacity: 1,
                            color: 'white',
                            dashArray: '3',
                            fillOpacity: 0.7
                        };
                    },
                    onEachFeature: function (feature, layer) {
                        layer.bindTooltip(feature.properties.NOM_MUN, {
                            permanent: false,
                            direction: 'auto',
                            opacity: 0.7,
                            className: 'custom-tooltip'
                        });
                        layer.on({
                            mouseover: function (e) {
                                var layer = e.target;
                                layer.setStyle({
                                    weight: 2,
                                    color: '#666',
                                    dashArray: '',
                                    fillOpacity: 0.9
                                });
                                if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                                    layer.bringToFront();
                                }
                            },
                            mouseout: function (e) {
                                municipiosLayer.resetStyle(e.target);
                            }
                        });
                    }
                }).addTo(mapmun);
                 Ductospetmun();
                // Resto del código relacionado con el mapa Leaflet
            },
            error: function (error) {
                console.log("ESalio Mal Colores", response); // ver la respuesta en consola
            }
        });
    }
    function ObtieneI3M() {
        limpiarMarcadoresmun();
        // Tabla de Resultados
        $.ajax({
            url: '/Indicadores/Colores',
            type: 'GET',
            // data: JSON.stringify(datos_mun),
            contentType: 'application/json',
            success: function (response) {
               
                //Cargando los datos al mapa de Municipios
                limpiarMarcadoresmun();
                CargaExpendiosmun_1();  // Carga los permisos de expendio
                CargaSolicitudesmun_1();  // Carga las solicitudes a revisar

                function getColorEF(d) {
                    return d == 1 ? '#97d96d' :
                        d == 0 ? '#f2cf44' :
                            d == -1 ? '#e63950' :
                                d == 2 ? '#fafafa' :
                                    '#aad3df';
                }

                function style(feature) {
                    return {
                        fillColor: getColorEF(I3_M),
                        weight: 1,
                        opacity: 1,
                        color: 'white',
                        dashArray: '3',
                        fillOpacity: 0.01
                    };
                }




                municipiosLayer = L.geoJSON(municipios_mapa, {
                    style: function (feature) {
                        var cvegeo = feature.properties.CVEGEO;
                        var indicadorMunicipio = response.find(function (indicador) {
                            return indicador.cveGeo === cvegeo;
                        });

                        var I3_M = indicadorMunicipio ? indicadorMunicipio.i3_M : 0;

                        return {
                            fillColor: getColorEF(I3_M),
                            weight: 1,
                            opacity: 1,
                            color: 'white',
                            dashArray: '3',
                            fillOpacity: 0.7
                        };
                    },
                    onEachFeature: function (feature, layer) {
                        layer.bindTooltip(feature.properties.NOM_MUN, {
                            permanent: false,
                            direction: 'auto',
                            opacity: 0.7,
                            className: 'custom-tooltip'
                        });
                        layer.on({
                            mouseover: function (e) {
                                var layer = e.target;
                                layer.setStyle({
                                    weight: 2,
                                    color: '#666',
                                    dashArray: '',
                                    fillOpacity: 0.9
                                });
                                if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                                    layer.bringToFront();
                                }
                            },
                            mouseout: function (e) {
                                municipiosLayer.resetStyle(e.target);
                            }
                        });
                    }
                }).addTo(mapmun);
                 Ductospetmun();
                // Resto del código relacionado con el mapa Leaflet
            },
            error: function (error) {
                console.log("ESalio Mal Colores", response); // ver la respuesta en consola
            }
        });
    }
    function ObtieneI4M() {
        limpiarMarcadoresmun();
        // Tabla de Resultados
        $.ajax({
            url: '/Indicadores/Colores',
            type: 'GET',
            // data: JSON.stringify(datos_mun),
            contentType: 'application/json',
            success: function (response) {
               
                //Cargando los datos al mapa de Municipios
                limpiarMarcadoresmun();
                CargaExpendiosmun_1();  // Carga los permisos de expendio
                CargaSolicitudesmun_1();  // Carga las solicitudes a revisar

                function getColorEF(d) {
                    return d == 1 ? '#97d96d' :
                        d == 0 ? '#f2cf44' :
                            d == -1 ? '#e63950' :
                                d == 2 ? '#fafafa' :
                                    '#aad3df';
                }

                function style(feature) {
                    return {
                        fillColor: getColorEF(I4_M),
                        weight: 1,
                        opacity: 1,
                        color: 'white',
                        dashArray: '3',
                        fillOpacity: 0.01
                    };
                }




                municipiosLayer = L.geoJSON(municipios_mapa, {
                    style: function (feature) {
                        var cvegeo = feature.properties.CVEGEO;
                        var indicadorMunicipio = response.find(function (indicador) {
                            return indicador.cveGeo === cvegeo;
                        });

                        var I4_M = indicadorMunicipio ? indicadorMunicipio.i4_M : 0;

                        return {
                            fillColor: getColorEF(I4_M),
                            weight: 1,
                            opacity: 1,
                            color: 'white',
                            dashArray: '3',
                            fillOpacity: 0.7
                        };
                    },
                    onEachFeature: function (feature, layer) {
                        layer.bindTooltip(feature.properties.NOM_MUN, {
                            permanent: false,
                            direction: 'auto',
                            opacity: 0.7,
                            className: 'custom-tooltip'
                        });
                        layer.on({
                            mouseover: function (e) {
                                var layer = e.target;
                                layer.setStyle({
                                    weight: 2,
                                    color: '#666',
                                    dashArray: '',
                                    fillOpacity: 0.9
                                });
                                if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                                    layer.bringToFront();
                                }
                            },
                            mouseout: function (e) {
                                municipiosLayer.resetStyle(e.target);
                            }
                        });
                    }
                }).addTo(mapmun);
                 Ductospetmun();
                // Resto del código relacionado con el mapa Leaflet
            },
            error: function (error) {
                console.log("ESalio Mal Colores", response); // ver la respuesta en consola
            }
        });
    }
    function ObtieneI5M() {
        limpiarMarcadoresmun();
        // Tabla de Resultados
        $.ajax({
            url: '/Indicadores/Colores',
            type: 'GET',
            // data: JSON.stringify(datos_mun),
            contentType: 'application/json',
            success: function (response) {
            
                //Cargando los datos al mapa de Municipios
                limpiarMarcadoresmun();
                CargaExpendiosmun_1();  // Carga los permisos de expendio
                CargaSolicitudesmun_1();  // Carga las solicitudes a revisar

                function getColorEF(d) {
                    return d == 1 ? '#97d96d' :
                        d == 0 ? '#f2cf44' :
                            d == -1 ? '#e63950' :
                                d == 2 ? '#fafafa' :
                                    '#aad3df';
                }

                function style(feature) {
                    return {
                        fillColor: getColorEF(I5_M),
                        weight: 1,
                        opacity: 1,
                        color: 'white',
                        dashArray: '3',
                        fillOpacity: 0.01
                    };
                }




                municipiosLayer = L.geoJSON(municipios_mapa, {
                    style: function (feature) {
                        var cvegeo = feature.properties.CVEGEO;
                        var indicadorMunicipio = response.find(function (indicador) {
                            return indicador.cveGeo === cvegeo;
                        });

                        var I5_M = indicadorMunicipio ? indicadorMunicipio.i5_M : 0;

                        return {
                            fillColor: getColorEF(I5_M),
                            weight: 1,
                            opacity: 1,
                            color: 'white',
                            dashArray: '3',
                            fillOpacity: 0.7
                        };
                    },
                    onEachFeature: function (feature, layer) {
                        layer.bindTooltip(feature.properties.NOM_MUN, {
                            permanent: false,
                            direction: 'auto',
                            opacity: 0.7,
                            className: 'custom-tooltip'
                        });
                        layer.on({
                            mouseover: function (e) {
                                var layer = e.target;
                                layer.setStyle({
                                    weight: 2,
                                    color: '#666',
                                    dashArray: '',
                                    fillOpacity: 0.9
                                });
                                if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                                    layer.bringToFront();
                                }
                            },
                            mouseout: function (e) {
                                municipiosLayer.resetStyle(e.target);
                            }
                        });
                    }
                }).addTo(mapmun);
                 Ductospetmun();
                // Resto del código relacionado con el mapa Leaflet
            },
            error: function (error) {
                console.log("ESalio Mal Colores", response); // ver la respuesta en consola
            }
        });
    }
    function ObtieneI6M() {
        limpiarMarcadoresmun();
        // Tabla de Resultados
        $.ajax({
            url: '/Indicadores/Colores',
            type: 'GET',
            // data: JSON.stringify(datos_mun),
            contentType: 'application/json',
            success: function (response) {
            
                //Cargando los datos al mapa de Municipios
                limpiarMarcadoresmun();
                CargaExpendiosmun_1();  // Carga los permisos de expendio
                CargaSolicitudesmun_1();  // Carga las solicitudes a revisar

                function getColorEF(d) {
                    return d == 1 ? '#97d96d' :
                        d == 0 ? '#f2cf44' :
                            d == -1 ? '#e63950' :
                                d == 2 ? '#fafafa' :
                                    '#aad3df';
                }

                function style(feature) {
                    return {
                        fillColor: getColorEF(I6_M),
                        weight: 1,
                        opacity: 1,
                        color: 'white',
                        dashArray: '3',
                        fillOpacity: 0.01
                    };
                }




                municipiosLayer = L.geoJSON(municipios_mapa, {
                    style: function (feature) {
                        var cvegeo = feature.properties.CVEGEO;
                        var indicadorMunicipio = response.find(function (indicador) {
                            return indicador.cveGeo === cvegeo;
                        });

                        var I6_M = indicadorMunicipio ? indicadorMunicipio.i6_M : 0;

                        return {
                            fillColor: getColorEF(I6_M),
                            weight: 1,
                            opacity: 1,
                            color: 'white',
                            dashArray: '3',
                            fillOpacity: 0.7
                        };
                    },
                    onEachFeature: function (feature, layer) {
                        layer.bindTooltip(feature.properties.NOM_MUN, {
                            permanent: false,
                            direction: 'auto',
                            opacity: 0.7,
                            className: 'custom-tooltip'
                        });
                        layer.on({
                            mouseover: function (e) {
                                var layer = e.target;
                                layer.setStyle({
                                    weight: 2,
                                    color: '#666',
                                    dashArray: '',
                                    fillOpacity: 0.9
                                });
                                if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                                    layer.bringToFront();
                                }
                            },
                            mouseout: function (e) {
                                municipiosLayer.resetStyle(e.target);
                            }
                        });
                    }
                }).addTo(mapmun);
                 Ductospetmun();
                // Resto del código relacionado con el mapa Leaflet
            },
            error: function (error) {
                console.log("ESalio Mal Colores", response); // ver la respuesta en consola
            }
        });

    
    }
    function ObtieneI8M() {
        limpiarMarcadoresmun();
        // Tabla de Resultados
        $.ajax({
            url: '/Indicadores/Colores',
            type: 'GET',
            // data: JSON.stringify(datos_mun),
            contentType: 'application/json',
            success: function (response) {
              
                //Cargando los datos al mapa de Municipios
                limpiarMarcadoresmun();
                CargaExpendiosmun_1();  // Carga los permisos de expendio
                CargaSolicitudesmun_1();  // Carga las solicitudes a revisar

                function getColorEF(d) {
                    return d == 1 ? '#97d96d' :
                        d == 0 ? '#f2cf44' :
                            d == -1 ? '#e63950' :
                                d == 2 ? '#fafafa' :
                                    '#aad3df';
                }

                function style(feature) {
                    return {
                        fillColor: getColorEF(I8_M),
                        weight: 1,
                        opacity: 1,
                        color: 'white',
                        dashArray: '3',
                        fillOpacity: 0.01
                    };
                }




                municipiosLayer = L.geoJSON(municipios_mapa, {
                    style: function (feature) {
                        var cvegeo = feature.properties.CVEGEO;
                        var indicadorMunicipio = response.find(function (indicador) {
                            return indicador.cveGeo === cvegeo;
                        });

                        var I8_M = indicadorMunicipio ? indicadorMunicipio.i8_M : 0;

                        return {
                            fillColor: getColorEF(I8_M),
                            weight: 1,
                            opacity: 1,
                            color: 'white',
                            dashArray: '3',
                            fillOpacity: 0.7
                        };
                    },
                    onEachFeature: function (feature, layer) {
                        layer.bindTooltip(feature.properties.NOM_MUN, {
                            permanent: false,
                            direction: 'auto',
                            opacity: 0.7,
                            className: 'custom-tooltip'
                        });
                        layer.on({
                            mouseover: function (e) {
                                var layer = e.target;
                                layer.setStyle({
                                    weight: 2,
                                    color: '#666',
                                    dashArray: '',
                                    fillOpacity: 0.9
                                });
                                if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                                    layer.bringToFront();
                                }
                            },
                            mouseout: function (e) {
                                municipiosLayer.resetStyle(e.target);
                            }
                        });
                    }
                }).addTo(mapmun);
                Ductospetmun();
                // Resto del código relacionado con el mapa Leaflet
            },
            error: function (error) {
                console.log("ESalio Mal Colores", response); // ver la respuesta en consola
            }
        });

    
    }

    function ColoresIMun() {
        limpiarMarcadoresmun();
        // Tabla de Resultados
        $.ajax({
            url: '/Indicadores/Colores',
            type: 'GET',
            // data: JSON.stringify(datos_mun),
            contentType: 'application/json',
            success: function (response) {
                console.log("Estos son los Colres ICM:", response); // ver la respuesta en consola
                //Cargando los datos al mapa de Municipios
                 limpiarMarcadoresmun();
                 CargaExpendiosmun_1();  // Carga los permisos de expendio
                 CargaSolicitudesmun_1();  // Carga las solicitudes a revisar
       
                 function getColorEF(d) {
                                            return d == 1 ? '#97d96d' :
                                                   d == 0 ? '#f2cf44' :
                                                   d == -1 ? '#e63950' :
                                                   d == 2 ? '#fafafa' :
                                                            '#aad3df';
                                        }

                function style(feature) {
                    return {
                        fillColor: getColorEF(I8_M),
                        weight: 1,
                        opacity: 1,
                        color: 'white',
                        dashArray: '3',
                        fillOpacity: 0.01
                    };
                }




        municipiosLayer = L.geoJSON(municipios_mapa, {
            style: function (feature) {
                var cvegeo = feature.properties.CVEGEO;
                var indicadorMunicipio = response.find(function (indicador) {
                            return indicador.cveGeo === cvegeo;
                });

                var I8_M = indicadorMunicipio ? indicadorMunicipio.i8_M : 0;

                return {
                    fillColor: getColorEF(I8_M),
                    weight: 1,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7
                };
            },
            onEachFeature: function (feature, layer) {
                layer.bindTooltip(feature.properties.NOM_MUN, {
                    permanent: false,
                    direction: 'auto',
                    opacity: 0.7,
                    className: 'custom-tooltip'
                });
                layer.on({
                    mouseover: function (e) {
                        var layer = e.target;
                        layer.setStyle({
                            weight: 2,
                            color: '#666',
                            dashArray: '',
                            fillOpacity: 0.9
                        });
                        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                            layer.bringToFront();
                        }
                    },
                    mouseout: function (e) {
                        municipiosLayer.resetStyle(e.target);
                    }
                });
            }
        }).addTo(mapmun);

        // Resto del código relacionado con el mapa Leaflet
            },
            error: function (error) {
                console.log("ESalio Mal Colores", response); // ver la respuesta en consola
            }
        });

    }

    //Busqueda Mun

    function buscarGeneralmun() {
        var terminoBuscado = document.getElementById('busquedaGeneralInputmun').value.trim();

        if (!terminoBuscado) {
            alert("Por favor, introduce un término de búsqueda.");
            return;  // Termina la ejecución de la función si el campo está vacío
        }



        // Intenta buscar por número de permiso primero
        var encontrado = false;
        for (var i = 0; i < datosExpendios.length; i++) {
            var expendio = datosExpendios[i];
            if (expendio.numeroPermiso === terminoBuscado) {
                var lat = expendio.latitudGeo;
                var lon = expendio.longitudGeo;
                mapmun.setView([lat, lon], 15);
                encontrado = true;
                break;
            }
        }




        // Si no se encontró por busca por Solicitud ID o Turno k-mis
        if (!encontrado) {
            for (var i = 0; i < datosSolExpendios.length; i++) {
                var expendio = datosSolExpendios[i];
                if (expendio.id === terminoBuscado || expendio.turno === terminoBuscado || expendio.expediente === terminoBuscado) {
                    var lat = expendio.latitud_GEO;
                    var lon = expendio.longitud_GEO;
                    mapmun.setView([lat, lon], 15); // 15 es el nivel de zoom, puedes ajustarlo según prefieras
                    encontrado = true;
                    break;
                }
            }
        }


        // Si no se encontró por número de permiso, busca por entidad federativa
        if (!encontrado) {
            estadosLayer.eachLayer(function (layer) {
                if (layer.feature.properties.NOMGEO === terminoBuscado) {
                    mapmun.fitBounds(layer.getBounds());

                    // Si ya había una entidad federativa buscada anteriormente, restablecemos su estilo
                    if (lastSearchedEstadoLayer) {
                        estadosLayer.resetStyle(lastSearchedEstadoLayer);
                    }

                    // Resalta la entidad federativa encontrada
                    layer.setStyle({
                        color: '#FF0000',
                        fillColor: '#FF0000',
                        fillOpacity: 0.5
                    });

                    lastSearchedEstadoLayer = layer;

                    // Reiniciar el estilo de la entidad después de 5 segundos
                    setTimeout(function () {
                        estadosLayer.resetStyle(lastSearchedEstadoLayer);
                        lastSearchedEstadoLayer = null;
                    }, 5000);

                    encontrado = true;
                }
            });
        }

        // Si aún no se encontró, busca por municipio en la fuente de datos completa
        if (!encontrado) {
            // Divide el término de búsqueda en municipio y estado
            var terminos = terminoBuscado.split(',');
            var buscadoMunicipio = terminos[0].trim();
            var buscadoEstado = terminos.length > 1 ? terminos[1].trim() : '';


            for (var i = 0; i < municipios_mapa.features.length; i++) {
                var municipio = municipios_mapa.features[i];
                var nombreMunicipio = municipio.properties.NOM_MUN;
                var nombreEstado = municipio.properties.NOMGEO;

                // Comprueba si el nombre del municipio y del estado coinciden con el término de búsqueda
                if (nombreMunicipio === buscadoMunicipio && (buscadoEstado === '' || nombreEstado === buscadoEstado)) {
                    var bounds = L.geoJSON(municipio).getBounds();
                    mapmun.fitBounds(bounds);

                    // Si ya había un municipio buscado anteriormente, lo elimina
                    if (lastSearchedMunicipioLayer) {
                        mapmun.removeLayer(lastSearchedMunicipioLayer);
                    }

                    // Agrega el municipio encontrado al mapa y lo resalta
                    lastSearchedMunicipioLayer = L.geoJSON(municipio, {
                        style: {
                            color: '#FF0000',
                            fillColor: '#FF0000',
                            fillOpacity: 0.5
                        }
                    }).addTo(mapmun);

                    // Reiniciar el estilo y eliminar el municipio después de 5 segundos
                    setTimeout(function () {
                        mapmun.removeLayer(lastSearchedMunicipioLayer);
                        lastSearchedMunicipioLayer = null;
                    }, 5000);

                    encontrado = true;
                    break;
                }
            }
        }


        if (!encontrado) {
            alert("Término no encontrado.");
        }




    }

    // Función para inicializar el autocompletar
    function autocomplete(inp, arr) {
        var currentFocus;

        inp.addEventListener("input", function (e) {
            var a, b, i, val = this.value;
            closeAllLists();
            if (!val) { return false; }
            currentFocus = -1;

            a = document.getElementById("autocomplete-list-mun");
            a.innerHTML = "";

            for (i = 0; i < arr.length; i++) {
                if (arr[i].substr(0, val.length).toUpperCase() === val.toUpperCase()) {
                    b = document.createElement("DIV");
                    b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                    b.innerHTML += arr[i].substr(val.length);
                    b.addEventListener("click", function (e) {
                        inp.value = this.innerText;
                        closeAllLists();
                        setTimeout(buscarGeneralmun, 100); // Llama a tu función de búsqueda después de un breve retraso
                    });
                    a.appendChild(b);
                }
            }
        });

        function closeAllLists(elmnt) {
            var x = document.getElementById("autocomplete-list-mun");
            if (elmnt != x && elmnt != inp) {
                x.innerHTML = "";
            }
        }

        document.addEventListener("click", function (e) {
            closeAllLists(e.target);
        });
    }

    // Usamos un objeto Set para filtrar los duplicados, ya que un Set solo permite valores únicos
    var uniqueTerms = [...new Set(availableTerms)];
    console.log("Unicos:", uniqueTerms);

    // Debes llamar a esta función después de que los datos de expendios y solicitudes estén disponibles
    // Por ejemplo, después de las llamadas AJAX en ObtienePermisos y CargaSolicitudesInicio
    // Ahora puedes usar $.when para esperar a que ambas llamadas AJAX se completen
    $.when(obtenerCamposVisibles()).done(function () {
        // Luego puedes inicializar el autocompletado aquí, ya que now todos los datos están listos
        autocomplete(document.getElementById("busquedaGeneralInputmun"), uniqueTerms);
    });


</script>


