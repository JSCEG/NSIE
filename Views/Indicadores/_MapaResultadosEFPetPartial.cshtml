@model Mep


<section id="despliega_mapa shadow p-3 mb-5 bg-body-tertiary rounded">

    <div>
        <div class="row">
            <div class="col-md-4 p-3">
                <select id="estadomun" class="form-select" style="height: 45px;">
                    <option selected>
                        Selecciona una Entidad Federativa:
                    </option>
                    <option value="ags">Aguascalientes</option>
                    <option value="bc">Baja California</option>
                    <option value="bcs">Baja California Sur</option>
                    <option value="camp">Campeche</option>
                    <option value="coah">Coahuila</option>
                    <option value="col">Colima</option>
                    <option value="chis">Chiapas</option>
                    <option value="chih">Chihuahua</option>
                    <option value="cdmx">Ciudad de México</option>
                    <option value="dgo">Durango</option>
                    <option value="gto">Guanajuato</option>
                    <option value="gro">Guerrero</option>
                    <option value="hgo">Hidalgo</option>
                    <option value="jal">Jalisco</option>
                    <option value="mex">México</option>
                    <option value="mich">Michoacán</option>
                    <option value="mor">Morelos</option>
                    <option value="nay">Nayarit</option>
                    <option value="nl">Nuevo León</option>
                    <option value="oax">Oaxaca</option>
                    <option value="pue">Puebla</option>
                    <option value="qro">Querétaro</option>
                    <option value="qroo">Quintana Roo</option>
                    <option value="slp">San Luis Potosí</option>
                    <option value="sin">Sinaloa</option>
                    <option value="son">Sonora</option>
                    <option value="tab">Tabasco</option>
                    <option value="tamps">Tamaulipas</option>
                    <option value="tlax">Tlaxcala</option>
                    <option value="ver">Veracruz</option>
                    <option value="yuc">Yucatán</option>
                    <option value="zac">Zacatecas</option>
                </select>
            </div>

            <div class="col-md-8 p-3">
                @*Prueba*@
                <div class="dropdown" style="position: relative; z-index: 1000;">
                    <button class="btn btn-cre-rojo dropdown-toggle" id="dropdownMenuLinkMun" type="button"
                        data-bs-toggle="dropdown" aria-expanded="false">
                        Selecciona Capa/Opción:
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" onclick="limpiarMarcadoresmun()">Limpiar Mapa</a></li>
                        <li>
                            <hr>
                        </li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="CargaSolicitudesmun()">Ver
                                Solicitudes a Revisar</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="CargaExpendiosmun()">Ver
                                Permisos de Expendios a Nivel Nacional</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="CargaSyEmun()">Ver Solicitudes y
                                Expendios</a></li>
                        <li>
                            <hr>
                        </li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="ObtieneI1M()">Ver Indicador
                                Municipal 1 - Atención al Usuario Final</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="ObtieneI2M()">Ver Indicador
                                Municipal 2 - Densidad Territoprial del Expendios</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="ObtieneI3M()">Ver Indicador
                                Municipal 3 - Densidad Territorial de Vehículos </a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="ObtieneI4M()">Ver Indicador
                                Municipal 4 - Marginación </a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="ObtieneI5M()">Ver Indicador
                                Municipal 5 - Cuota de Mercados Petrololíferos </a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="ObtieneI6M()">Ver Indicador
                                Municipal 6 - Couta de Mercado Gasolinas</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" onclick="ObtieneI8M()">Ver Indicador
                                Municipal 7 - Impulso al Desarrollo del Sureste </a></li>

                    </ul>
                </div>

            </div>

        </div>
    </div>
    <br />

    <div class="d-flex h-100">
        <div class="row m-0 w-100">
            <div id="sidebarmun" class="d-flex flex-column justify-content-between col-5 p-1">
            </div>
            <div id="mapmun" class="col" style="position: relative; z-index: 500; "></div>
        </div>
    </div>
    <div class="leyenda">
        <p>Mayor Concentración de Solicitudes</p>
        <p>Concentración Promedio de Solicitudes</p>
        <p>Menor concentración de Solicitudes</p>
        <p>Radio de 300 metros</p>
    </div>

    <br />
</section>

@*Menú de Estados*@
<script>
    // Detecta el cambio de selección en el menú de estados
    document.getElementById("estadomun").addEventListener("change", function () {
        // Obtiene el valor seleccionado del menú de estados
        var estado = document.getElementById("estadomun").value;

        // Muestra el estado seleccionado en el mapmuna
        switch (estado) {
            case "ags":
                mapmun.setView([22.025278, -102.372778], 9);
                break;
            case "bc":
                mapmun.setView([30.391389, -115.291389], 7);
                break;
            case "bcs":
                mapmun.setView([26.044444, -112.399722], 7);
                break;
            case "camp":
                mapmun.setView([18.938333, -90.764722], 7);
                break;
            case "coah":
                mapmun.setView([27.158056, -101.719444], 7);
                break;
            case "col":
                mapmun.setView([19.101944, -103.014722], 9);
                break;
            case "chis":
                mapmun.setView([16.753056, -92.6375], 7);
                break;
            case "chih":
                mapmun.setView([28.673611, -106.102222], 7);
                break;
            case "cdmx":
                mapmun.setView([19.432778, -99.133333], 10);
                break;
            case "dgo":
                mapmun.setView([24.865278, -104.902222], 7);
                break;
            case "gto":
                mapmun.setView([20.875, -101.478611], 8);
                break;
            case "gro":
                mapmun.setView([17.814722, -100.353056], 8);
                break;
            case "hgo":
                mapmun.setView([20.5325, -98.870556], 8);
                break;
            case "jal":
                mapmun.setView([20.673611, -103.343333], 8);
                break;
            case "mex":
                mapmun.setView([19.483611, -99.689722], 8);
                break;
            case "mich":
                mapmun.setView([19.699722, -101.191389], 8);
                break;
            case "mor":
                mapmun.setView([18.858611, -99.223611], 9);
                break;
            case "nay":
                mapmun.setView([21.799444, -105.220833], 8);
                break;
            case "nl":
                mapmun.setView([25.649167, -100.443611], 9);
                break;
            case "oax":
                mapmun.setView([16.895833, -96.806667], 8);
                break;
            case "pue":
                mapmun.setView([19.051389, -98.193889], 8);
                break;
            case "qro":
                mapmun.setView([20.854722, -99.847222], 9);
                break;
            case "qroo":
                mapmun.setView([19.642778, -87.072222], 8);
                break;
            case "slp":
                mapmun.setView([22.156944, -100.985556], 8);
                break;
            case "sin":
                mapmun.setView([24.288611, -107.366944], 8);
                break;
            case "son":
                mapmun.setView([29.089444, -110.961667], 7);
                break;
            case "tab":
                mapmun.setView([17.980000, -92.930000], 8);
                break;
            case "tamps":

                mapmun.setView([24.014167, -98.844444], 7);
                break;
            case "tlax":
                mapmun.setView([19.312222, -98.239722], 10);
                break;
            case "ver":
                mapmun.setView([19.546389, -96.914167], 8);
                break;
            case "yuc":
                mapmun.setView([20.891944, -89.528611], 8);
                break;
            case "zac":
                mapmun.setView([22.770833, -102.583611], 8);
                break;
            default:

                mapmun.setView([23.634501, -102.552784], 5);
                break;
        }
    });
</script>
@*Configuración del Mapa  de Municipios*@
<script>
    //1.-Invoca el Mapa

    var mapmun = L.map('mapmun', {
        zoomControl: true, maxZoom: 28, minZoom: 5
    }).fitBounds([[16.515297504744552, -116.01198143543994], [31.280203931152798, -90.79533052556764]]);
    var hash = new L.Hash(mapmun);
    mapmun.attributionControl.setPrefix('<a href="https://github.com/tomchadwin/qgis2web" target="_blank">qgis2web</a> &middot; <a href="https://leafletjs.com" title="A JS library for interactive maps">Leaflet</a> &middot; <a href="https://qgis.org">QGIS</a>');
    var autolinker = new Autolinker({ truncate: { length: 30, location: 'smart' } });
    var bounds_group = new L.featureGroup([]);
    function setBounds() {
    }


    //2.-Crea los Iconos
    var iconoBase = L.Icon.extend({
        options: {
            iconSize: [24, 24],
            iconAnchor: [12, 16],
            popupAnchor: [-3, -76]
        }
    });

    //3.-Asigna Iconos
    var iconoOptimas = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Aprobado.png' }),
        iconoViable = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/viable.png' }),
        iconoFactible = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Factible.png' });
    iconoNoViable = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/NoAprobado.png' });



    //4.-Vista Satelite
    mapmun.createPane('pane_GoogleSatellite_0');
    mapmun.getPane('pane_GoogleSatellite_0').style.zIndex = 0;
    var layer_GoogleSatellite_0 = L.tileLayer('https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
        pane: 'pane_GoogleSatellite_0',
        opacity: 1.0,
        attribution: '<a href="https://www.google.at/permissions/geoguidelines/attr-guide.html">Map data �2015 Google</a>',
        minZoom: 1,
        maxZoom: 28,
        minNativeZoom: 0,
        maxNativeZoom: 20
    });
    layer_GoogleSatellite_0;
    mapmun.addLayer(layer_GoogleSatellite_0);


    //5.-Configura los Base Layers 
    var baseLayers = {
        "OpenStreetMap": L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }),
        //"Blanco y Negro": L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}{r}.png', {
        //    attribution: 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, ' +
        //        '<a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; ' +
        //        'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors',
        //    subdomains: 'abcd',
        //    minZoom: 0,
        //    maxZoom: 20
        //}),
        //"Escala de Grises": L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
        //    attribution: 'Map tiles by <a href="https://carto.com/attribution">Carto</a>, ' +
        //        'under <a href="https://creativecommons.org/licenses/by/3.0/">CC BY 3.0</a>. ' +
        //        'Data by <a href="http://openstreetmap.org">OpenStreetMap</a>, ' +
        //        'under <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC BY SA</a>',
        //    subdomains: 'abcd',
        //    maxZoom: 19
        //}),

        //"Hipsométrico": L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {
        //    maxZoom: 17,
        //    attribution: 'Map data: &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)'
        //}),

        //"Oscuro": L.tileLayer('https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png', {
        //    maxZoom: 20,
        //    attribution: '&copy; <a href="https://stadiamaps.com/">Stadia Maps</a>, &copy; <a href="https://openmaptiles.org/">OpenMapTiles</a> &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors'
        //}),
        "Vista Satélite": layer_GoogleSatellite_0


    };

    // Activa una capa de mosaicos como vista inicial
    baseLayers["OpenStreetMap"].addTo(mapmun);

    // Control de capas para seleccionar la vista del mapa
    L.control.layers(baseLayers).addTo(mapmun);
    L.control.scale().addTo(mapmun); // Agregar la escala gr�fica al mapa

    //6.-Botón de Zoom
    var resetZoomControl = L.control({ position: 'topleft' });

    resetZoomControl.onAdd = function (mapmun) {
        var div = L.DomUtil.create('div', 'reset-zoom-control');
        div.innerHTML = '<button class="btn btn-cre-rojo-home" onclick="resetZoom()"><i class="bi bi-house-door"></i></button>';
        return div;
    };

    resetZoomControl.addTo(mapmun);

    function resetZoom() {
        mapmun.setView([24.572503, -101.768257], 5);
    }


    //7.-Regla de Distancias
    var drawControl = new L.Control.Draw({
        draw: {
            polygon: false,
            polyline: true,
            rectangle: false,
            circle: false,
            marker: false,
            circlemarker: false
        },
        edit: false
    });

    mapmun.addControl(drawControl);

    //8.-Cuando se dibuja una linea, calcula la distancia
    mapmun.on('draw:created', function (e) {
        var type = e.layerType,
            layer = e.layer;

        if (type === 'polyline') {
            var latlngs = layer.getLatLngs();
            var distance = 0;
            for (var i = 1; i < latlngs.length; i++) {
                distance += latlngs[i - 1].distanceTo(latlngs[i]);
            }
            // Convertir la distancia a km y redondear a 2 decimales
            distance = Math.round((distance / 1000) * 100) / 100;
            // Crear un popup con la distancia
            layer.bindPopup('Distancia: ' + distance + ' km').openPopup();
            // A�adir la l�nea al mapa
            layer.addTo(mapmun);
        }
    });


</script>
@*Carga de Resultados y Shapes de Indicvadores*@
<script>
    var municipiosLayer; // Declarar la variable municipiosLayer en un ámbito global
    var coloresImJson = @Html.Raw(ViewBag.JsonObjects["ColoresImun"]);
    function limpiarMarcadoresmun() {
        // Limpiar todas las capas de marcadores y círculos
        mapmun.eachLayer(function (layer) {
            if (layer instanceof L.Marker || layer instanceof L.MarkerClusterGroup || layer instanceof L.Circle) {
                mapmun.removeLayer(layer);
            }
        });

        // Eliminar la capa de municipios
        if (municipiosLayer) {
            mapmun.removeLayer(municipiosLayer);
            municipiosLayer = null; // Establecer la variable municipiosLayer como nula
        }
    }
    //Función que carga los permisos de Expendio
    function CargaExpendiosmun() {
        // Limpiar marcadores existentes
        limpiarMarcadoresmun();


        var coordenadas = @Html.Raw(ViewBag.JsonObjects["ExpendiosJson"]);
        console.log("Revisa aqui", coordenadas);
        var markers = L.markerClusterGroup();

        // Agrega los marcadores para las coordenadas del mapa actual
        for (var j = 0; j < coordenadas.length; j++) {
            var coordenada = coordenadas[j];
            var marker = L.marker([coordenada.Latitud_GEO, coordenada.Longitud_GEO], { icon: iconoExpendio });

            marker.bindPopup("<h3>" + coordenada.NumeroPermiso + "</h3><p>" + coordenada.Razón_social + "</p> <hr/><ul><li>Fecha de Otorgamiento del Permiso:" + coordenada.FechaOtorgamiento + "</li><li>Número de Permiso:" + coordenada.NumeroPermiso + "</li></ul><a target='_blank' href='/Indicadores/DetalleExpendio?NumeroPermiso=" + coordenada.NumeroPermiso + "'>Ver detalle</a>");

            markers.addLayer(marker);
        }

        mapmun.addLayer(markers);
    }
    function CargaSolicitudesmun() {
        // Limpiar marcadores existentes
        limpiarMarcadoresmun();
        var indicadores_seleccionados_nal = [];
        $('#misCheckboxes input:checked').each(function () {
            indicadores_seleccionados_nal.push($(this).val());
        });

        var indicadores_seleccionados_mun = [];
        $('#misCheckboxes_mun input:checked').each(function () {
            indicadores_seleccionados_mun.push($(this).val());
        });

        var datos_mun = {
            Umbral_Seleccionado_Nal: $('#umbral').val(),
            Indicadores_Seleccionados_Nal: indicadores_seleccionados_nal,
            Umbral_Seleccionado_Mun: $('#umbral_mun').val(),
            Indicadores_Seleccionados_Mun: indicadores_seleccionados_mun

            //dEBEN LLAMARSE IGUAL EN LA CLASE CLASE CALIFICACION FINAL
        };
        //    alert(JSON.stringify(datos_mun));
        console.log("Datos Municipio Nacional:", datos_mun);

        // Tabla de Resultados
        $.ajax({
            url: '/Indicadores/calificacion_MUN',
            type: 'POST',
            data: JSON.stringify(datos_mun),

            contentType: 'application/json',
            success: function (response) {
                console.log("Salida store MUN:", response); // ver la respuesta en consola


                //Mapa de Resultados/////////////////////////////////////////////////////////////////////
                // Crea un grupo de marcadores
                var markers = L.markerClusterGroup();
                // Crea los iconos
                var iconoBase = L.Icon.extend({
                    options: {
                        iconSize: [24, 24],
                        iconAnchor: [12, 16],
                        popupAnchor: [-3, -76]
                    }
                });

                var iconoOptimo = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Aprobado.png' }),
                    iconoViable = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/viable.png' }),
                    iconoFactible = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Factible.png' });
                iconoNoViable = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/NoAprobado.png' });

                // Añade marcadores al grupo para cada conjunto de coordenadas en la respuesta
                response.forEach(function (item) {
                    // Asigna el icono de acuerdo a la categoría
                    var iconoActual;
                    var iconoActualUrl;
                    if (item.categoria == "Óptimo") {
                        iconoActual = iconoOptimo;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/Aprobado.png';
                    } else if (item.categoria == "Viable") {
                        iconoActual = iconoViable;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/viable.png';
                    } else if (item.categoria == "Factible") {
                        iconoActual = iconoFactible;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/Factible.png';
                    } else if (item.categoria == "No Viable") {
                        iconoActual = iconoNoViable;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/NoAprobado.png';
                    }

                    else {
                        iconoActual = iconoNoViable;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/NoAprobado.png';
                    }

                    var marker = L.marker([item.x_Geo, item.y_Geo], { icon: iconoActual });


                    marker.bindPopup(
                        "<style>" +
                        ".popup-content {" +
                        "width: 300px;" +
                        "height: 150px;" +
                        "overflow-y: auto;" +
                        "padding: 10px;" +
                        "}" +
                        "h2, h3, h4, p, li {" +
                        "margin: 0 0 10px 0;" +
                        "}" +
                        "ul {" +
                        "padding-left: 20px;" +
                        "}" +
                        "img {" +
                        "vertical-align: middle;" +
                        "margin-right: 10px;" +
                        "}" +
                        "</style>" +
                        "<div class='popup-content'>" +
                        "<h2 class='subtitulo'><img src='" + iconoActualUrl + "' style='height: 24px; width: 24px;'/><strong>" + item.razon_social + "</strong></h2>" +
                        "<br>" +
                        "<h6><strong>Categoría:</strong> " + item.categoria + "</h6>" +
                        "<h6><i class='bi bi-qr-code'></i> Turno de Kmis: " + item.turno + "</h6>" +
                        "<h6><i class='bi bi-fingerprint'></i> ID Solicitud: " + item.id + "</h6>" +
                        "<p><i class='bi bi-geo-alt-fill'></i> Entidad Federativa: " + item.eF_Nombre + "</p>" +
                        "<ul>" +
                        "<li><strong>Municipio:</strong> " + item.municipio_Nombre + "</li>" +
                        "<li><strong>¿Documentos Completos?:</strong> " + (item.documentos_completos == "1" ? 'Sí' : 'No') + "</li>" +
                        "<li><strong>¿Tiene Análisis de Riesgo?:</strong> " + (item.analisis_riesgo == "1" ? 'Sí' : 'No') + "</li>" +
                        "</ul>" +
                        "<button class='btn btn-cre-amarillo' onclick='redireccionarADetalle(" + item.id + ")'>Ver Expendios Cercanos a Solicitud</button>  <hr />" +
                        "<a class='street-view-link btn btn-cre-verde' href='#'>Ver vista de calle</a> <hr />" +
                        "<a class='btn btn-cre-rojo' target='_blank' href='https://titan.cre.gob.mx/Consulta/Turno/" + item.turno + "'>Ver Expediente en Kmis</a>" +
                        "</div>"
                    );


                    marker.on('popupopen', function (e) {
                        var popup = e.popup;
                        var streetViewLink = popup.getElement().querySelector('.street-view-link');
                        streetViewLink.addEventListener('click', function () {
                            var lat = e.target.getLatLng().lat.toPrecision(8);
                            var lon = e.target.getLatLng().lng.toPrecision(8);
                            var streetViewURL = 'http://maps.google.com/maps?q=&layer=c&cbll=' + lat + ',' + lon + '&cbp=11,0,0,0,0';
                            window.open(streetViewURL, '_blank');
                        });
                    });

                    markers.addLayer(marker);
                    var circle = L.circle([item.x_Geo, item.y_Geo], {
                        color: '#1e3143', // Color del círculo
                        fillColor: '#1e3143', // Color de relleno del círculo
                        fillOpacity: 0.2, // Opacidad del relleno del círculo
                        radius: 300       // Radio en metros
                    }).addTo(mapmun);

                });

                mapmun.addLayer(markers);

            },
            error: function (error) {
                // Maneja el error si ocurre.
            }


        });
    }
    function CargaExpendiosmun_1() {



        var coordenadas = @Html.Raw(ViewBag.JsonObjects["ExpendiosJson"]);
        console.log("Revisa aqui", coordenadas);
        var markers = L.markerClusterGroup();

        // Agrega los marcadores para las coordenadas del mapa actual
        for (var j = 0; j < coordenadas.length; j++) {
            var coordenada = coordenadas[j];
            var marker = L.marker([coordenada.Latitud_GEO, coordenada.Longitud_GEO], { icon: iconoExpendio });

            marker.bindPopup("<h3>" + coordenada.NumeroPermiso + "</h3><p>" + coordenada.Razón_social + "</p> <hr/><ul><li>Fecha de Otorgamiento del Permiso:" + coordenada.FechaOtorgamiento + "</li><li>Número de Permiso:" + coordenada.NumeroPermiso + "</li></ul><a target='_blank' href='/Indicadores/DetalleExpendio?NumeroPermiso=" + coordenada.NumeroPermiso + "'>Ver detalle</a>");

            markers.addLayer(marker);
        }

        mapmun.addLayer(markers);
    }
    function CargaSolicitudesmun_1() {

        var indicadores_seleccionados_nal = [];
        $('#misCheckboxes input:checked').each(function () {
            indicadores_seleccionados_nal.push($(this).val());
        });

        var indicadores_seleccionados_mun = [];
        $('#misCheckboxes_mun input:checked').each(function () {
            indicadores_seleccionados_mun.push($(this).val());
        });

        var datos_mun = {
            Umbral_Seleccionado_Nal: $('#umbral').val(),
            Indicadores_Seleccionados_Nal: indicadores_seleccionados_nal,
            Umbral_Seleccionado_Mun: $('#umbral_mun').val(),
            Indicadores_Seleccionados_Mun: indicadores_seleccionados_mun

            //dEBEN LLAMARSE IGUAL EN LA CLASE CLASE CALIFICACION FINAL
        };
        //    alert(JSON.stringify(datos_mun));
        console.log("Datos Municipio Nacional:", datos_mun);

        // Tabla de Resultados
        $.ajax({
            url: '/Indicadores/calificacion_MUN',
            type: 'POST',
            data: JSON.stringify(datos_mun),

            contentType: 'application/json',
            success: function (response) {
                console.log("Salida store MUN:", response); // ver la respuesta en consola


                //Mapa de Resultados/////////////////////////////////////////////////////////////////////
                // Crea un grupo de marcadores
                var markers = L.markerClusterGroup();
                // Crea los iconos
                var iconoBase = L.Icon.extend({
                    options: {
                        iconSize: [24, 24],
                        iconAnchor: [12, 16],
                        popupAnchor: [-3, -76]
                    }
                });

                var iconoOptimo = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Aprobado.png' }),
                    iconoViable = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/viable.png' }),
                    iconoFactible = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/Factible.png' });
                iconoNoViable = new iconoBase({ iconUrl: '@Cdn.Url/img_snier/vistas/NoAprobado.png' });

                // Añade marcadores al grupo para cada conjunto de coordenadas en la respuesta
                response.forEach(function (item) {
                    // Asigna el icono de acuerdo a la categoría
                    var iconoActual;
                    var iconoActualUrl;
                    if (item.categoria == "Óptimo") {
                        iconoActual = iconoOptimo;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/Aprobado.png';
                    } else if (item.categoria == "Viable") {
                        iconoActual = iconoViable;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/viable.png';
                    } else if (item.categoria == "Factible") {
                        iconoActual = iconoFactible;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/Factible.png';
                    } else if (item.categoria == "No Viable") {
                        iconoActual = iconoNoViable;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/NoAprobado.png';
                    }

                    else {
                        iconoActual = iconoNoViable;
                        iconoActualUrl = '@Cdn.Url/img_snier/vistas/NoAprobado.png';
                    }

                    var marker = L.marker([item.x_Geo, item.y_Geo], { icon: iconoActual });


                    marker.bindPopup(
                        "<style>" +
                        ".popup-content {" +
                        "width: 300px;" +
                        "height: 150px;" +
                        "overflow-y: auto;" +
                        "padding: 10px;" +
                        "}" +
                        "h2, h3, h4, p, li {" +
                        "margin: 0 0 10px 0;" +
                        "}" +
                        "ul {" +
                        "padding-left: 20px;" +
                        "}" +
                        "img {" +
                        "vertical-align: middle;" +
                        "margin-right: 10px;" +
                        "}" +
                        "</style>" +
                        "<div class='popup-content'>" +
                        "<h2 class='subtitulo'><img src='" + iconoActualUrl + "' style='height: 24px; width: 24px;'/><strong>" + item.razon_social + "</strong></h2>" +
                        "<br>" +
                        "<h6><strong>Categoría:</strong> " + item.categoria + "</h6>" +
                        "<h6><i class='bi bi-qr-code'></i> Turno de Kmis: " + item.turno + "</h6>" +
                        "<h6><i class='bi bi-fingerprint'></i> ID Solicitud: " + item.id + "</h6>" +
                        "<p><i class='bi bi-geo-alt-fill'></i> Entidad Federativa: " + item.eF_Nombre + "</p>" +
                        "<ul>" +
                        "<li><strong>Municipio:</strong> " + item.municipio_Nombre + "</li>" +
                        "<li><strong>¿Documentos Completos?:</strong> " + (item.documentos_completos == "1" ? 'Sí' : 'No') + "</li>" +
                        "<li><strong>¿Tiene Análisis de Riesgo?:</strong> " + (item.analisis_riesgo == "1" ? 'Sí' : 'No') + "</li>" +
                        "</ul>" +
                        "<button class='btn btn-cre-amarillo' onclick='redireccionarADetalle(" + item.id + ")'>Ver Expendios Cercanos a Solicitud</button>  <hr />" +
                        "<a class='street-view-link btn btn-cre-verde' href='#'>Ver vista de calle</a> <hr />" +
                        "<a class='btn btn-cre-rojo' target='_blank' href='https://titan.cre.gob.mx/Consulta/Turno/" + item.turno + "'>Ver Expediente en Kmis</a>" +
                        "</div>"
                    );


                    marker.on('popupopen', function (e) {
                        var popup = e.popup;
                        var streetViewLink = popup.getElement().querySelector('.street-view-link');
                        streetViewLink.addEventListener('click', function () {
                            var lat = e.target.getLatLng().lat.toPrecision(8);
                            var lon = e.target.getLatLng().lng.toPrecision(8);
                            var streetViewURL = 'http://maps.google.com/maps?q=&layer=c&cbll=' + lat + ',' + lon + '&cbp=11,0,0,0,0';
                            window.open(streetViewURL, '_blank');
                        });
                    });

                    markers.addLayer(marker);
                    var circle = L.circle([item.x_Geo, item.y_Geo], {
                        color: '#1e3143', // Color del círculo
                        fillColor: '#1e3143', // Color de relleno del círculo
                        fillOpacity: 0.2, // Opacidad del relleno del círculo
                        radius: 300       // Radio en metros
                    }).addTo(mapmun);

                });

                mapmun.addLayer(markers);

            },
            error: function (error) {
                // Maneja el error si ocurre.
            }


        });
    }
    function CargaSyEmun() {
        limpiarMarcadoresmun();  // Limpia los marcadores existentes

        CargaExpendiosmun_1();  // Carga los permisos de expendio

        CargaSolicitudesmun_1();  // Carga las solicitudes a revisar
    }
    function ObtieneI1M() {
        limpiarMarcadoresmun();
        CargaExpendiosmun_1();  // Carga los permisos de expendio
        CargaSolicitudesmun_1();  // Carga las solicitudes a revisar
        function getColorEF(d) {
            return d == 1 ? '#97d96d' :
                d == 0 ? '#f2cf44' :
                    d == -1 ? '#e63950' :
                        d == 2 ? '#fafafa' :
                            '#aad3df';
        }

        function style(feature) {
            return {
                fillColor: getColorEF(I1_M),
                weight: 1,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.01
            };
        }




        municipiosLayer = L.geoJSON(municipios_mapa, {
            style: function (feature) {
                var cvegeo = feature.properties.CVEGEO;
                var indicadorMunicipio = coloresImJson.ICM.find(function (indicador) {
                    return indicador.cvegeo === cvegeo;
                });

                var I1_M = indicadorMunicipio ? indicadorMunicipio.I1_M : 0;

                return {
                    fillColor: getColorEF(I1_M),
                    weight: 1,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7
                };
            },
            onEachFeature: function (feature, layer) {
                layer.bindTooltip(feature.properties.NOM_MUN, {
                    permanent: false,
                    direction: 'auto',
                    opacity: 0.7,
                    className: 'custom-tooltip'
                });
                layer.on({
                    mouseover: function (e) {
                        var layer = e.target;
                        layer.setStyle({
                            weight: 2,
                            color: '#666',
                            dashArray: '',
                            fillOpacity: 0.9
                        });
                        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                            layer.bringToFront();
                        }
                    },
                    mouseout: function (e) {
                        municipiosLayer.resetStyle(e.target);
                    }
                });
            }
        }).addTo(mapmun);

        // Resto del código relacionado con el mapa Leaflet
    }
    function ObtieneI2M() {
        limpiarMarcadoresmun();
        CargaExpendiosmun_1();  // Carga los permisos de expendio
        CargaSolicitudesmun_1();  // Carga las solicitudes a revisar
        function getColorEF(d) {
            return d == 1 ? '#97d96d' :
                d == 0 ? '#f2cf44' :
                    d == -1 ? '#e63950' :
                        d == 2 ? '#fafafa' :
                            '#aad3df';
        }

        function style(feature) {
            return {
                fillColor: getColorEF(I2_M),
                weight: 1,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.01
            };
        }




        municipiosLayer = L.geoJSON(municipios_mapa, {
            style: function (feature) {
                var cvegeo = feature.properties.CVEGEO;
                var indicadorMunicipio = coloresImJson.ICM.find(function (indicador) {
                    return indicador.cvegeo === cvegeo;
                });

                var I2_M = indicadorMunicipio ? indicadorMunicipio.I2_M : 0;

                return {
                    fillColor: getColorEF(I2_M),
                    weight: 1,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7
                };
            },
            onEachFeature: function (feature, layer) {
                layer.bindTooltip(feature.properties.NOM_MUN, {
                    permanent: false,
                    direction: 'auto',
                    opacity: 0.7,
                    className: 'custom-tooltip'
                });
                layer.on({
                    mouseover: function (e) {
                        var layer = e.target;
                        layer.setStyle({
                            weight: 2,
                            color: '#666',
                            dashArray: '',
                            fillOpacity: 0.9
                        });
                        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                            layer.bringToFront();
                        }
                    },
                    mouseout: function (e) {
                        municipiosLayer.resetStyle(e.target);
                    }
                });
            }
        }).addTo(mapmun);

        // Resto del código relacionado con el mapa Leaflet
    }
    function ObtieneI3M() {
        limpiarMarcadoresmun();
        CargaExpendiosmun_1();  // Carga los permisos de expendio
        CargaSolicitudesmun_1();  // Carga las solicitudes a revisar
        function getColorEF(d) {
            return d == 1 ? '#97d96d' :
                d == 0 ? '#f2cf44' :
                    d == -1 ? '#e63950' :
                        d == 2 ? '#fafafa' :
                            '#aad3df';
        }

        function style(feature) {
            return {
                fillColor: getColorEF(I3_M),
                weight: 1,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.01
            };
        }




        municipiosLayer = L.geoJSON(municipios_mapa, {
            style: function (feature) {
                var cvegeo = feature.properties.CVEGEO;
                var indicadorMunicipio = coloresImJson.ICM.find(function (indicador) {
                    return indicador.cvegeo === cvegeo;
                });

                var I3_M = indicadorMunicipio ? indicadorMunicipio.I3_M : 0;

                return {
                    fillColor: getColorEF(I3_M),
                    weight: 1,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7
                };
            },
            onEachFeature: function (feature, layer) {
                layer.bindTooltip(feature.properties.NOM_MUN, {
                    permanent: false,
                    direction: 'auto',
                    opacity: 0.7,
                    className: 'custom-tooltip'
                });
                layer.on({
                    mouseover: function (e) {
                        var layer = e.target;
                        layer.setStyle({
                            weight: 2,
                            color: '#666',
                            dashArray: '',
                            fillOpacity: 0.9
                        });
                        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                            layer.bringToFront();
                        }
                    },
                    mouseout: function (e) {
                        municipiosLayer.resetStyle(e.target);
                    }
                });
            }
        }).addTo(mapmun);

        // Resto del código relacionado con el mapa Leaflet
    }
    function ObtieneI4M() {
        limpiarMarcadoresmun();
        CargaExpendiosmun_1();  // Carga los permisos de expendio
        CargaSolicitudesmun_1();  // Carga las solicitudes a revisar
        function getColorEF(d) {
            return d == 1 ? '#97d96d' :
                d == 0 ? '#f2cf44' :
                    d == -1 ? '#e63950' :
                        d == 2 ? '#fafafa' :
                            '#aad3df';
        }

        function style(feature) {
            return {
                fillColor: getColorEF(I4_M),
                weight: 1,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.01
            };
        }




        municipiosLayer = L.geoJSON(municipios_mapa, {
            style: function (feature) {
                var cvegeo = feature.properties.CVEGEO;
                var indicadorMunicipio = coloresImJson.ICM.find(function (indicador) {
                    return indicador.cvegeo === cvegeo;
                });

                var I4_M = indicadorMunicipio ? indicadorMunicipio.I4_M : 0;

                return {
                    fillColor: getColorEF(I4_M),
                    weight: 1,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7
                };
            },
            onEachFeature: function (feature, layer) {
                layer.bindTooltip(feature.properties.NOM_MUN, {
                    permanent: false,
                    direction: 'auto',
                    opacity: 0.7,
                    className: 'custom-tooltip'
                });
                layer.on({
                    mouseover: function (e) {
                        var layer = e.target;
                        layer.setStyle({
                            weight: 2,
                            color: '#666',
                            dashArray: '',
                            fillOpacity: 0.9
                        });
                        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                            layer.bringToFront();
                        }
                    },
                    mouseout: function (e) {
                        municipiosLayer.resetStyle(e.target);
                    }
                });
            }
        }).addTo(mapmun);

        // Resto del código relacionado con el mapa Leaflet
    }
    function ObtieneI5M() {
        limpiarMarcadoresmun();
        CargaExpendiosmun_1();  // Carga los permisos de expendio
        CargaSolicitudesmun_1();  // Carga las solicitudes a revisar
        function getColorEF(d) {
            return d == 1 ? '#97d96d' :
                d == 0 ? '#f2cf44' :
                    d == -1 ? '#e63950' :
                        d == 2 ? '#fafafa' :
                            '#aad3df';
        }

        function style(feature) {
            return {
                fillColor: getColorEF(I5_M),
                weight: 1,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.01
            };
        }




        municipiosLayer = L.geoJSON(municipios_mapa, {
            style: function (feature) {
                var cvegeo = feature.properties.CVEGEO;
                var indicadorMunicipio = coloresImJson.ICM.find(function (indicador) {
                    return indicador.cvegeo === cvegeo;
                });

                var I5_M = indicadorMunicipio ? indicadorMunicipio.I5_M : 0;

                return {
                    fillColor: getColorEF(I5_M),
                    weight: 1,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7
                };
            },
            onEachFeature: function (feature, layer) {
                layer.bindTooltip(feature.properties.NOM_MUN, {
                    permanent: false,
                    direction: 'auto',
                    opacity: 0.7,
                    className: 'custom-tooltip'
                });
                layer.on({
                    mouseover: function (e) {
                        var layer = e.target;
                        layer.setStyle({
                            weight: 2,
                            color: '#666',
                            dashArray: '',
                            fillOpacity: 0.9
                        });
                        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                            layer.bringToFront();
                        }
                    },
                    mouseout: function (e) {
                        municipiosLayer.resetStyle(e.target);
                    }
                });
            }
        }).addTo(mapmun);

        // Resto del código relacionado con el mapa Leaflet
    }
    function ObtieneI6M() {
        limpiarMarcadoresmun();
        CargaExpendiosmun_1();  // Carga los permisos de expendio
        CargaSolicitudesmun_1();  // Carga las solicitudes a revisar
        function getColorEF(d) {
            return d == 1 ? '#97d96d' :
                d == 0 ? '#f2cf44' :
                    d == -1 ? '#e63950' :
                        d == 2 ? '#fafafa' :
                            '#aad3df';
        }

        function style(feature) {
            return {
                fillColor: getColorEF(I6_M),
                weight: 1,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.01
            };
        }




        municipiosLayer = L.geoJSON(municipios_mapa, {
            style: function (feature) {
                var cvegeo = feature.properties.CVEGEO;
                var indicadorMunicipio = coloresImJson.ICM.find(function (indicador) {
                    return indicador.cvegeo === cvegeo;
                });

                var I6_M = indicadorMunicipio ? indicadorMunicipio.I6_M : 0;

                return {
                    fillColor: getColorEF(I6_M),
                    weight: 1,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7
                };
            },
            onEachFeature: function (feature, layer) {
                layer.bindTooltip(feature.properties.NOM_MUN, {
                    permanent: false,
                    direction: 'auto',
                    opacity: 0.7,
                    className: 'custom-tooltip'
                });
                layer.on({
                    mouseover: function (e) {
                        var layer = e.target;
                        layer.setStyle({
                            weight: 2,
                            color: '#666',
                            dashArray: '',
                            fillOpacity: 0.9
                        });
                        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                            layer.bringToFront();
                        }
                    },
                    mouseout: function (e) {
                        municipiosLayer.resetStyle(e.target);
                    }
                });
            }
        }).addTo(mapmun);

        // Resto del código relacionado con el mapa Leaflet
    }
    function ObtieneI8M() {
        limpiarMarcadoresmun();
        CargaExpendiosmun_1();  // Carga los permisos de expendio
        CargaSolicitudesmun_1();  // Carga las solicitudes a revisar
        function getColorEF(d) {
            return d == 1 ? '#97d96d' :
                d == 0 ? '#f2cf44' :
                    d == -1 ? '#e63950' :
                        d == 2 ? '#fafafa' :
                            '#aad3df';
        }

        function style(feature) {
            return {
                fillColor: getColorEF(I8_M),
                weight: 1,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.01
            };
        }




        municipiosLayer = L.geoJSON(municipios_mapa, {
            style: function (feature) {
                var cvegeo = feature.properties.CVEGEO;
                var indicadorMunicipio = coloresImJson.ICM.find(function (indicador) {
                    return indicador.cvegeo === cvegeo;
                });

                var I8_M = indicadorMunicipio ? indicadorMunicipio.I8_M : 0;

                return {
                    fillColor: getColorEF(I8_M),
                    weight: 1,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7
                };
            },
            onEachFeature: function (feature, layer) {
                layer.bindTooltip(feature.properties.NOM_MUN, {
                    permanent: false,
                    direction: 'auto',
                    opacity: 0.7,
                    className: 'custom-tooltip'
                });
                layer.on({
                    mouseover: function (e) {
                        var layer = e.target;
                        layer.setStyle({
                            weight: 2,
                            color: '#666',
                            dashArray: '',
                            fillOpacity: 0.9
                        });
                        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
                            layer.bringToFront();
                        }
                    },
                    mouseout: function (e) {
                        municipiosLayer.resetStyle(e.target);
                    }
                });
            }
        }).addTo(mapmun);

        // Resto del código relacionado con el mapa Leaflet
    }
</script>
