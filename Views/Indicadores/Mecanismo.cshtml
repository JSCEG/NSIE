@using NSIE.Models
@model Mep

@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json
@inject IHttpContextAccessor HttpContextAccessor

@{
    var httpContext = HttpContextAccessor.HttpContext;
    var perfilUsuarioJson = httpContext.Session.GetString("PerfilUsuario");
    var perfilUsuario = JsonConvert.DeserializeObject<PerfilUsuario>(perfilUsuarioJson);

    // Utilizar los datos del usuario para personalizar la vista
    ViewData["NombreUsuario"] = perfilUsuario.Nombre;
    ViewData["RolUsuario"] = perfilUsuario.Rol;
    ViewData["MercadoUsuario"] = perfilUsuario.Mercado_ID;
    ViewData["IDUsuario"] = perfilUsuario.IdUsuario;
}




@{
    ViewData["Title"] = " Mecanismo de Evaluación y Planeación - Petrolíferos";
}


   <div class="watermark-container">
    @for (int i = 0; i < 50; i++)  /* Cambiamos el número 3 por 9 para tener más marcas de agua */
    {
        <div class="watermark">
            SENER-@DateTime.Now.AddHours(-6).ToString("dd/MM/yyyy HH:mm:ss") - @ViewData["NombreUsuario"]
        </div>
    }
</div>
 




@*Shapes Estados*@
<script type="text/javascript" src="~/Geovisualizador/shapes/estadosminlight.js"></script>
<script type="text/javascript" src="~/Geovisualizador/shapes/municipiosminlight.js"></script>

@*Petrolíferos*@
<script src="~/Geovisualizador/data/ductos_petroliferos_4326_0.js"></script>



<div class="text-center">
    <h3 class="cp-section cp-grouping-section"> <img src="~/img/mexicoi.png" alt="Icono personalizado" class="iconomenu">@ViewData["Title"]</h3>
</div>

<br />

<div class="container">

<section>
    <div class="accordion" id="accordionExample">

         
        
                <div class="accordion-item" id="seccion1">
                    <h2 class="accordion-header">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    <h6 class="display-6 fw-bold subtituloaco pl-3%">1.-Solicitudes a Evaluar</h6>
                </button>
            </h2>
            <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
                <div class="accordion-body">
                  @*  <partial name="_TotalSolicitudesPartial" model="@Model" />*@
                  <br />
                       <h3 class="subtitulo display-9 fw-bold">Información General</h3> 
                    @*Seccion de Totales*@
                            <section class="section-scroll">


                                <div class="card_t">
                                        <span class="icon"><img src="~/img/evaluar.png" alt="Icono personalizado" class="iconomenu"></span>
                                            <h3 id="total_solicitudes"></h3>
                                            <p>Total de Solicitudes a Evaluar a Nivel Nacional</p>
                                </div>

                                <div class="card_t">
                                        <span class="icon"><img src="~/img/documentoscompletos.png" alt="Icono personalizado" class="iconomenu"></span>
                                            <h3 id="documentos_completos"></h3>
                                            <p>Solicitudes con Documentos Completos a Nivel Nacional</p>
                                        </div>

                                <div class="card_t">
                                        <span class="icon"><img src="~/img/analisis.png" alt="Icono personalizado" class="iconomenu"></span>
                                            <h3 id="analisis_riesgo"></h3>
                                            <p>Solicitudes con Análisis de Riesgo a Nivel Nacional</p>
                                        </div>
            
                                <div class="card_t">
                                    <span class="icon"><img src="~/img/totales.png" alt="Icono personalizado" class="iconomenu"></span>
                                    <h3 id="total_expendios"></h3>
                                    <p>Total de Permisos de Expendio al Público</p>
                                    <p id="fecha_corte" class="fecha-corte" style="font-size: 0.8em; margin-top: 10px;"></p> <!-- Ajuste del tamaño de texto y margen superior -->
                                </div>

        

                            </section>

                           <div class="">
                            <div class="row">
                                <div class="col">
                                  @*  <input type="text" id="searchBox_rs_autorizados" placeholder="Buscar razón social">
                                    <button onclick="highlightSeries('rs_autorizados')">Buscar</button>*@


                                    <div id="rs_autorizados"></div>
                                </div>
                             
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div id="grafico_rs"></div>
                                </div>
                                <div class="col-md-6">
                                    <div id="grafico_ms"></div>
                                </div>
                            </div>
                             <div class="row">
                                <div class="col">
                                 <div id="rs_union"></div>
                                </div>
                                
                            </div>
                            
                                 <div class="row">

                                    <div class="col-md-6">
                                    <div id="grafico_gie_a" style="max-height: 100%;"></div>
                                    </div>
                             
                               
                               
                                    <div class="col-md-6">
                                    <div id="grafico_gie_s" style="max-height: 100%;"></div>
                                                                      <div class="leyendas">
                                    <div class="leyenda-item">
                                        <span class="color-indicator morado"></span>Razones sociales que transitan de estado amarillo (moderado) a morado (saturado) en términos de concentración de fluido físico de energía.
                                    </div>
                                    <div class="leyenda-item">
                                        <span class="color-indicator azul"></span>Razones sociales que transitan de estado verde (oportuno para participación) hacia azul (moderado) en términos de concentración de fluido físico de energía.
                                    </div>
                                </div>
                                    </div>

                                </div>
                           

                             </div>


                         
                        
                         
                            
                    <partial name="_MapaSolicitudesPartial" model="@Model" />

                    <h6 class="display-6 fw-bold subtitulo">Información de las Solicitudes</h6>
                    <br>
                    <br>

                    <div class="table-responsive">
                        <table id="I_SOL" class="table table-hover table-responsive table-bordered">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Turno</th>
                                       <th>Razón Social</th>
                                            <th>Expediente </th>
                                                 <th>Marca Solicitada</th>


                                    <th>EF ID</th>
                                    <th>Entidad Federativa</th>
                                    <th>MPO ID</th>
                                    <th>Nombre del Municipio</th>
                                    <th>Análisis de Riesgo</th>
                                    @*    <th>Con Análisis de Riesgo</th>
                                        <th>Con Documentos Completos</th>*@
                                    <th>Documentos Completos</th>
                                    <th>Latitud GEO</th>
                                    <th>Longitud GEO</th>
                                    @*  <th>Total de Permisos de Expendio</th>
                                        <th>Total de Solicitudes a Evaluar</th>*@
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Los datos se agregarán aquí desde AJAX -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>


            @if (perfilUsuario.Rol != "4")
                {

                <div class="accordion-item" id="seccion2">
                    <h2 class="accordion-header">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                            <h6 class="display-6 fw-bold subtituloaco">2.-Realizar Evaluación a Nivel Entidad Federativa</h6>
                        </button>
                    </h2>
                    <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                        <div class="accordion-body">
                            <section id="mecanismo_evaluacion">


                                <h3 class="display-6 fw-bold subtitulo">Parámetros para realizar la Evaluación</h3>
                                <br />
                                <div class="mb-3">
                                    <div class="alert " role="alert">
                                        <div class="row g-2">
                                            <div class="col-12 col-sm-9 ">
                                                <!-- Cambio de col-sm-10 a col-sm-6 -->
                                                <div id="misCheckboxes" class="row ">
                                                    <div class="col">
                                                        <div class="alert alert alert-success" role="alert">
                                                            <h5 class="text-center fw-bold subtitulo1"><img src="~/img/checkindi.png" alt="Icono personalizado" class="iconomenu"> Indicadores para la Evaluación a nivel Entidad Federativa:</h5>
                                                            <br />
                                                            @* <div class="form-group">
                                                        <div class="row">
                                                        <div class="col-md-6">
                                                        <!-- Contenido de los checkboxes -->
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes" value="1" id="chk1" />
                                                        <label class="form-check-label" for="chk1">Indicador 1 - Atención al Usuario Final</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes" value="2" id="chk2" />
                                                        <label class="form-check-label" for="chk2">Indicador 2 - Densidad Territorial de Vehículos</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes" value="3" id="chk3" />
                                                        <label class="form-check-label" for="chk3">Indicador 3 - Densidad Territorial de Expendios</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes" value="4" id="chk4" />
                                                        <label class="form-check-label" for="chk4">Indicador 4 - Marginación</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes" value="5" id="chk5" />
                                                        <label class="form-check-label" for="chk5">Indicador 5 - Cuota de Mercado de Gasolinas</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes" value="6" id="chk6" />
                                                        <label class="form-check-label" for="chk6">Indicador 6 - Cuota de Mercado de Diésel</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes" value="7" id="chk7" />
                                                        <label class="form-check-label" for="chk7">Indicador 7 - Tasa de Consumo </label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes" value="8" id="chk8" />
                                                        <label class="form-check-label" for="chk8">Indicador 8 - Impulso al desarrollo del Sureste</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes" value="9" id="chk9" />
                                                        <label class="form-check-label" for="chk9">Indicador 9 - Impulso a la electromovilidad</label>
                                                        </div>

                                                        </div>
                                                        <div class="col-md-6">
                                                        <!-- Contenido de los checkboxes -->

                                                        <div class="form-check">
                                                        <input class="form-check-input indicador-especial" type="checkbox" name="checkboxes" value="10" id="chk10" />
                                                        <label class="form-check-label" for="chk10">Indicador 10 - Nearshoring</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input indicador-especial" type="checkbox" name="checkboxes" value="11" id="chk11" />
                                                        <label class="form-check-label" for="chk11">Indicador 11 - Nearshoring con restricción de Agua</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes" value="12" id="chk12" />
                                                        <label class="form-check-label" for="chk12">Indicador 12 - Impulso de Marca Local a Marca Global</label>
                                                        </div>
                                                        <div id="result-message_1" class="alert alert-warning pb-3 text-center" role="alert" style="display: none;">
                                                        <strong><i class="bi bi-exclamation-octagon-fill"></i> Solo puedes seleccionar un indicador de Nearshoring.</strong>
                                                        </div>
                                                        </div>
                                                        </div>
                                                        </div>*@
                                                            <div class="form-group">
                                                                <div class="row">
                                                                    <div class="col-md-6">
                                                                        <!-- Contenido de los checkboxes -->
                                                                        <div class="form-check">
                                                                            <input class="form-check-input" type="checkbox" name="checkboxes" value="1" id="chk1" checked disabled />
                                                                            <label class="form-check-label" for="chk1">Indicador 1 - Atención al Usuario Final</label>
                                                                        </div>
                                                                        <div class="form-check">
                                                                            <input class="form-check-input" type="checkbox" name="checkboxes" value="2" id="chk2" checked disabled />
                                                                            <label class="form-check-label" for="chk2">Indicador 2 - Densidad Territorial de Vehículos</label>
                                                                        </div>
                                                                        <div class="form-check">
                                                                            <input class="form-check-input" type="checkbox" name="checkboxes" value="3" id="chk3" checked disabled />
                                                                            <label class="form-check-label" for="chk3">Indicador 3 - Densidad Territorial de Expendios</label>
                                                                        </div>
                                                                        <div class="form-check">
                                                                            <input class="form-check-input" type="checkbox" name="checkboxes" value="4" id="chk4" checked disabled />
                                                                            <label class="form-check-label" for="chk4">Indicador 4 - Marginación</label>
                                                                        </div>
                                                                        <div class="form-check">
                                                                            <input class="form-check-input" type="checkbox" name="checkboxes" value="5" id="chk5" checked disabled />
                                                                            <label class="form-check-label" for="chk5">Indicador 5 - Cuota de Mercado de Gasolinas</label>
                                                                        </div>
                                                                        <div class="form-check">
                                                                            <input class="form-check-input" type="checkbox" name="checkboxes" value="6" id="chk6" checked disabled />
                                                                            <label class="form-check-label" for="chk6">Indicador 6 - Cuota de Mercado de Diésel</label>
                                                                        </div>
                                                                        <div class="form-check">
                                                                            <input class="form-check-input" type="checkbox" name="checkboxes" value="7" id="chk7" checked disabled />
                                                                            <label class="form-check-label" for="chk7">Indicador 7 - Tasa de Consumo</label>
                                                                        </div>
                                                                        <div class="form-check">
                                                                            <input class="form-check-input" type="checkbox" name="checkboxes" value="8" id="chk8" checked disabled />
                                                                            <label class="form-check-label" for="chk8">Indicador 8 - Impulso al desarrollo del Sureste</label>
                                                                        </div>
                                                                        <div class="form-check">
                                                                            <input class="form-check-input" type="checkbox" name="checkboxes" value="9" id="chk9" checked disabled />
                                                                            <label class="form-check-label" for="chk9">Indicador 9 - Impulso a la electromovilidad</label>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-md-6">
                                                                        <!-- Contenido de los checkboxes -->
                                                                        <div class="form-check">
                                                                            <input class="form-check-input indicador-especial" type="checkbox" name="checkboxes" value="10" id="chk10" disabled />
                                                                            <label class="form-check-label" for="chk10">Indicador 10 - Nearshoring</label>
                                                                        </div>
                                                                        <div class="form-check">
                                                                            <input class="form-check-input indicador-especial" type="checkbox" name="checkboxes" value="11" id="chk11" checked disabled />
                                                                            <label class="form-check-label" for="chk11">Indicador 11 - Nearshoring con restricción de Agua</label>
                                                                        </div>
                                                                        <div class="form-check">
                                                                            <input class="form-check-input" type="checkbox" name="checkboxes" value="12" id="chk12" disabled />
                                                                            <label class="form-check-label" for="chk12">Indicador 12 - Impulso de Marca Local a Marca Global</label>
                                                                        </div>
                                                                        <div id="result-message_1" class="alert alert-warning pb-3 text-center" role="alert" style="display: none;">
                                                                            <strong><i class="bi bi-exclamation-octagon-fill"></i> Solo puedes seleccionar un indicador de Nearshoring.</strong>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-12 col-sm-3">
                                                <!-- Cambio de col-sm-4 a col-sm-6 -->
                                                <div class="alert alert-success" role="alert">
                                                    @*  <h6 class="alert-heading subtitulo">Umbral para el Cálculo:</h6>*@
                                                    <input type="number" class="form-control umbral_p1" placeholder="⬅️" name="umbral" id="umbral" value="0" disabled="disabled" style="display:none" />
                                                    <button type="submit" id="btnMostrar" class="btn btn-cre-verde mt-3"><i class="bi bi-play"></i> ¡Ejecutar Evaluación!</button>
                                                    <button type="button" id="btnHabilitar" class="btn btn-cre-verde mt-3" style="display: none" disabled>-> Haz clic aquí para realizar otra evaluación!</button>
                                                    <hr>
                                                    <div id="result-message" class="alert alert-warning pb-3 text-center" role="alert">
                                                        <strong><i class="bi bi-exclamation-octagon-fill"></i></strong>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="container mt-3">
                                    <div class="progress mt-3" style="display: none">
                                        <div class="progress-bar progress-bar-striped progress-bar-animated progress-bar-nacional" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                                            Ejecutando Corrida con los Indicadores Seleccionados... (espere)
                                        </div>
                                    </div>

                                </div>
                            </section>

                        </div>
                    </div>
                </div>
            }
                <div class="accordion-item" id="seccion3" style="display:none">
                    <h2 class="accordion-header">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                            <h6 class="display-6 fw-bold subtituloaco">3.-Ver Resultados de la Evaluación por Entidad Federativa</h6>

                        </button>
                    </h2>
                    <div id="collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                        <div class="accordion-body">
                            <partial name="_ResultadosEFPartial" model="@Model" />
                        </div>
                    </div>
                </div>
                <div class="accordion-item" id="seccion4" style="display:none">
                    <h2 class="accordion-header">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFour" aria-expanded="false" aria-controls="collapseFour">
                            <h6 class="display-6 fw-bold subtituloaco">4.-Realizar Evaluación a Nivel Municipal</h6>

                        </button>
                    </h2>
                    <div id="collapseFour" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                        <div class="accordion-body">


                            <section id="mecanismo_evaluacion_mun">

                                <h3 class="display-6 fw-bold subtitulo">Parámetros para realizar la Evaluación a Nivel Municipal</h3>
                                <br />
                                <div class="mb-3">
                                    <div class="alert grayclaro" role="alert">
                                        <div class="row g-2">
                                            <div class="col-12 col-sm-9">
                                                <!-- Cambio de col-sm-10 a col-sm-6 -->
                                                <div id="misCheckboxes_mun" class="row">
                                                    <div class="col">
                                                        <div class="alert alert-success" role="alert">
                                                            <h5 class="text-center fw-bold subtitulo1"><img src="~/img/checkindi.png" alt="Icono personalizado" class="iconomenu">Indicadores para la Evaluación a nivel Municipal:</h5>
                                                            <br />
                                                            @* <div class="form-group">
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="1" id="chk1_mun" />
                                                        <label class="form-check-label" for="chk1_mun">Indicador Municipal  1 - Atención al Usuario Final</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="2" id="chk2_mun" />
                                                        <label class="form-check-label" for="chk2_mun">Indicador Municipal  2 - Densidad Territorial de Vehículos</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="3" id="chk3_mun" />
                                                        <label class="form-check-label" for="chk3_mun">Indicador Municipal  3 - Densidad Territorial de Expendios</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="4" id="chk4_mun" />
                                                        <label class="form-check-label" for="chk4_mun">Indicador Municipal  4 - Marginación</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="5" id="chk5_mun" />
                                                        <label class="form-check-label" for="chk5_mun">Indicador Municipal  5 - Cuota de Mercado Petrolíferos</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="6" id="chk6_mun" />
                                                        <label class="form-check-label" for="chk6_mun">Indicador Municipal  6 - Cuota de Mercado Gasolinas</label>
                                                        </div>*@
                                                            @*      <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="7" id="chk7_mun" />
                                                        <label class="form-check-label" for="chk7_mun">Indicador Municipal  7 - Tasa de Consumo Exosomático</label>
                                                        </div>                                        ojo el indicar 7 en realidad es el 8*@
                                                            @*   <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="8" id="chk8_mun" />
                                                        <label class="form-check-label" for="chk8_mun">Indicador Municipal  8- Tasa de Consumo Exosomático</label>
                                                        </div>*@
                                                            @*   <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="9" id="chk9_mun" />
                                                        <label class="form-check-label" for="chk9_mun">Indicador Municipal  9 - Impulso a la electromovilidad</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input indicador-especial" type="checkbox" name="checkboxes_mun" value="10_mun" id="chk10" />
                                                        <label class="form-check-label" for="chk10_mun">Indicador Municipal  10 - Nearshoring</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input indicador-especial" type="checkbox" name="checkboxes_mun" value="11_mun" id="chk11" />
                                                        <label class="form-check-label" for="chk11_mun">Indicador Municipal 11 - Nearshoring con restricción de Agua</label>
                                                        </div>
                                                        <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="12" id="chk12_mun" />
                                                        <label class="form-check-label" for="chk12_mun">Indicador Municipal  12 - Impulso de Marca Local a Marca Global</label>
                                                        </div>
                                                        </div>*@
                                                            <div class="form-group">
                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="1" id="chk1_mun" checked disabled />
                                                                    <label class="form-check-label" for="chk1_mun">Indicador Municipal 1 - Atención al Usuario Final</label>
                                                                </div>
                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="2" id="chk2_mun" checked disabled />
                                                                    <label class="form-check-label" for="chk2_mun">Indicador Municipal 2 - Densidad Territorial de Vehículos</label>
                                                                </div>
                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="3" id="chk3_mun" checked disabled />
                                                                    <label class="form-check-label" for="chk3_mun">Indicador Municipal 3 - Densidad Territorial de Expendios</label>
                                                                </div>
                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="4" id="chk4_mun" checked disabled />
                                                                    <label class="form-check-label" for="chk4_mun">Indicador Municipal 4 - Marginación</label>
                                                                </div>
                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="5" id="chk5_mun" checked disabled />
                                                                    <label class="form-check-label" for="chk5_mun">Indicador Municipal 5 - Cuota de Mercado Petrolíferos</label>
                                                                </div>
                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="6" id="chk6_mun" checked disabled />
                                                                    <label class="form-check-label" for="chk6_mun">Indicador Municipal 6 - Cuota de Mercado Gasolinas</label>
                                                                </div>
                                                                <div class="form-check">
                                                                    <input class="form-check-input" type="checkbox" name="checkboxes_mun" value="8" id="chk8_mun" checked disabled />

                                                                    @*<label class="form-check-label" for="chk8_mun">Indicador Municipal 8 - Tasa de Consumo Exosomático</label>*@
                                                                    <label class="form-check-label" for="chk8_mun">Indicador Municipal 7 -  Impulso al Desarrollo del Suresteo</label>
                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-12 col-sm-3">
                                                <!-- Cambio de col-sm-4 a col-sm-6 -->
                                                <div class="alert alert-success" role="alert">
                                                <h6 class="alert-heading subtitulo" style="display:none">Umbral para el Cálculo a nivel Municipal:</h6>
                                                    <input type="number" class="form-control umbral_p1" placeholder="⬅️" name="umbral" id="umbral_mun" value="0.1" disabled="disabled" style="display:none" />
                                                    <button type="submit" id="btnMostrar_mun" class="btn btn-cre-verde mt-3"><i class="bi bi-play"></i> ¡Ejecutar Evaluación Municipal!</button>
                                                    <button type="button" id="btnHabilitar_mun" class="btn btn-cre-verde mt-3" style="display: none" disabled>-> Haz click aquí para realizar otra evaluación!</button>
                                                    <hr>
                                                    <div id="result-message_mun" class="alert alert-warning pb-3 text-center" role="alert">
                                                        <strong><i class="bi bi-exclamation-octagon-fill"></i></strong>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="container mt-3">
                                    <div class="progress mt-3" style="display: none">
                                        <div class="progress-bar progress-bar-striped progress-bar-animated progress-bar-municipal" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                                            Ejecutando Corrida con los Indicadores Seleccionados a Nivel Municipal... (espere)
                                        </div>
                                    </div>

                                </div>
                            </section>


                        </div>
                    </div>
                </div>
                <div class="accordion-item" id="seccion5" style="display:none">
                    <h2 class="accordion-header">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFive" aria-expanded="false" aria-controls="collapseFive">
                    <h6 class="display-6 fw-bold subtituloaco"> 5.-Resultados de la Evaluación a Nivel Municipal</h6>

                </button>
            </h2>
            <div id="collapseFive" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                <div class="accordion-body">

                    <partial name="_ResultadosMUNPartial" model="@Model" />

                </div>
            </div>
        </div>
                
    </div>


</section>

<br />
</div>


@section scripts{




@*Radio de 3km*@
<script>
//1.Función que detecta cuántos permisos están dentro del radio de 3km de una solicitud:
    function calcularDistancia(lat1, lon1, lat2, lon2) {
                                                            var R = 6371; // Radio de la tierra en km
                                                            var dLat = (lat2 - lat1) * (Math.PI / 180);
                                                            var dLon = (lon2 - lon1) * (Math.PI / 180);
                                                            var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                                                                    Math.cos(lat1 * (Math.PI / 180)) * Math.cos(lat2 * (Math.PI / 180)) * 
                                                                    Math.sin(dLon / 2) * Math.sin(dLon / 2);
                                                            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
                                                            var distancia = R * c;
                                                            return distancia;
                                                        }

</script>


@*Ductos*@
<script>
    function Ductospet(){
        function pop_ductos_petroliferos_4326_0(feature, layer) {
            // Variables para almacenar las coordenadas de clic
            let clickedLat, clickedLon;
            function updatePopupContent(){
                var popupContent = '<table>\
                                <tr>\
                                    <th scope="row">Región: </th>\
                                    <td>' + (feature.properties['regin'] !== null ? autolinker.link(feature.properties['regin'].toLocaleString()) : '') + '</td>\
                                </tr>\
                                <tr>\
                                    <th scope="row">Ducto: </th>\
                                    <td>' + (feature.properties['ducto'] !== null ? autolinker.link(feature.properties['ducto'].toLocaleString()) : '') + '</td>\
                                </tr>\
                                <tr>\
                                    <th scope="row">Servicio: </th>\
                                    <td>' + (feature.properties['servicio'] !== null ? autolinker.link(feature.properties['servicio'].toLocaleString()) : '') + '</td>\
                                </tr>\
                                <tr>\
                                    <th scope="row">Longitud (km): </th>\
                                    <td>' + (feature.properties['longitud_'] !== null ? autolinker.link(feature.properties['longitud_'].toLocaleString()) : '') + '</td>\
                                </tr>\
                                <tr>\
                                    <th scope="row">Capacidad nominal (B): </th>\
                                    <td>' + (feature.properties['capa_n'] !== null ? autolinker.link(feature.properties['capa_n'].toLocaleString()) : '') + '</td>\
                                </tr>\
                                <tr>\
                                    <th scope="row">Capacidad opertiva (B): </th>\
                                    <td>' + (feature.properties['capa_o'] !== null ? autolinker.link(feature.properties['capa_o'].toLocaleString()) : '') + '</td>\
                                </tr>\
                                <tr>\
                                    <td><a class="street-view-link btn btn-cre-verde" href="http://maps.google.com/maps?q=&layer=c&cbll=' + clickedLat + ',' + clickedLon + '&cbp=11,0,0,0,0" target="_blank"><b> Ver vista de calle </b></a></td>\
                                </tr>\
                            </table>';
                layer.bindPopup(popupContent, { maxHeight: 400 }).openPopup();
            }
            // Evento para capturar clics en el mapa dentro del área del feature
            layer.on('click', function (e) {
                clickedLat = e.latlng.lat.toPrecision(8);
                clickedLon = e.latlng.lng.toPrecision(8);
                updatePopupContent();
            });
        }

        function style_ductos_petroliferos_4326_0_0() {
            return {
                pane: 'pane_ductos_petroliferos_4326_0',
                opacity: 1,
                    color: '#a77c50',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 4.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_ductos_petroliferos_4326_0');
        map.getPane('pane_ductos_petroliferos_4326_0').style.zIndex = 400;
        map.getPane('pane_ductos_petroliferos_4326_0').style['mix-blend-mode'] = 'normal';
        var layer_ductos_petroliferos_4326_0 = new L.geoJson(json_ductos_petroliferos_4326_0, {
            attribution: '',
            interactive: true,
            dataVar: 'json_ductos_petroliferos_4326_0',
            layerName: 'layer_ductos_petroliferos_4326_0',
            pane: 'pane_ductos_petroliferos_4326_0',
            onEachFeature: pop_ductos_petroliferos_4326_0,
            style: style_ductos_petroliferos_4326_0_0,
        });
        bounds_group.addLayer(layer_ductos_petroliferos_4326_0);
        map.addLayer(layer_ductos_petroliferos_4326_0);
        setBounds();
        }
    </script>

 @*Carga de Datos al Mapa*@
<script>

        //Carga los Datos para la Evaluación
        function Total_a_Evaluar() {
            $.ajax({
                url: '/Indicadores/GetTotales_a_Evaluar',
                type: 'GET',
                contentType: 'application/json',
                success: function (response) {
                  console.log("Totales EF:", response);

              
                    // Asignando los Totales a las tarjetas
                    for (var i = 0; i < response.length; i++) {
                        var totalSolicitudes = response[i].total_de_Solicitudes_a_Evaluar.toLocaleString();
                        var documentosCompletos = response[i].con_Documentos_Completos.toLocaleString();
                        var analisisRiesgo = response[i].con_Analisis_de_Riesgo !== null ? response[i].con_Analisis_de_Riesgo.toLocaleString() : "";
                        var totalExpendios = response[i].total_de_Permisos_de_Expendio.toLocaleString();
                        var fechaActualizacion = new Date(response[i].fecha_Actualizacion).toLocaleDateString(); // Nota el camelCase aquí

                        document.getElementById('total_solicitudes').innerText = totalSolicitudes;
                        document.getElementById('documentos_completos').innerText = documentosCompletos;
                        document.getElementById('analisis_riesgo').innerText = analisisRiesgo;
                        document.getElementById('total_expendios').innerText = totalExpendios;
                        document.getElementById('fecha_corte').innerText = 'Fecha de Corte: ' + fechaActualizacion; // Asignando la fecha de corte
                    }
                },
                error: function (error) {
                    console.log("Fallo al cargar los totales a Evaluar =(", response);
                }
            });
        }
         Total_a_Evaluar();

     
        function buscarPorNumeroPermiso() {
            var numeroBuscado = document.getElementById('busquedaPermisoInput').value.trim();

            if (!numeroBuscado) {
                alert("Por favor, introduce un Número de Solicitud o Turno.");
                return;  // Termina la ejecución de la función si el campo está vacío
            }

            var encontrado = false;

            for (var i = 0; i < datosSolExpendios.length; i++) {
                var expendio = datosSolExpendios[i];
                if (expendio.id === numeroBuscado || expendio.turno === numeroBuscado) {
                    var lat = expendio.latitud_GEO;
                    var lon = expendio.longitud_GEO;
                    map.setView([lat, lon], 15); // 15 es el nivel de zoom, puedes ajustarlo según prefieras
                    encontrado = true;
                    break;
                }
            }

            if (!encontrado) {
                alert("Número de Solicitud o Turno no encontrado.");
            }
        }
        function buscarPorNumeroPermisoMUN() {
            var numeroBuscado = document.getElementById('busquedaPermisoInputMUN').value.trim();

            if (!numeroBuscado) {
                alert("Por favor, introduce un Número de Solicitud o Turno K-mis");
                return;  // Termina la ejecución de la función si el campo está vacío
            }

            var encontrado = false;

            for (var i = 0; i < datosSolExpendios.length; i++) {
                var expendio = datosSolExpendios[i];
                if (expendio.id === numeroBuscado || expendio.turno === numeroBuscado) {
                    var lat = expendio.latitud_GEO;
                    var lon = expendio.longitud_GEO;
                    map.setView([lat, lon], 15); // 15 es el nivel de zoom, puedes ajustarlo según prefieras
                    encontrado = true;
                    break;
                }
            }

            if (!encontrado) {
                alert("¡Número de Solicitud o Turno K-mis no encontrado!");
            }
        }


 
        var autorizadosToColor = {};
        var nextColorIndex = 0;  // Usaremos este índice para recorrer los colores


        function redirectToGIE(razonSocial) {
            var url = '/Indicadores/DetalleGIE?razonSocial=' + encodeURIComponent(razonSocial);
            window.open(url, '_blank');
        }

        function calculateNodeSize(value) {
            var baseSize = 10;
            var factorSize = 0.1;
            return baseSize + (value * factorSize);
        }

     var colors = ['#0a88b1', '#f5e3a3', '#97d96d', '#ee4f43', '#9f2241', '#e63950', '#59b25d', '#f2cf44'];
        var autorizadosToColor = {};
        var nextColorIndex = 0;  // Usaremos este índice para recorrer los colores
 

        //Esta se va
         function generateColorForAutorizados(razonSocial) {
            if (!autorizadosToColor[razonSocial]) {
                autorizadosToColor[razonSocial] = colors[nextColorIndex % colors.length];
                nextColorIndex++;
            }
            return autorizadosToColor[razonSocial];
        } 

        //Esta es la nueva
        function generateColorForStatus(value) {
            if (value === 1) {
                return '#59b25d'; // Verde
            } else if (value === 0) {
                return '#f2cf44'; // Amarillo
            } else if (value === -1) {
                return '#ee4f43'; // Rojo
            } else if (value === -2) {
                return '#4A90E2'; // Azul
            } else if (value === -3) {
                return '#8B57D9'; // Morado
            }
        }



        $(document).ready(function () {
            // Manejador del evento click para el tooltip
            $(document).on('click', function (e) {
                if (!$(e.target).hasClass('tooltip-link')) {
                    ['grafico_gie_a', 'grafico_gie_s'].forEach(function (chartId) {
                        var chart = Highcharts.charts.find(function (ch) {
                            return ch.renderTo.id === chartId;
                        });
                        if (chart && chart.tooltip) {
                            chart.tooltip.hide();
                        }
                    });
                }
            });

            // Carga del GIE
            Carga_GIE();
        });

        function Carga_GIE() {
            loadChart('grafico_gie_a', '/Indicadores/GetGIE_Petroliferos_A', 'autorizados');
            loadChart('grafico_gie_s', '/Indicadores/GetGIE_Petroliferos_S', 'total');
        }

        function loadChart(chartId, url, key) {
            $.ajax({
                url: url,
                type: 'GET',
                contentType: 'application/json',
                success: function (response) {
                    console.log("Colores",response );
                    response.sort(function (a, b) {
                        return b[key] - a[key];
                    });
                      // Filtra los resultados basado en la id del gráfico
                    if (chartId === 'grafico_gie_s') {
                        response = response.filter(function(item) {
                            // Solo muestra elementos con solicitados > 0 para grafico_gie_s
                            return item.solicitados && item.solicitados > 0;
                        });
                    } else if (chartId === 'grafico_gie_a') {
                        response = response.filter(function(item) {
                            // Solo muestra elementos con autorizados > 0 Y solicitados > 0 para grafico_gie_a
                            return item.autorizados && item.autorizados > 0 && item.solicitados && item.solicitados > 0;
                        });
                    }
                    var nodes = [];
                    response.forEach(function (item, index) {
                        //VAriable para homologar los colores si viene de grafico_gie_a usa el valor "Color_Autorizado", si no usa "Color_SyA"
                    var colorValue = chartId === 'grafico_gie_a' ? item.color_Autorizado : item.color_SyA;
                        nodes.push({
                            id: "node-" + index,
                            name: "",
                            data: item,
                            marker: {
                                radius: calculateNodeSize(item[key])
                            },
                            //Anterior   color: generateColorForAutorizados(item.razon_social)
                            //Color por Indicador
                            color: generateColorForStatus(colorValue)
                        });
                    });

                    Highcharts.chart(chartId, {
                        chart: {
                            type: 'networkgraph',
                            height: '100%'
                        },
                        title: {
                            text: key === 'autorizados' ? 'Razón Social - Permisos Autorizados (As Is)' : 'Razón Social Permisos Autorizados + Solicitudes (To be)'
                        },
                        tooltip: {
                                    useHTML: true,
                                    hideDelay: 1000,
                                    formatter: function () {
                                        // Verifica el ID del gráfico
                                        if (chartId === 'grafico_gie_a') {
                                    var razonSocial = this.point.data.razon_social || "Desconocido";
                                    return "<strong>Razón Social:</strong> " + razonSocial +
                                        "<br><strong>Autorizados:</strong> " + this.point.data.autorizados +
                                      
                                        "<br><span style='color: blue; text-decoration: underline; cursor: pointer;' onclick='redirectToGIE(\"" + razonSocial + "\")'>Click en el Nodo para Ver Detalle</span>";
                                            return "<strong>Razón Social:</strong> " + this.point.name;
                                        } else if (chartId === 'grafico_gie_s') {
                                            // Tooltip personalizado para grafico_gie_s
                                            var razonSocial = this.point.data.razon_social || "Desconocido";
                                            return "<strong>Razón Social:</strong> " + razonSocial +
                                                "<br><strong>Autorizados:</strong> " + this.point.data.autorizados +
                                                "<br><strong>Solicitados:</strong> " + this.point.data.solicitados +
                                                "<br><strong>Total:</strong> " + this.point.data.total +
                                                "<br><span style='color: blue; text-decoration: underline; cursor: pointer;' onclick='redirectToGIE(\"" + razonSocial + "\")'>Click en el Nodo para Ver Detalle</span>";
                                        }

                                        return this.point.name;
                                    }
                                },
                        plotOptions: {
                            networkgraph: {
                                keys: ['from', 'to'],
                                layoutAlgorithm: {
                                    enableSimulation: true,
                                    integration: 'verlet',
                                    linkLength: 100
                                },
                                point: {
                                    events: {
                                        click: function () {
                                            var razonSocial = this.data.razon_social || "Desconocido";
                                            redirectToGIE(razonSocial);
                                        }
                                    }
                                }
                            }
                        },
                        series: [{
                            dataLabels: {
                                enabled: false
                            },
                            data: [],
                            nodes: nodes
                        }]
                    });
                },
                error: function (error) {
                    console.log("Error al obtener el Detalle", error);
                }
            });
        }







         $('.collapse').on('shown.bs.collapse', function () {
          map.invalidateSize();
        });
</script>



    @* Funcionalidades de Búsqueda *@
    <script>

      
    </script>




<script>
    // Actualizar el tamaño del mapa cuando se muestra una sección de acordeón
    $('.collapse').on('shown.bs.collapse', function () {
      mapmun.invalidateSize();
    });

</script>


 @*Funcionalidades Dropdown Capas*@
<script>


    //$(document).ready(function () {
    //    // Obtener el dropdown
    //    var dropdown = document.getElementById("dropdownMenuLink");

    //    // Obtener todas las opciones dentro del dropdown
    //    var opciones = dropdown.nextElementSibling.getElementsByClassName("dropdown-item");

    //    // Asignar el evento onclick a cada opción
    //    for (var i = 0; i < opciones.length; i++) {
    //        opciones[i].onclick = function (event) {
    //            event.preventDefault(); // Evitar que se siga el enlace

    //            // Quitar la clase activa de todas las opciones
    //            for (var j = 0; j < opciones.length; j++) {
    //                opciones[j].classList.remove("active");
    //            }

    //            // Agregar la clase activa a la opción seleccionada
    //            this.classList.add("active");

    //            // Obtener el texto de la opción seleccionada
    //            var textoSeleccionado = this.textContent.trim();

    //            // Actualizar el contenido del botón con el texto seleccionado
    //            dropdown.textContent = textoSeleccionado;

    //            // Obtener la función asociada a la opción seleccionada
    //            var funcion = this.getAttribute("onclick");
    //            // Ejecutar la función asociada
    //            eval(funcion);
    //        };
    //    }
    //});
</script>

 @*Funcionalidades Dropdown Capas Municipio*@
  <script>
        $(document).ready(function () {
            // Obtener el dropdown
            var dropdown = document.getElementById("dropdownMenuLinkMun");

            // Obtener todas las opciones dentro del dropdown
            var opciones = dropdown.nextElementSibling.getElementsByClassName("dropdown-item");

            // Asignar el evento onclick a cada opción
            for (var i = 0; i < opciones.length; i++) {
                opciones[i].onclick = function (event) {
                    event.preventDefault(); // Evitar que se siga el enlace

                    // Quitar la clase activa de todas las opciones
                    for (var j = 0; j < opciones.length; j++) {
                        opciones[j].classList.remove("active");
                    }

                    // Agregar la clase activa a la opción seleccionada
                    this.classList.add("active");

                    // Obtener el texto de la opción seleccionada
                    var textoSeleccionado = this.textContent.trim();

                    // Actualizar el contenido del botón con el texto seleccionado
                    dropdown.textContent = textoSeleccionado;

                    // Obtener la función asociada a la opción seleccionada
                    var funcion = this.getAttribute("onclick");
                    // Ejecutar la función asociada
                    eval(funcion);
                };
            }
        });
    </script>

 @*Menú de Estados*@
<script>
    // Detecta el cambio de selección en el menú de estados
    document.getElementById("estado").addEventListener("change", function () {
        // Obtiene el valor seleccionado del menú de estados
        var estado = document.getElementById("estado").value;

        // Muestra el estado seleccionado en el mapa
        switch (estado) {
            case "ags":
                map.setView([22.025278, -102.372778], 9);
                break;
            case "bc":
                map.setView([30.391389, -115.291389], 7);
                break;
            case "bcs":
                map.setView([26.044444, -112.399722], 7);
                break;
            case "camp":
                map.setView([18.938333, -90.764722], 7);
                break;
            case "coah":
                map.setView([27.158056, -101.719444], 7);
                break;
            case "col":
                map.setView([19.101944, -103.014722], 9);
                break;
            case "chis":
                map.setView([16.753056, -92.6375], 7);
                break;
            case "chih":
                map.setView([28.673611, -106.102222], 7);
                break;
            case "cdmx":
                map.setView([19.432778, -99.133333], 10);
                break;
            case "dgo":
                map.setView([24.865278, -104.902222], 7);
                break;
            case "gto":
                map.setView([20.875, -101.478611], 8);
                break;
            case "gro":
                map.setView([17.814722, -100.353056], 8);
                break;
            case "hgo":
                map.setView([20.5325, -98.870556], 8);
                break;
            case "jal":
                map.setView([20.673611, -103.343333], 8);
                break;
            case "mex":
                map.setView([19.483611, -99.689722], 8);
                break;
            case "mich":
                map.setView([19.699722, -101.191389], 8);
                break;
            case "mor":
                map.setView([18.858611, -99.223611], 9);
                break;
            case "nay":
                map.setView([21.799444, -105.220833], 8);
                break;
            case "nl":
                map.setView([25.649167, -100.443611], 9);
                break;
            case "oax":
                map.setView([16.895833, -96.806667], 8);
                break;
            case "pue":
                map.setView([19.051389, -98.193889], 8);
                break;
            case "qro":
                map.setView([20.854722, -99.847222], 9);
                break;
            case "qroo":
                map.setView([19.642778, -87.072222], 8);
                break;
            case "slp":
                map.setView([22.156944, -100.985556], 8);
                break;
            case "sin":
                map.setView([24.288611, -107.366944], 8);
                break;
            case "son":
                map.setView([29.089444, -110.961667], 7);
                break;
            case "tab":
                map.setView([17.980000, -92.930000], 8);
                break;
            case "tamps":

                map.setView([24.014167, -98.844444], 7);
                break;
            case "tlax":
                map.setView([19.312222, -98.239722], 10);
                break;
            case "ver":
                map.setView([19.546389, -96.914167], 8);
                break;
            case "yuc":
                map.setView([20.891944, -89.528611], 8);
                break;
            case "zac":
                map.setView([22.770833, -102.583611], 8);
                break;
            default:

                map.setView([23.634501, -102.552784], 5);
                break;
        }
    });
</script>



@*Tabs Indicadores EF*@
<script>

    function openTab(event, tabName, sectionId) {

      var i, tabcontent, tablinks;
      tabcontent = document.querySelectorAll(`#${sectionId} .tabcontent`);
      for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
      }
      tablinks = document.querySelectorAll(`#${sectionId} .tablinks`);
      for (i = 0; i < tablinks.length; i++) {
        tablinks[i].classList.remove("active");
      }
      document.getElementById(tabName).style.display = "block";
      event.currentTarget.classList.add("active");

       // En esta sección se cargan los mapas de los indicadores Municipales

            if (tabName === 'div_1') {  // solo para la pestaña que tiene el mapa
            setTimeout(function() {
                mapef_I1.invalidateSize();
            }, 200);
        }
                  if (tabName === 'div_2') {  // solo para la pestaña que tiene el mapa
            setTimeout(function() {
                mapef_I2.invalidateSize();
            }, 200);
        }
                   if (tabName === 'div_3') {  // solo para la pestaña que tiene el mapa
            setTimeout(function() {
                mapef_I3.invalidateSize();
            }, 200);
        }
                   if (tabName === 'div_4') {  // solo para la pestaña que tiene el mapa
            setTimeout(function() {
                mapef_I4.invalidateSize();
            }, 200);
        }
                   if (tabName === 'div_5') {  // solo para la pestaña que tiene el mapa
            setTimeout(function() {
                mapef_I5.invalidateSize();
            }, 200);
        }
                   if (tabName === 'div_6') {  // solo para la pestaña que tiene el mapa
            setTimeout(function() {
                mapef_I6.invalidateSize();
            }, 200);
        }
                   if (tabName === 'div_7') {  // solo para la pestaña que tiene el mapa
            setTimeout(function() {
                mapef_I7.invalidateSize();
            }, 200);
        }
                 if (tabName === 'div_8') {  // solo para la pestaña que tiene el mapa
            setTimeout(function() {
                mapef_I8.invalidateSize();
            }, 200);
        }
                 if (tabName === 'div_9') {  // solo para la pestaña que tiene el mapa
            setTimeout(function() {
                mapef_I9.invalidateSize();
            }, 200);
        }
                 if (tabName === 'div_10') {  // solo para la pestaña que tiene el mapa
            setTimeout(function() {
                mapef_I10.invalidateSize();
            }, 200);
        }
                 if (tabName === 'div_11') {  // solo para la pestaña que tiene el mapa
            setTimeout(function() {
                mapef_I11.invalidateSize();
            }, 200);
        }
                 if (tabName === 'div_12') {  // solo para la pestaña que tiene el mapa
            setTimeout(function() {
                mapef_I12.invalidateSize();
            }, 200);
        }
        //Mapas de Municipios
        if (tabName === 'div_13_mun') {  // solo para la pestaña que tiene el mapa
            setTimeout(function() {
                mapmun.invalidateSize();
            }, 200);
        }
               // En esta sección se cargan los mapas de los indicadores Municipales
        if (tabName === 'div_1_mun') {  
            setTimeout(function() {
                    mapmun_I1.invalidateSize();
            }, 200);
        }
            if (tabName === 'div_2_mun') {
                setTimeout(function () {
                    mapmun_I2.invalidateSize();
                }, 200);
            }

            if (tabName === 'div_3_mun') {
                setTimeout(function () {
                    mapmun_I3.invalidateSize();
                }, 200);
            }

            if (tabName === 'div_4_mun') {
                setTimeout(function () {
                    mapmun_I4.invalidateSize();
                }, 200);
            }

            if (tabName === 'div_5_mun') {
                setTimeout(function () {
                    mapmun_I5.invalidateSize();
                }, 200);
            }

            if (tabName === 'div_6_mun') {
                setTimeout(function () {
                    mapmun_I6.invalidateSize();
                }, 200);
            }

            if (tabName === 'div_7_mun') {
                setTimeout(function () {
                    mapmun_I7.invalidateSize();
                }, 200);
            }

            if (tabName === 'div_8_mun') {
                setTimeout(function () {
                    mapmun_I8.invalidateSize();
                }, 200);
            }

            if (tabName === 'div_9_mun') {
                setTimeout(function () {
                    mapmun_I9.invalidateSize();
                }, 200);
            }

            if (tabName === 'div_10_mun') {
                setTimeout(function () {
                    mapmun_I10.invalidateSize();
                }, 200);
            }

            if (tabName === 'div_11_mun') {
                setTimeout(function () {
                    mapmun_I11.invalidateSize();
                }, 200);
            }

            if (tabName === 'div_12_mun') {
                setTimeout(function () {
                    mapmun_I12.invalidateSize();
                }, 200);
            }


    }  
</script>


@* Evaluación de Check a nivel EF *@
<script>
    $(document).ready(function () {
        // Obtener todos los checkboxes de indicadores
        var indicadorCheckboxes = $("input[name='checkboxes']");

        // Obtener los checkboxes de los indicadores 10 y 11
        var indicador10Checkbox = $("#chk10");
        var indicador11Checkbox = $("#chk11");

        // Obtener el elemento del mensaje de resultado
        var resultMessage = $("#result-message_1");

        // Evento de cambio de selección en los checkboxes de indicadores
        indicadorCheckboxes.change(function () {
            var checkbox = $(this);

            if (checkbox.hasClass("indicador-especial")) {
                // Si se selecciona un checkbox de indicador especial (10 o 11)
                if (checkbox.is(":checked")) {
                    // Desmarcar el otro checkbox de indicador especial
                    if (checkbox.attr("id") === "chk10") {
                        indicador11Checkbox.prop("checked", false);
                    } else if (checkbox.attr("id") === "chk11") {
                        indicador10Checkbox.prop("checked", false);
                    }
                }

                // Mostrar el mensaje de advertencia si ambos checkboxes de indicadores especiales están marcados
                if (indicador10Checkbox.is(":checked") && indicador11Checkbox.is(":checked")) {
                    resultMessage.show();
                } else {
                    resultMessage.show();
                }
            } else {
                // Si se selecciona un checkbox de otro indicador
                if (checkbox.is(":checked")) {
                    // Desmarcar los checkboxes de indicadores especiales
                   // indicador10Checkbox.prop("checked", false);
                   // indicador11Checkbox.prop("checked", false);

                    // Ocultar el mensaje de advertencia
                    resultMessage.hide();
                }
            }
        });

        // Botón Mostrar Resultados Indicadores
        $("#btnMostrar").click(mostrarResultados);

        function mostrarResultados() {

            // Verificamos si el campo 'umbral' está vacío o contiene solo espacios // Se queda en 0 para EF comento validación se ocultará el input 15/06/2023
            //var umbral = $("#umbral").val().trim();
            //if (!umbral || umbral == 0 || umbral > 1) {
            //    $("#result-message").text("¡El campo 'Umbral' no puede estar vacío, llenarse solo con espacios, ni ser cero, ni mayor a 1!").show();
            //    return;
            //}
            // Verificamos si se han seleccionado al menos un checkbox
            if (!$("input[name='checkboxes']:checked").length) {
                $("#result-message").text("¡Debe seleccionar al menos un indicador primero!").show();
                return;
            }
            // Resto del código para mostrar los resultados
            // Iniciamos la barra de progreso
            $(".progress").show();
            $(".progress-bar").css("width", "0%");
            // Ocultamos todos los divs
            $("div[id^='div']").hide();
            // Recorremos los checkboxes y mostramos los divs seleccionados
            var count = $("input[name='checkboxes']:checked").length;
            var progress = 100 / count;
            var progressValue = 0;
            $("input[name='checkboxes']").each(function () {
                if ($(this).prop("checked")) {
                    var idDiv = "#div" + $(this).val();
                    $(idDiv).show();
                    // Aumentamos la barra de progreso
                    progressValue += progress;
                   // $(".progress-bar").css("width", progressValue + "%");
                    $(".progress-bar-nacional").css("width", progressValue + "%");
                }
            });
            // Ocultamos la barra de progreso cuando termina
            setTimeout(function () {
                $(".progress").hide();
                $("div[id^='div']:visible").each(function (index) {
                    var delay = index * 500; // Retrasamos cada div en 500ms
                    $(this).delay(delay).fadeIn(500);
                });
            }, 1000);
            // Ocultamos el botón "Mostrar"
            $("#btnMostrar").hide();

            // Mostramos el mensaje con los indicadores seleccionados
            var message = "Esta evaluación contempla los siguientes indicadores:";
            $("input[name='checkboxes']:checked").each(function () {
                message += " Indicador " + $(this).val();
            });
            $("#result-message").text(message).show();
            // Deshabilitamos los checkboxes
            $("input[name='checkboxes']").prop("disabled", true);

            // Mostramos el botón para habilitar los checkboxes
            $("#btnHabilitar").show();

            // Mostramos el botón de resultados.
            $("#btnResultados").show();
            $("#mostrarSeccionesBtn").show();

            /////////
            // Ocultar todos los tabs
            $(".tablinks.indicator-tab").hide();

            // Recorrer los checkboxes y mostrar los tabs correspondientes
            $("input[name='checkboxes']").each(function () {
                if ($(this).prop("checked")) {
                    var indicatorId = $(this).val();
                    $("#resultados").find(".tablinks.indicator-tab[data-indicator='" + indicatorId + "']").show();
                    $("#resultados").find(".tablinks.indicator-tab[data-indicator='13']").show(); // muestra siempre el tab de calificación
                }
            });

            // Mostramos la sección de resultados
            $("#resultados").show();
            //Mostramos Div Calificacion
            $("#tbcal").show();
            //Muestra los Acordiones 3 y 4
            $("#seccion3").show();
            $("#seccion4").show();
        }

        // Función para habilitar los checkboxes y limpiarlos
        $("#btnHabilitar").click(function () {
            $("input[name='checkboxes']").prop("disabled", false).prop("checked", false);
            $("#result-message").hide();
            $("#btnHabilitar").hide();
            $("#btnMostrar").show();
            $("#resultados").hide();
            // Ocultamos el botón de resultados.
            $("#btnResultados").hide();
            // Ajustamos el valor del umbral a 0
            //$("#umbral").val(0);
            // Ajustamos el valor del slider a 0
           // $("#slider-vertical").slider("value", 0);
            $("#mostrarSeccionesBtn").hide();
            //Oculta los acordiones 3 y 4
            $("#seccion3").hide();
            $("#seccion4").hide();


            //Seccion Municipios
                $("input[name=checkboxes_mun]").prop("disabled", false).prop("checked", false);
                $("#result-message_mun").hide();
                $("#btnHabilitar_mun").hide();
                $("#btnMostrar_mun").show();
                $("#resultados_mun").hide(); // Modificar el selector a #resultados_mun
                // Ocultamos el botón de resultados.
                $("#btnResultados_mun").hide();
                // Ajustamos el valor del umbral a 0
                // $("#umbral_mun").val(0);
                // Ajustamos el valor del slider a 0
                // $("#slider-vertical").slider("value", 0);
                //
                // Ocultamos el Acordion 5: Resultados a Nivel Municipal
                $("#seccion5").hide();


        });

        // Ocultar result-message al cargar la página
        $("#result-message").hide();
    });
</script>


@*Seccion de Calificación Final por EF e Indicadores*@
<script>
    $(document).ready(function () {
        //3.-Sección ver Resultados

        // configuración de la tabla que agrupa resultados por EF
        var table = $('#I_CF').DataTable({
            lengthMenu: [[10, 50, 100, -1], [10, 50, 100, "Todos"]],
            dom: 'Blfrtip',
            buttons: [
                {
                    extend: 'copyHtml5',
                    title: 'MEP-Calificación Final por Entidad Federativa'
                },
                {
                    extend: 'excelHtml5',
                    title: 'MEP-Calificación Final por Entidad Federativa'
                },
                {
                    extend: 'csvHtml5',
                    title: 'MEP-Calificación Final por Entidad Federativa'
                },
                {
                    extend: 'pdfHtml5',
                    title: 'MEP-Calificación Final por Entidad Federativa',
                    customize: function (doc) {
                        // Cambia el color de la línea de encabezado a rojo
                        doc.styles.tableHeader.color = '#9fa1a4';
                        // Centra la tabla
                        doc.defaultStyle.alignment = 'center';
                        // Cambia el color de fondo del encabezado
                        doc.styles.tableHeader.fillColor = '#4c1922'; // Cambia a tu color preferido
                    }
                }
            ],
            columndefs: [{
                targets: [0, 1, 2, 3],
                data: null,
                defaultcontent: "-"
            }],

            columns: [
                { data: "eF_ID" },
                { data: "eF_Nombre" },
                { data: "aprobados" },
                { data: "noAprobados" },
                {
                    data: null,
                    render: function (data, type, row) {
                        //   var efId = $(this).data('efid');
                        var indicadoresSeleccionados = [];
                        $('#misCheckboxes input:checked').each(function () {
                            indicadoresSeleccionados.push($(this).val());
                        });
                        // Construye la cadena de indicadores seleccionados separados por comas
                        var indicadoresCadena = indicadoresSeleccionados.join(',');

                        var umbralSeleccionado = $('#umbral').val();

                        // Construye la URL con los parámetros de consulta
                        var url = '/Indicadores/Detalle_EF?';
                        url += 'efId=' + row.eF_ID;
                        url += '&Indicadores_Seleccionados=' + encodeURIComponent(indicadoresCadena);
                        url += '&Umbral_Seleccionado=' + umbralSeleccionado;

                        // Construye la URL con los parámetros de consulta

                        return '<a class="btn btn-cre-verde" href="' + url + '" target="_blank">Ver detalle</a>';
                    }
                }
            ],
            language: {
                url: '//cdn.datatables.net/plug-ins/1.10.24/i18n/Spanish.json'
            }


        });

        $("#btnMostrar").click(function (event) {
            event.preventDefault(); // Evita que el botón envíe el formulario
            var indicadores_seleccionados = [];
            $('#misCheckboxes input:checked').each(function () {
                indicadores_seleccionados.push($(this).val());
            });

            var datos = {
                Umbral_Seleccionado: $('#umbral').val(),
                Indicadores_Seleccionados: indicadores_seleccionados
            };


            //3.1.-Calificación Nacional Tarjetas y Grafico der PIE
            $.ajax({
                    url: '/Indicadores/calificacion_Nacional',
                    type: 'POST',
                    data: JSON.stringify(datos),
                    contentType: 'application/json',
                    success: function (response) {
                        console.log("ESTE:", response); // Ver la respuesta en la consola

                        // Asignar el resultado a los h2 de las tarjetas
                        $("#nacional_EF").text(response[0].totalEF_ID);
                        $("#nacional_aprobados").text(response[0].totalAprobados);
                        $("#nacional_noaprobados").text(response[0].totalNoAprobados);
                        $("#nacional_ambos").text(response[0].totalAmbos);


                        // Verificar el valor y mostrar u ocultar el div
                            if (response[0].totalAmbos == 0) {
                                $('[data-card="nacional_ambos_card"]').hide(); // Ocultar
                            } else {
                                $('[data-card="nacional_ambos_card"]').show(); // Mostrar
                            }
                        // Crear un arreglo de objetos con las categorías y los valores de los datos para el grafico de PIE
                             var data = [];

                            // Siempre añadir la categoría 'Entidades Federativas con Solicitudes Óptimas'
                            data.push({
                                name: 'Entidades Federativas con Solicitudes en Categoría "A" (No Saturadas)',
                                y: parseInt(response[0].totalAprobados),
                                color: '#59b25d'
                            });

                            // Siempre añadir la categoría 'Entidades Federativas con Solicitudes No Viables'
                            data.push({
                                name: 'Entidades Federativas con Solcicitudes en Categoría "D" (Saturadas)',
                                y: parseInt(response[0].totalNoAprobados),
                                color: '#e63950'
                            });

                            // Añadir la categoría 'Ambos: Con Solicitudes de Óptimas y No Viables' solo si el valor es diferente de 0
                            if (parseInt(response[0].totalAmbos) !== 0) {
                                data.push({
                                    name: 'Entidades Federativas con Categorías "A" y "D"',
                                    y: parseInt(response[0].totalAmbos),
                                    color: '#d4af37'
                                });
                            }


                        // Calcular el total de los valores
                        var total = data.reduce(function (sum, point) {
                            return sum + point.y;
                        }, 0);

                        // Agregar porcentaje y total formateado a cada punto de datos
                        data.forEach(function (point) {
                            var percentage = ((point.y / total) * 100).toFixed(2); // Calcular el porcentaje
                            point.percentage = percentage;
                            point.totalFormatted = point.y.toLocaleString('es-ES'); // Formatear el total con separadores de miles y configuración regional 'es-ES'
                        });

                        var options = {
                            chart: {
                                type: 'pie'
                            },
                            title: {
                                text: 'Evaluación de las Solicitudes a nivel Entidad Federativa'
                            },
                            series: [{
                                name: 'Total',
                                data: data
                            }],
                            colors: ['#59b25d', '#e63950', '#d4af37'],
                            plotOptions: {
                                pie: {
                                    dataLabels: {
                                        enabled: true,
                                        format: '<b>{point.name}</b>: {point.percentage:.1f}%',
                                        style: {
                                            fontSize: '18px' // Aumenta el tamaño de la letra aquí
                                        }
                                    }
                                }
                            }
                        };


                        // Renderizar el gráfico en el contenedor con el ID 'grafico1'
                        Highcharts.chart('grafico1', options);




                    },
                    error: function (error) {
                        // Manejar el error si ocurre.
                    }
                });

            //3.2-Totales
            $.ajax({
                url: '/Indicadores/calificacion_Total',
                type: 'POST',
                data: JSON.stringify(datos),
                contentType: 'application/json',
                success: function (response) {
                    console.log(response); // Ver la respuesta en la consola

                    // Asignar el resultado a los inputs
                    $("#aprobados").val(response[0].aprobados);
                    $("#noAprobados").val(response[0].noAprobados);
                    $("#total").val(parseInt(response[0].aprobados) + parseInt(response[0].noAprobados));
                },
                error: function (error) {
                    // Manejar el error si ocurre.
                }
            });


            //3.3-Tabla y Grafico por EF (agrupados)
            $.ajax({
                url: '/Indicadores/calificacion_EF',
                type: 'POST',
                data: JSON.stringify(datos),

                contentType: 'application/json',
                success: function (response) {
                    console.log(response); // ver la respuesta en consola

                    // Filtrar los valores mayores a cero en la columna "aprobados"
                    //response = response.filter(function (row) {
                    //    return row.aprobados > 0;
                    //});
                    /**************** */
                    table.clear();
                    table.rows.add(response);
                    table.draw();
                    $('#I_CF').show();

                    // Crear arreglos para las categorías, los datos de aprobados y los datos de no aprobados
                    // Crear arreglos para las categorías, los datos de aprobados y los datos de no aprobados
                    var categories = [];
                    var dataAprobados = [];
                    var dataNoAprobados = [];

                    // Iterar sobre la respuesta para llenar los arreglos
                    for (var i = 0; i < response.length; i++) {
                        categories.push(response[i].eF_Nombre);
                        dataAprobados.push(parseInt(response[i].aprobados));
                        dataNoAprobados.push(parseInt(response[i].noAprobados));
                    }

                    // Configurar opciones del gráfico
                    var options = {
                        chart: {
                            type: 'column'
                            //options3d: {
                            //    enabled: true,
                            //    alpha: 10,
                            //    beta: 25,
                            //    depth: 70
                            //}
                            
                        },
                        title: {
                            text: 'Detalle por Entidad Federativa'
                        },
                        xAxis: {
                            categories: categories
                        },
                        yAxis: {
                            title: {
                                text: 'Cantidad'
                            }
                        },
                        plotOptions: {
                            column: {
                                stacking: 'normal',
                                depth: 40,
                                    dataLabels: {
                                        enabled: true,
                                        color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                                        //style: {
                                        //    textShadow: '0 0 3px black'
                                        //}
                                    }
                            }
                        },
                        series: [
                            {
                                name: 'Categóría "A" (No Saturadas)',
                                data: dataAprobados,
                                color: '#59b25d'
                            },
                            {
                                name: 'Categoría "D" (Saturadas)',
                                data: dataNoAprobados,
                                color: '#e63950'
                            }
                        ],
                            colors: ['#59b25d', '#e63950'],
                        tooltip: {
                            formatter: function () {
                                return '<b>' + this.x + '</b><br/>' +
                                    this.series.name + ': ' + this.y;
                            }
                        }
                    };

                    // Renderizar el gráfico en el contenedor con el ID 'grafico'
                    Highcharts.chart('grafico', options);



                },
                error: function (error) {
                    // Maneja el error si ocurre.
                }
            });



        });
    });
</script>

@*Indicadores Tablas *@
<script>

    $(document).ready(function () {

        var dataTableOptions = {
            lengthMenu: [[10, 50, 100, -1], [10, 50, 100, "Todos"]],
            dom: 'Bfrtip',
            buttons: [
                'copyHtml5',
                'excelHtml5',
                'csvHtml5',
                'pdfHtml5'
            ],
            language: {
                    url: '//cdn.datatables.net/plug-ins/1.10.24/i18n/Spanish.json'
            },

        };

        var indicadores = ['#I_1', '#I_2', '#I_3', '#I_4', '#I_5', '#I_6', '#I_7', '#I_8', '#I_9', '#I_10', '#I_11', '#I_12','#ICM'];

        indicadores.forEach(function (indicador) {
            $(indicador).DataTable(dataTableOptions);
        });
    });
</script>

@*DuctosMUN*@
<script>
    function Ductospetmun(){
        function pop_ductos_petroliferos_4326_0(feature, layer) {
            // Variables para almacenar las coordenadas de clic
            let clickedLat, clickedLon;
            function updatePopupContent(){
                var popupContent = '<table>\
                                <tr>\
                                    <th scope="row">Región: </th>\
                                    <td>' + (feature.properties['regin'] !== null ? autolinker.link(feature.properties['regin'].toLocaleString()) : '') + '</td>\
                                </tr>\
                                <tr>\
                                    <th scope="row">Ducto: </th>\
                                    <td>' + (feature.properties['ducto'] !== null ? autolinker.link(feature.properties['ducto'].toLocaleString()) : '') + '</td>\
                                </tr>\
                                <tr>\
                                    <th scope="row">Servicio: </th>\
                                    <td>' + (feature.properties['servicio'] !== null ? autolinker.link(feature.properties['servicio'].toLocaleString()) : '') + '</td>\
                                </tr>\
                                <tr>\
                                    <th scope="row">Longitud (km): </th>\
                                    <td>' + (feature.properties['longitud_'] !== null ? autolinker.link(feature.properties['longitud_'].toLocaleString()) : '') + '</td>\
                                </tr>\
                                <tr>\
                                    <th scope="row">Capacidad nominal (B): </th>\
                                    <td>' + (feature.properties['capa_n'] !== null ? autolinker.link(feature.properties['capa_n'].toLocaleString()) : '') + '</td>\
                                </tr>\
                                <tr>\
                                    <th scope="row">Capacidad opertiva (B): </th>\
                                    <td>' + (feature.properties['capa_o'] !== null ? autolinker.link(feature.properties['capa_o'].toLocaleString()) : '') + '</td>\
                                </tr>\
                                <tr>\
                                    <td><a class="street-view-link btn btn-cre-verde" href="http://maps.google.com/maps?q=&layer=c&cbll=' + clickedLat + ',' + clickedLon + '&cbp=11,0,0,0,0" target="_blank"><b> Ver vista de calle </b></a></td>\
                                </tr>\
                            </table>';
                layer.bindPopup(popupContent, { maxHeight: 400 }).openPopup();
            }
            // Evento para capturar clics en el mapa dentro del área del feature
            layer.on('click', function (e) {
                clickedLat = e.latlng.lat.toPrecision(8);
                clickedLon = e.latlng.lng.toPrecision(8);
                updatePopupContent();
            });
        }

        function style_ductos_petroliferos_4326_0_0() {
            return {
                pane: 'pane_ductos_petroliferos_4326_0',
                opacity: 1,
                    color: '#a77c50',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 4.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        mapmun.createPane('pane_ductos_petroliferos_4326_0');
        mapmun.getPane('pane_ductos_petroliferos_4326_0').style.zIndex = 400;
        mapmun.getPane('pane_ductos_petroliferos_4326_0').style['mix-blend-mode'] = 'normal';
        var layer_ductos_petroliferos_4326_0 = new L.geoJson(json_ductos_petroliferos_4326_0, {
            attribution: '',
            interactive: true,
            dataVar: 'json_ductos_petroliferos_4326_0',
            layerName: 'layer_ductos_petroliferos_4326_0',
            pane: 'pane_ductos_petroliferos_4326_0',
            onEachFeature: pop_ductos_petroliferos_4326_0,
            style: style_ductos_petroliferos_4326_0_0,
        });
        bounds_group.addLayer(layer_ductos_petroliferos_4326_0);
        mapmun.addLayer(layer_ductos_petroliferos_4326_0);
        setBounds();
        }
    </script>


@* Evaluación a Nivel Municipal *@
<script>
            $("#btnMostrar_mun").click(mostrarResultados_mun);

            function mostrarResultados_mun() {

                // Verificamos si el campo 'umbral' está vacío o contiene solo espacios
                var umbral = $("#umbral_mun").val().trim();
                if (!umbral || umbral == 0 || umbral > 1) {
                    $("#result-message_mun").text("¡El campo 'Umbral' no puede estar vacío, llenarse solo con espacios, ni ser cero, ni mayor a 1!").show();
                    return;
                }


                // Verificamos si se han seleccionado al menos un checkbox del municipio
                if (!$("input[name=checkboxes_mun]:checked").length) {
                    $("#result-message_mun").text("¡Debe seleccionar al menos un indicador primero!").show();
                    return;
                }

                // Resto del código para mostrar los resultados
                // Iniciamos la barra de progreso municipio
                $(".progress").show();
                $(".progress-bar").css("width", "0%");
                // Ocultamos todos los divs
                $("div[id^='div']").hide();
                // Recorremos los checkboxes y mostramos los divs seleccionados
                var count = $("input[name='checkboxes']:checked").length;
                var progress = 100 / count;
                var progressValue = 0;
                $("input[name='checkboxes']").each(function () {
                    if ($(this).prop("checked")) {
                        var idDiv = "#div" + $(this).val();
                        $(idDiv).show();
                        // Aumentamos la barra de progreso
                        progressValue += progress;
                        //$(".progress-bar").css("width", progressValue + "%");
                        $(".progress-bar-municipal").css("width", progressValue + "%");
                    }
                });
                // Ocultamos la barra de progreso cuando termina
                setTimeout(function () {
                    $(".progress").hide();
                    $("div[id^='div']:visible").each(function (index) {
                        var delay = index * 500; // Retrasamos cada div en 500ms
                        $(this).delay(delay).fadeIn(500);
                    });
                }, 1000);

                // Ocultamos el botón "Mostrar"
                $("#btnMostrar_mun").hide();

                // Mostramos el mensaje con los indicadores seleccionados
                var message =
                    "Este es el resultado con los siguientes indicadores seleccionados:";
                $("input[name=checkboxes_mun]:checked").each(function () {
                    message += " Indicador " + $(this).val();
                });
                $("#result-message_mun").text(message).show();
                // Deshabilitamos los checkboxes
                $("input[name=checkboxes_mun]").prop("disabled", true);

                // Mostramos el botón para habilitar los checkboxes
                $("#btnHabilitar_mun").show();

                // Mostramos el botón de resultados.
                $("#btnResultados_mun").show();


                /////////
                // Ocultar todos los tabs
                $(".tablinks.indicator-tab-mun").hide();

                // Recorrer los checkboxes y mostrar los tabs correspondientes
                $("input[name=checkboxes_mun]").each(function () {
                    if ($(this).prop("checked")) {
                        var indicatorId = $(this).val();
                       //Si se desomenta la siguiente Linea se muestran los Tabs d elos Indicadores Seleccionados queda  en by pass de momento
                        // $("#resultados_mun").find(".indicator-tab-mun[data-indicator='" + indicatorId + "']").show();

                        //$("#resultados_mun").find(".tablinks.indicator-tab-mun[data-indicator='" + indicatorId + "']").show();
                      ///////////////*****************TAB CALIFICACION*/
                       // $("#resultados_mun").find(".tablinks.indicator-tab-mun[data-indicator='13']").show();//muestra siempre el tab de calificación
                    }
                });

                //Mostramos el Acordion 5: Resultados a Nivel Municipal
                $("#seccion5").show();
                // Mostramos la sección de resultados
                $("#resultados_mun").show();
                //Mostramos Div Calificacion
                $("#tbcal_mun").show();

            }

            // Función para habilitar los checkboxes y limpiarlos
        $("#btnHabilitar_mun").click(function () {
            $("input[name=checkboxes_mun]").prop("disabled", false).prop("checked", false);
            $("#result-message_mun").hide();
            $("#btnHabilitar_mun").hide();
            $("#btnMostrar_mun").show();
            $("#resultados_mun").hide(); // Modificar el selector a #resultados_mun
            // Ocultamos el botón de resultados.
            $("#btnResultados_mun").hide();
            // Ajustamos el valor del umbral a 0
            // $("#umbral_mun").val(0);
            // Ajustamos el valor del slider a 0
            // $("#slider-vertical").slider("value", 0);
            //
            // Ocultamos el Acordion 5: Resultados a Nivel Municipal
            $("#seccion5").hide();
        });

        // Ocultar result-message al cargar la página
        $(document).ready(function () {
            $("#result-message_mun").css("display", "none");
        });

</script>

@*Seccion de Calificación Final por Municipio e Indicadores Municipales*@
    <script>
        $(document).ready(function () {
            // Guarda la referencia a la tabla
            //       var table_mun = $('#I_CF_MUN').DataTable({
            //              pageLength: -1, // Mostrar todos los elementos
            // Paso 1: Define un tipo de ordenamiento personalizado para las fechas
            $.fn.dataTable.ext.type.order['date-euro-pre'] = function (d) {
                var dateParts = d.split('/');
                return new Date(dateParts[2], dateParts[1] - 1, dateParts[0]);
            };

            //            lengthMenu: [], // Eliminar las opciones de longitud
            var table_mun = $('#I_CF_MUN').DataTable({
                lengthMenu: [[10, 50, 100, -1], [10, 50, 100, "Todos"]],
                dom: 'Blfrtip',
                buttons: [
                    {
                        extend: 'copyHtml5',
                         title: 'Energeo-Calificación Final'
                    },
                    {
                        extend: 'excelHtml5',
                          title: 'Energeo-Calificación Final'
                    },
                    {
                        extend: 'csvHtml5',
                          title: 'Energeo-Calificación Final'
                    },
                    {
                        extend: 'pdfHtml5',
                        title: 'Energeo-Calificación Final',
                        customize: function (doc) {
                            // Cambia el color de la línea de encabezado a rojo
                            doc.styles.tableHeader.color = '#9fa1a4';
                            // Centra la tabla
                            doc.defaultStyle.alignment = 'center';
                            // Cambia el color de fondo del encabezado
                            doc.styles.tableHeader.fillColor = '#4c1922'; // Cambia a tu color preferido
                        }
                    }
                ],
                columnDefs: [{
                    targets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,13 ,14 ,15],
                    //targets: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45],


                    data: null,
                    defaultContent: "-"
                }],
                columns: [
                    { data: "id" },
                    { data: "turno" },
               
                    {
                        data: null, 
                        render: function(data, type, row) {
                            if (row.categoria == 'Óptimo') {
                                return 'A';
                            } else if (row.categoria == 'No Viable a Nivel Municipal') {
                                return 'C';
                            } else if (row.categoria == 'Viable') {
                                return 'B';
                            } else if (row.categoria == 'No Viable a Nivel Entidad Federativa') {
                                return 'D';
                            } else {
                                return '-';  // Por si hay algún otro valor no contemplado
                            }
                        },title: "Categoria"
                    },
                      {
            data: null,
            render: function(data, type, row) {
                let calificacion;
                if (row.categoria == 'Óptimo') {
                    calificacion = '1';
                } else if (row.categoria == 'No Viable a Nivel Municipal') {
                    calificacion = '0.5';
                } else if (row.categoria == 'Viable') {
                    calificacion = '0.75';
                } else if (row.categoria == 'No Viable a Nivel Entidad Federativa') {
                    calificacion = '0.25';
                } else {
                    calificacion = '-';
                }

                // Agrega el botón si la calificación es 0.25
                if (calificacion === '0.25') {
                    return `${calificacion} <button class='btn btn-danger btn-sm' onclick='redireccionarAEvaluacion(${row.id}, "Petroliferos")'>Acción Adicional;Evaluar Solicitud a Nivel Localidad</button>`;
                } else {
                    return calificacion;
                }
            },
            title: "Calificación"
        },
                    { data: "razon_social" },
                    { data: "marca_solicitada" },
                    
                    { 
                        data: "fecha_solicitud",
                         render: function(data, type, row) {
                            // Dividir la fecha y la hora
                            var dateParts = data.split(" ");
                            // Dividir la fecha en año, mes y día
                            var fecha = dateParts[0].split("/");
                            // Cambiar el formato a día-mes-año
                          //  return fecha[2] + "/" + fecha[1] + "/" + fecha[0];
                            return fecha[1] + "/" + fecha[0] + "/" + fecha[2];
                        },
                        
                     type: 'date-euro'//ordenamiento
                    },
                    { data: "expediente" },
                    { data: "eF_ID" },
                    { data: "eF_Nombre" },
                    { data: "mpO_ID" },
                    { data: "municipio_Nombre" },
                    { data: "analisis_riesgo" },
                    { data: "documentos_completos" },
                    { data: "x_Geo" },
                    { data: "y_Geo" },
                
                    //{ data: "umbral_P1" },
                    //{ data: "columnasSeleccionadas_P1" },
                    //{ data: "totalColumnas" },
                    //{ data: "sumaTotal" },
                    //{ data: "factor" },
                    //{ data: "resultado" },
                    //{ data: "_2023_01" },
                    //{ data: "_2023_02" },
                    //{ data: "_2023_03" },
                    //{ data: "_2023_04" },
                    //{ data: "_2023_05" },
                    //{ data: "_2023_06" },
                    //{ data: "_2023_07" },
                    //{ data: "_2023_08" },
                    //{ data: "_2023_09" },
                    //{ data: "_2023_10" },
                    //{ data: "_2023_11" },
                    //{ data: "_2023_12" },
                    //{ data: "umbralMunicipio_P1" },
                    //{ data: "columnasSeleccionadasMunicipio_P1" },
                    //{ data: "totalColumnasMunicipio" },
                    //{ data: "sumaTotalMunicipio" },
                    //{ data: "factorMunicipio" },
                    //{ data: "resultadoMunicipio" },
                    //{ data: "_2023_01_m" },
                    //{ data: "_2023_02_m" },
                    //{ data: "_2023_03_m" },
                    //{ data: "_2023_04_m" },
                    //{ data: "_2023_05_m" },
                    //{ data: "_2023_06_m" },
                    //{ data: "_2023_08_m" },
                    

                    //{
                    //    data: null,
                    //    render: function (data, type, row) {
                    //        //   var efId = $(this).data('efid');
                    //        var indicadoresSeleccionados = [];
                    //        $('#misCheckboxes_mun input:checked').each(function () {
                    //            indicadoresSeleccionados.push($(this).val());
                    //        });
                    //        // Construye la cadena de indicadores seleccionados separados por comas
                    //        var indicadoresCadena = indicadoresSeleccionados.join(',');

                    //        var umbralSeleccionado = $('#umbral_mun').val();

                    //        // Construye la URL con los parámetros de consulta
                    //        var url = '/Indicadores/Detalle_EF?';
                    //        url += 'efId=' + row.eF_ID;
                    //        url += '&Indicadores_Seleccionados=' + encodeURIComponent(indicadoresCadena);
                    //        url += '&Umbral_Seleccionado=' + umbralSeleccionado;

                    //        // Construye la URL con los parámetros de consulta

                    //        return '<a class="btn btn-cre-verde" href="' + url + '" target="_blank">Ver detalle</a>';
                    //    }
                    //}
                ],
                createdRow: function (row, data, dataIndex) {
                   
                   // Cambiar el color de la celda y el valor en la columna "Categoría"
                        var cell = $('td', row).eq(2); // Acceder a la celda de la columna "Categoría"
    
                        if (data.categoria == 'Óptimo') {
                            //cell.css('background-color', '#97d96d');
                            //cell.css('color', 'white');
                            cell.text('A'); // Reemplazar el valor con '1'
                        } else if (data.categoria == 'No Viable a Nivel Municipal') {
                            //cell.css('background-color', '#e63950');
                            //cell.css('color', 'white');
                            cell.text('C'); // Reemplazar el valor con '3'
                        } else if (data.categoria == 'Viable') {
                            //cell.css('background-color', '#f2cf44');
                            //cell.css('color', 'white');
                            cell.text('B'); // Reemplazar el valor con '2'
                        } else if (data.categoria == 'No Viable a Nivel Entidad Federativa') {
                            //cell.css('background-color', '#9f2241');
                            //cell.css('color', 'white');
                            cell.text('D'); // Reemplazar el valor con '4'
                        }

                    // Índices de las columnas a evaluar
                   // var columnIndices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32];
                    //columnIndices.forEach(function (index) {
                    //    var cellValue = $('td', row).eq(index).text();
                    //    if (cellValue == "1") {
                    //        $('td', row).eq(index).css('background-color', '#97d96d');
                    //        $('td', row).eq(index).css('color', 'white');
                    //    } else if (cellValue == "0") {
                    //        $('td', row).eq(index).css('background-color', '#f2cf44');
                    //        $('td', row).eq(index).css('color', 'white');
                    //    } else if (cellValue == "-1") {
                    //        $('td', row).eq(index).css('background-color', '#e63950');
                    //        $('td', row).eq(index).css('color', 'white');
                    //    }
                    //});



                },
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.10.24/i18n/Spanish.json'
                }
            });

            $("#btnMostrar_mun").click(function (event) {
                event.preventDefault(); // Evita que el botón envíe el formulario
                var indicadores_seleccionados_nal = [];
                $('#misCheckboxes input:checked').each(function () {
                    indicadores_seleccionados_nal.push($(this).val());
                });

                var indicadores_seleccionados_mun = [];
                $('#misCheckboxes_mun input:checked').each(function () {
                    indicadores_seleccionados_mun.push($(this).val());
                });

                var datos_mun = {
                    Umbral_Seleccionado_Nal: $('#umbral').val(),
                    Indicadores_Seleccionados_Nal: indicadores_seleccionados_nal,
                    Umbral_Seleccionado_Mun: $('#umbral_mun').val(),
                    Indicadores_Seleccionados_Mun: indicadores_seleccionados_mun

                    //DEBEN LLAMARSE IGUAL EN LA CLASE CLASE CALIFICACION FINAL
                };
                //    alert(JSON.stringify(datos_mun));
                console.log("Datos Municipio Nacional:", datos_mun);

                // Tabla de Resultados
                $.ajax({
                    url: '/Indicadores/calificacion_MUN',
                    type: 'POST',
                    data: JSON.stringify(datos_mun),

                    contentType: 'application/json',
                    success: function (response) {
                        console.log("Salida store MUN:", response); // ver la respuesta en consola

                        //Totales
                        // Obtener los datos de la columna 'categoria'
                        var categorias = response.map(function (item) {
                            return item.categoria;
                        });

                        // Contar las ocurrencias de cada categoría
                        var conteoOptimo = categorias.filter(function (categoria) {
                            return categoria === 'Óptimo';
                        }).length;
                        var conteoViable = categorias.filter(function (categoria) {
                            return categoria === 'Viable';
                        }).length;
                        var conteoFactible = categorias.filter(function (categoria) {
                            return categoria === 'No Viable a Nivel Municipal';
                        }).length;
                        var conteoNoviable = categorias.filter(function (categoria) {
                           return categoria === 'No Viable a Nivel Entidad Federativa';
                        }).length;


                        // Asignar los totales a los elementos de los IDs correspondientes
                        document.getElementById('optimo').value = conteoOptimo;
                        document.getElementById('factible').value = conteoFactible;
                        document.getElementById('noviablemun').value = conteoNoviable;
                        document.getElementById('viable').value = conteoViable;
                        document.getElementById('totalmun').value = categorias.length;



                        // Filtrar los valores mayores a cero en la columna "aprobados"
                        //response = response.filter(function (row) {
                        //    return row.aprobados > 0;
                        //});
                        /**************** */
                        table_mun.clear().rows.add(response).draw();
                        $('#I_CF_MUN').show();

                        // Crear un objeto para almacenar los totales de cada categoría por cada eF_Nombre
                            var totalsByEntity = {};

                            // Iterar sobre la respuesta para llenar el objeto
                            for (var i = 0; i < response.length; i++) {
                                var entityName = response[i].eF_Nombre;
                                var category = response[i].categoria;

                                // Si la entidad no está en el objeto, añádela
                                if (!(entityName in totalsByEntity)) {
                                    totalsByEntity[entityName] = {
                                        'Óptimo': 0,
                                        'No Viable a Nivel Municipal': 0,
                                        'No Viable a Nivel Entidad Federativa': 0,
                                        'Viable': 0
                                    };
                                }

                                // Incrementar el total para la categoría correspondiente
                                totalsByEntity[entityName][category] += 1;
                            }

                            // Ordenar el objeto totalsByEntity por sus claves (eF_Nombre)
                            var orderedTotalsByEntity = Object.keys(totalsByEntity).sort().reduce(
                                function (accumulator, currentKey) {
                                    accumulator[currentKey] = totalsByEntity[currentKey];
                                    return accumulator;
                                }, {}
                            );

                            // Ahora que tenemos los totales por entidad, podemos construir las series para Highcharts
                            var categories = [];
                            var series = [
                                {
                                    name: 'Categoría "A"',
                                    data: [],
                                    color: '#97d96d' // Asignar el color para la categoría 'Óptimo'
                                },
                                {
                                    name: 'Categoría "B"',
                                    data: [],
                                    color: '#f2cf44' // Asignar el color para la categoría 'Viable'
                                },
                                {
                                    name: 'Categoría "C"',
                                    data: [],
                                    color: '#e63950' // Asignar el color para la categoría 'Factible'
                                },
                                {
                                    name: 'Categoría "D"',
                                    data: [],
                                    color: '#9f2241' // Asignar el color para la categoría 'No Viable'
                                }
                            ];

                            // Llenar las series y las categorías con el objeto ordenado
                            for (var entity in orderedTotalsByEntity) {
                                categories.push(entity);

                                series[0].data.push(orderedTotalsByEntity[entity]['Óptimo']);
                                series[1].data.push(orderedTotalsByEntity[entity]['No Viable a Nivel Municipal']);
                                series[2].data.push(orderedTotalsByEntity[entity]['Viable']);
                                series[3].data.push(orderedTotalsByEntity[entity]['No Viable a Nivel Entidad Federativa']);
                            }

                            // Configurar opciones del gráfico
                            var options = {
                                chart: {
                                    type: 'column'
                                },
                                title: {
                                    text: 'Calificación Final por Entidad Federativa'
                                },
                                xAxis: {
                                    title: {
                                        text: 'Entidad Federativa'
                                    },
                                    categories: categories
                                },
                                yAxis: {
                                    title: {
                                        text: 'Cantidad'
                                    }
                                },
                                plotOptions: {
                                    column: {
                                        stacking: 'normal',
                                        dataLabels: {
                                            enabled: true,
                                            format: '{point.y}',
                                            style: {
                                                textOutline: false
                                            }
                                        }
                                    }
                                },
                                series: series,
                                tooltip: {
                                    formatter: function () {
                                        return '<b>' + this.x + '</b><br/>' +
                                            this.series.name + ': ' + this.y;
                                    }
                                }
                            };

                            // Renderizar el gráfico en el contenedor con el ID 'grafico_mun_1'
                            Highcharts.chart('grafico_mun_1', options);






                        // Crear un objeto para almacenar los totales de cada categoría por cada marca_solicitada
                        var totalsByMarca = {};

                        // Iterar sobre la respuesta para llenar el objeto
                        for (var i = 0; i < response.length; i++) {
                            var marca = response[i].marca_solicitada;
                            var category = response[i].categoria;

                            // Si la marca no está en el objeto, añádela
                            if (!(marca in totalsByMarca)) {
                                totalsByMarca[marca] = {
                                    'Óptimo': 0,
                                    'No Viable a Nivel Municipal': 0,
                                    'No Viable a Nivel Entidad Federativa': 0,
                                    'Viable': 0
                                };
                            }

                            // Incrementar el total para la categoría correspondiente
                            totalsByMarca[marca][category] += 1;
                        }

                        // Ahora que tenemos los totales por marca, podemos construir las series para Highcharts
                        var categories = [];
                        var series = [
                            {
                                name: 'Categoría "A"',
                                data: [],
                                color: '#97d96d', // Asignar el color para la categoría 'Óptimo'
                                fillColor: {
                                    linearGradient: [0, 0, 0, 300],
                                    stops: [
                                        [0, '#97d96d'],
                                        [1, 'rgba(151, 217, 109, 0)']
                                    ]
                                }
                            },
       
                            {
                                name: 'Categoría "B"',
                                data: [],
                                color: '#f2cf44', // Asignar el color para la categoría 'Viable'
                                fillColor: {
                                    linearGradient: [0, 0, 0, 300],
                                    stops: [
                                        [0, '#f2cf44'],
                                        [1, 'rgba(242, 207, 68, 0)']
                                    ]
                                }
                            },
                            {
                                name: 'Categoría "C"',
                                data: [],
                                color: '#e63950', // Asignar el color para la categoría 'Factible'
                                fillColor: {
                                    linearGradient: [0, 0, 0, 300],
                                    stops: [
                                        [0, '#e63950'],
                                        [1, 'rgba(253, 184, 118, 0)']
                                    ]
                                }
                            },
                            {
                                name: 'Categoría "D"',
                                data: [],
                                color: '#9f2241', // Asignar el color para la categoría 'No Viable'
                                fillColor: {
                                    linearGradient: [0, 0, 0, 300],
                                    stops: [
                                        [0, '#9f2241'],
                                        [1, 'rgba(230, 57, 80, 0)']
                                    ]
                                }
                            }
                        ];

                        // Llenar las series y las categorías
                        for (var marca in totalsByMarca) {
                            categories.push(marca);

                            series[0].data.push(totalsByMarca[marca]['Óptimo']);
                            series[1].data.push(totalsByMarca[marca]['No Viable a Nivel Municipal']);
                            series[2].data.push(totalsByMarca[marca]['Viable']);
                            series[3].data.push(totalsByMarca[marca]['No Viable a Nivel Entidad Federativa']);
                        }

                        // Configurar opciones del gráfico
                        var options = {
                            chart: {
                                type: 'line'
                            },
                            title: {
                                text: 'Calificación Final por Marca Solicitada'
                            },
                            xAxis: {
                                title: {
                                    text: 'Marca Solicitada'
                                },
                                categories: categories
                            },
                            yAxis: {
                                title: {
                                    text: 'Cantidad'
                                },
                                type: 'logarithmic'
                            },
                            plotOptions: {
                                line: { // Cambiar 'area' por 'line'
                                    lineWidth: 1,
                                    marker: {
                                        lineWidth: 1,
                                        lineColor: '#d7dcdf'
                                    },
                                    dataLabels: {
                                        enabled: true,
                                        format: '{point.y}',
                                        style: {
                                            textOutline: false
                                        }
                                    }
                                }
                            },
                            series: series,
                            tooltip: {
                                formatter: function () {
                                    return '<b>' + this.x + '</b><br/>' +
                                        this.series.name + ': ' + this.y;
                                }
                            }
                        };

                        // Renderizar el gráfico en el contenedor con el ID 'grafico_mun_1'
                        Highcharts.chart('grafico_mun_0', options);



                        //Mapa de Resultados/////////////////////////////////////////////////////////////////////
                        function CargaSolicitudesmun() {
                            // Crea un grupo de marcadores
                            var markers = L.markerClusterGroup();
                            // Crea los iconos
                            var iconoBase = L.Icon.extend({
                                options: {
                                    iconSize: [24, 24],
                                    iconAnchor: [12, 16],
                                    popupAnchor: [-3, -76]
                                }
                            });

                            var iconoOptimo = new iconoBase({ iconUrl: '/img/Aprobado.png' }),
                                iconoViable = new iconoBase({ iconUrl: '/img/viable.png' }),
                                iconoFactible = new iconoBase({ iconUrl: '/img/NoviableMun.png' });
                                iconoNoViable = new iconoBase({ iconUrl: '/img/NoAprobado.png' });

                            // Añade marcadores al grupo para cada conjunto de coordenadas en la respuesta
                            response.forEach(function (item) {
                                // Asigna el icono de acuerdo a la categoría
                                var iconoActual;
                                var iconoActualUrl;
                                if (item.categoria == "Óptimo") {
                                    iconoActual = iconoOptimo;
                                    iconoActualUrl = '/img/Aprobado.png';
                                } else if (item.categoria == "Viable") {
                                    iconoActual = iconoViable;
                                    iconoActualUrl = '/img/viable.png';
                                } else if (item.categoria == "No Viable a Nivel Municipal") {
                                    iconoActual = iconoFactible;
                                    iconoActualUrl = '/img/NoviableMun.png';

                                } else if (item.categoria == "No Viable a Nivel Entidad Federativa") {
                                    iconoActual = iconoNoViable;
                                    iconoActualUrl = '/img/NoAprobado.png';

                                }                              
                                else {
                                    iconoActual = iconoNoViable; // default icon
                                    iconoActualUrl = '/img/NoAprobado.png';
                                }

                                var marker = L.marker([item.x_Geo, item.y_Geo], { icon: iconoActual });
                                 var botonEvaluar = iconoActualUrl === '/img/NoAprobado.png'
                                 ? "<button class='btn btn-cre-azul' onclick='redireccionarAEvaluacion(" + item.id + ", \"Petroliferos\")'>Acción Adicional: ¡Evaluar a Nivel Barrio!</button> <hr />"
                                 : "";


                                marker.bindPopup(
                                    "<style>" +
                                    ".popup-content {" +
                                    "width: 300px;" +
                                    "height: 150px;" +
                                    "overflow-y: auto;" +
                                    "padding: 10px;" +
                                    "}" +
                                    "h2, h3, h4, p, li {" +
                                    "margin: 0 0 10px 0;" +
                                    "}" +
                                    "ul {" +
                                    "padding-left: 20px;" +
                                    "}" +
                                    "img {" +
                                    "vertical-align: middle;" +
                                    "margin-right: 10px;" +
                                    "}" +
                                    "</style>" +
                                    "<div class='popup-content'>" +
                                    "<h2 class='subtitulo'><img src='" + iconoActualUrl + "' style='height: 24px; width: 24px;'/><strong>" + item.razon_social + "</strong></h2>" +
                                    "<br>" +
                                    "<h6><i class='bi bi-fuel-pump''></i> Marca Solicitada: " + item.marca_solicitada + "</h6>" +
                                    //"<h6><strong>Fecha de Solicitud:</strong> " + item.fecha + "</h6>" +
                                    "<h6><i class='bi bi-qr-code'></i> Turno de Kmis: " + item.turno + "</h6>" +
                                    "<h6><i class='bi bi-fingerprint'></i> ID Solicitud: " + item.id + "</h6>" +
                                    "<p><i class='bi bi-geo-alt-fill'></i> Entidad Federativa: " + item.eF_Nombre + "</p>" +
                                    "<ul>" +
                                    "<li><strong>Municipio:</strong> " + item.municipio_Nombre + "</li>" +
                                    "<li><strong>¿Documentos Completos?:</strong> " + (item.documentos_completos == "1" ? 'Sí' : 'No') + "</li>" +
                                    "<li><strong>¿Tiene Análisis de Riesgo?:</strong> " + (item.analisis_riesgo == "1" ? 'Sí' : 'No') + "</li>" +
                                    "</ul>" +
                                     botonEvaluar +
                                    "<button class='btn btn-cre-amarillo' onclick='redireccionarADetalle(" + item.id + ")'>Ver Expendios Cercanos a Solicitud y Parque Vehicular</button>  <hr />" +
                                    "<a class='street-view-link btn btn-cre-verde' href='#'>Ver vista de calle</a> <hr />" +
                                    "<a class='btn btn-cre-rojo' target='_blank' href='https://titan.cre.gob.mx/Consulta/Turno/" + item.turno + "'>Ver Expediente en Titán</a>" +
                                    "</div>"
                                );


                                marker.on('popupopen', function (e) {
                                    var popup = e.popup;
                                    var streetViewLink = popup.getElement().querySelector('.street-view-link');
                                    streetViewLink.addEventListener('click', function () {
                                        var lat = e.target.getLatLng().lat.toPrecision(8);
                                        var lon = e.target.getLatLng().lng.toPrecision(8);
                                        var streetViewURL = 'http://maps.google.com/maps?q=&layer=c&cbll=' + lat + ',' + lon + '&cbp=11,0,0,0,0';
                                        window.open(streetViewURL, '_blank');
                                    });
                                });

                                markers.addLayer(marker);
                                var circle = L.circle([item.x_Geo, item.y_Geo], {
                                    color: '#1e3143', // Color del círculo
                                    fillColor: '#1e3143', // Color de relleno del círculo
                                    fillOpacity: 0.2, // Opacidad del relleno del círculo
                                    radius: 3000       // Radio en metros
                                }).addTo(mapmun);

                            });

                            mapmun.addLayer(markers);


                        }

                        CargaSolicitudesmun();
                        Ductospetmun();
                        ///Sidebarmun
                        const sidebarmun = document.querySelector('#sidebarmun');


                        //Eventos Baiscos

                        mapmun.on('click', (evento) => {
                            const lat = evento;
                            console.log(lat.latlng)
                        });

                        //Metodos
                        mapmun.center

                        //Funciones

                        //Fly to Place
                        const volar = (latlng) => {
                            mapmun.flyTo(latlng, 13);
                        }
                    

                        //Fly to
                        // Municipio
                        const volar_municipio = (latlng) => {
                            mapmun.flyTo(latlng, 13);
                        }

                        //Limpiar Items del Side Bar
                        const limpiaritems = () => {
                            const listadoLi = document.querySelectorAll('li');
                            listadoLi.forEach(li => {
                                li.classList.remove('active');
                            })
                        }


                        // Crea el Side Bar
                        const crearitem = () => {
                            const ul = document.createElement('ul');
                            ul.classList.add('list-group');
                            ul.style.overflow = 'auto'; // Habilitar desplazamiento
                            ul.style.maxHeight = 'calc(280vh - 80px)'; // Ajustar el tamaño máximo
                            sidebarmun.append(ul);

                            // Crear el elemento "Selecciona una Solicitud"
                            const seleccionaSolicitud = document.createElement('p');
                            seleccionaSolicitud.classList.add('btn', 'btn-cre-verde', 'text-center');
                            seleccionaSolicitud.innerText = 'Turno Solicitud Kmis:';
                            seleccionaSolicitud.style.position = 'sticky'; // Establecer la posición sticky
                            seleccionaSolicitud.style.top = '0'; // Asegurar que esté al inicio del sidebar
                            sidebarmun.prepend(seleccionaSolicitud);

                            response.forEach((item) => {
                                // Asigna el icono de acuerdo a la categoría
                                var iconoActualUrl;
                                if (item.categoria == "Óptimo") {
                                    iconoActualUrl = '/img/Aprobado.png';
                                } else if (item.categoria == "Viable") {
                                    iconoActualUrl = '/img/viable.png';
                                } else if (item.categoria == "No Viable a Nivel Municipal") {
                                    iconoActualUrl = '/img/NoviableMun.png';
                                }else if (item.categoria == "No Viable a Nivel Entidad Federativa") {
                                    iconoActualUrl = '/img/NoAprobado.png';
                                }

                                else {
                                    iconoActualUrl = '/img/NoAprobado.png'; // default icon
                                }

                                const li = document.createElement('li');
                                li.classList.add('list-group-item');
                                li.style.height = '200px'; // Establecer altura fija
                                li.style.marginBottom = '10px'; // Agregar margen inferior

                                // Agregar el texto "ID solicitud: item.id"
                                const texto = document.createElement('span');
                                texto.innerHTML = `<strong>ID:</strong> ${item.id.slice(0, 10)}<br><strong>Turno:</strong> ${item.turno.slice(0, 10)}<br><strong>Razón Social:</strong> ${item.razon_social.slice(0, 10)}<br><strong>Marca Solicitada:</strong> ${item.marca_solicitada.slice(0, 10)}`;
                                li.appendChild(texto);

                                // Agregar el icono correspondiente
                                const icono = document.createElement('img');
                                icono.src = iconoActualUrl;
                                icono.classList.add('icono-responsivo'); // Agregar la clase CSS para el icono
                                li.insertBefore(icono, texto); // Insertar el icono antes del texto

                                  // Condición para mostrar el botón solo si el icono es "NoAprobado"
                                if (iconoActualUrl === '/img/NoAprobado.png') {
                                    const botonEvaluar = document.createElement('button');
                                    botonEvaluar.classList.add('btn', 'btn-danger'); // Agregar las clases CSS para el botón
                                    botonEvaluar.innerHTML = 'Acción Adicional Requerida: Evaluar solicitud a nivel localidad';
                                    botonEvaluar.onclick = () => redireccionarAEvaluacion(item.id, "Petroliferos"); // Función de evaluación
                                    li.appendChild(botonEvaluar); // Añadir el botón al elemento `li`
                                }

                                ul.append(li);

                                li.addEventListener('click', () => {
                                    limpiaritems();
                                    li.classList.add('active');
                                    volar([item.x_Geo, item.y_Geo]);
                                });
                            });
                        };

                        crearitem();


                        //
                        //Función que carga los permisos de Expendio
                      

                        //CargaExpendiosmun();









                    },
                    error: function (error) {
                        // Maneja el error si ocurre.
                    }


                });
            });
        });
    </script>







    }

