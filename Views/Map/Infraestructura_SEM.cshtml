@model Mep


@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json
@using NSIE.Models
@inject IHttpContextAccessor HttpContextAccessor

@{
    var httpContext = HttpContextAccessor.HttpContext;
    var perfilUsuarioJson = httpContext.Session.GetString("PerfilUsuario");
    var perfilUsuario = JsonConvert.DeserializeObject<PerfilUsuario>(perfilUsuarioJson);

    // Utilizar los datos del usuario para personalizar la vista
    ViewData["NombreUsuario"] = perfilUsuario.Nombre;
    ViewData["RolUsuario"] = perfilUsuario.Rol;
    ViewData["MercadoUsuario"] = perfilUsuario.Mercado_ID;
    ViewData["Title"] = "Infraestructura del Sector Energético Mexicano";
}

@{
    var header = new HeaderViewModel
    {
        Title = "Mapa de Infraestructura",
        IconPath = "geo.png",
        Description = "Mapa interactivo de activos",
        Section = "📊 Datos Públicos",
        ModuleInfo = JsonConvert.SerializeObject(new
        {
            title = "Mapa de Infraestructura",
            description = "Sistema de visualización geográfica de infraestructura energética.",
            functionality = "Permite explorar y analizar la distribución territorial de activos.",
            stage = "Consulta Visual",
            roles = new[] {
                new { icon = "building", text = "SENER: Coordinación general" },
                new { icon = "bolt", text = "CFE: Infraestructura eléctrica" },
                new { icon = "chart-line", text = "CENACE: Control operativo" },
                new { icon = "map-marked-alt", text = "Estados: Información local" },
                new { icon = "city", text = "Municipios: Datos territoriales" },
                new { icon = "industry", text = "Empresas: Activos privados" }
            },
            order = new { step = 12, description = "Georreferenciación de activos" }
        }),
        LegalDescription = "Visualización de infraestructura conforme al Art. 77 del Reglamento.",
        Fundamentos = new List<FundamentoLegal> {
            new() { Reference = "Art. 77 Reglamento", Description = "Establece los lineamientos para la georreferenciación de infraestructura" }
        }
    };
}

@await Html.PartialAsync("_ViewHeader", header)


@*Sección que Despliega el Mapa Inicial*@
<div class="container">
    <h2 class="fw-bold   subtitulo ">Seleccione un Mercado para ver la infraestructura</h2>

    <section id="despliega_mapa" class="pb-5">

        <br />

        <div class="app-card-header p-3 border-0">


            @*Menu*@
            <div class="navbarmapag">


                <a id="petroliferos" class="active icono-texto"
                    onclick="activarElemento('petroliferos'); CargaPetrolíferos()">
                    <img src="/img/gasolinera.png" alt="Icono personalizado" class="iconomenu" />
                    <span>Petrolíferos</span>

                    <div id="total_petroliferos"></div>
                </a>

                <a id="glp" class="icono-texto" onclick="activarElemento('glp'); CargaGLP()">
                    <img src="/img/glpmapa.png" alt="Icono personalizado" class="iconomenu" />
                    <span>Gas L.P.</span>

                    <div id="total_glp"></div>
                </a>

                <a id="gn" class="icono-texto" onclick="activarElemento('gn'); CargaGN()">
                    <img src="/img/gasnaturali.png" alt="Icono personalizado" class="iconomenu" />
                    <span>Gas Natural</span>

                    <div id="total_gn"></div>
                </a>

                <a id="electricidad" class="icono-texto" onclick="activarElemento('electricidad'); CargaElectricidad()">
                    <img src="/img/central_electrica.png" alt="Icono personalizado" class="iconomenu" />
                    <span>Electricidad</span>

                    <div id="total_electricidad"></div>
                </a>
                <a id="infra" class="icono-texto" onclick="activarElemento('infra'); CargaSEM()">
                    <img src="/img/lc6.png" alt="Icono personalizado" class="iconomenu" />
                    <span>Toda la Infraestructura</span>
                    <div id="total_infra"></div>
                </a>

            </div>

            <!-- Nuevo Div para Conteo de Tipos de Permisos -->
            <div id="conteo_tipos_permisos" class="conteo-permisos">
                <!-- Aquí se mostrarán los conteos de tipos de permisos -->
            </div>



            <div id="main-container">

                <div class="row g-4 mb-4">
                    <div class="col">
                        <div class="app-card app-card-chart h-100 shadow-sm">

                            <div class="search-container p-3" id="search-container">
                                <label class="form-label">Buscar en el Mapa:</label>
                                <input type="text" id="busquedaGeneralInput" class="form-control"
                                    placeholder="Número de Permiso, Entidad Federativa o Municipio">
                                <div id="autocomplete-list" class="autocomplete-items"></div>
                                <!-- El resto de tu código -->

                                <button class="btn btn-cre-rojo-home" onclick="buscarGeneral()"
                                    style="width:10% !important"><i class="bi bi-search"></i></button>
                            </div>

                            @*Menu de Botones*@

                            <div class="app-card-body ">
                                <div class="chart-container">
                                    <div id="" class="app-card-body p-1 d-flex align-items-center">
                                        <button id="fullscreen-btn" class="btn btn-primary">Pantalla Completa</button>
                                        <div id="alert-message" class="alert alert-info ms-3" role="alert"
                                            style="margin-left: 15px; padding: 10px; background-color: #FCFEE7; border-left: 6px solid #DEF321; color: #818F31;">
                                            Para el caso del mercado de electricidad, las ubicaciones corresponden a la
                                            dirección proporcionada en la documentación del permiso otorgado que puede
                                            corresponder a la ubicación física de central eléctrica que representa.
                                        </div>
                                    </div>
                                    <div id="map" class="bg"></div>
                                    <div class="leyenda pt-3">
                                        <p>Mayor Concentración</p>
                                        <p>Concentración Promedio</p>
                                        <p>Menor Concentración</p>
                                        <p> Ductos</p>
                                    </div>
                                    <br />

                                    <div id="grafico"></div>
                                    @* <div class="" id="grafico2"></div> *@
                                    <br />


                                    @* </div> *@
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </section>

    <style>
        #fullscreen-search-container {
            background-color: white;
        }

        #fullscreen-elements {
            display: flex;
            flex-direction: column;
            height: auto;
            /* Valor inicial para cuando no esté en pantalla completa */
        }

        #fullscreen-last-update,
        #fullscreen-select,
        #fullscreen-search-container {
            flex-shrink: 0;
        }

        #map {
            flex-grow: 1;
        }

        #main-container.fullscreen-active #fullscreen-elements {
            height: 100vh;
        }

        #main-container.fullscreen-active #map {
            height: calc(100vh - 60px);
        }

        #main-container:not(.fullscreen-active) #map {
            height: 500px;
        }
    </style>


</div>
<style>
    .infraestructura-container {
        display: flex;
        justify-content: space-around;
        margin-top: 10px;
    }

    .infra-item {
        text-align: center;
    }

    .infra-icon {
        width: 36px;
        height: 36px;
    }

    .containerw {
        width: 100%;
        max-width: 100%;
    }

    iframe {
        width: 100%;
        height: 450px;
        /* Puedes ajustar la altura según sea necesario */
    }

    .table-responsive {
        overflow-x: auto;
    }

    .custom-table td,
    .custom-table th {
        white-space: nowrap;
    }

    .custom-table td {
        padding: 0 !important;
    }

    .table-title {
        white-space: normal;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .source-link {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        display: block;
    }

    .custom-table th:first-child,
    .custom-table td:first-child {
        position: static;
        /* Override the global sticky positioning */
        background-color: inherit;
        /* Override the global background color */
        color: inherit;
        /* Override the global text color */
        text-align: left;
        /* Override the global text alignment */
    }


    .legend {
        position: absolute;
        bottom: 20px;
        left: 10px;
        background: white;
        padding: 10px;
        font-size: 12px;
        line-height: 18px;
        color: #555;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
        border-radius: 5px;
    }

    .legend div {
        width: 20px;
        height: 10px;
        float: left;
        margin-right: 5px;
        opacity: 0.7;
    }
</style>

@*Script de Pantalla Completa*@
<script>
    document.addEventListener('DOMContentLoaded', (event) => {
        const mapElement = document.getElementById('map');
        const fullscreenButton = document.getElementById('fullscreen-btn');
        const searchContainer = document.getElementById('search-container');
        const mainContainer = document.getElementById('main-container');
        const fullscreenElements = document.createElement('div');
        fullscreenElements.id = 'fullscreen-elements';

        const originalMapParent = mapElement.parentNode;
        const originalSearchParent = searchContainer.parentNode;
        const originalMapNextSibling = mapElement.nextSibling;
        const originalSearchNextSibling = searchContainer.nextSibling;

        fullscreenButton.addEventListener('click', () => {
            if (!document.fullscreenElement) {
                mainContainer.appendChild(fullscreenElements); // Asegurarnos de que fullscreenElements esté en el DOM
                fullscreenElements.appendChild(searchContainer);
                fullscreenElements.appendChild(mapElement);
                fullscreenElements.requestFullscreen().catch(err => {
                    alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);
                });
            } else {
                document.exitFullscreen();
            }
        });

        document.addEventListener('fullscreenchange', (event) => {
            if (document.fullscreenElement) {
                fullscreenButton.textContent = "Salir de Pantalla Completa";
                mainContainer.classList.add('fullscreen-active');
                mapElement.style.height = "calc(100vh - 60px)";
                searchContainer.style.backgroundColor = "white";
            } else {
                fullscreenButton.textContent = "Pantalla Completa";
                if (originalSearchNextSibling) {
                    originalSearchParent.insertBefore(searchContainer, originalSearchNextSibling);
                } else {
                    originalSearchParent.appendChild(searchContainer);
                }
                if (originalMapNextSibling) {
                    originalMapParent.insertBefore(mapElement, originalMapNextSibling);
                } else {
                    originalMapParent.appendChild(mapElement);
                }
                mainContainer.classList.remove('fullscreen-active');
                mapElement.style.height = "500px";

                // Asegurarse de que los estilos se restablezcan
                fullscreenElements.style.height = 'auto'; // Restablecer altura a su valor inicial
            }
        });
    });
</script>

@*Shapes Estados*@
<script type="text/javascript" src="~/Geovisualizador/shapes/estadosminlight.js"></script>
<script type="text/javascript" src="~/Geovisualizador/shapes/municipiosminlight.js"></script>


@*Ductos*@
@*Petrolíferos*@
<script src="~/Geovisualizador/data/ductos_petroliferos_4326_0.js"></script>
@*Gas L.P.*@
<script src="~/Geovisualizador/data/ductos_glp_4326_0.js"></script>

@section scripts {

    <script type="text/javascript" src="/js/configura_mapa.js"></script>
    <script type="text/javascript" src="/js/infraestructura_sem.js"></script>
    <script>

        let radarLayers = [];
        let currentLayerIndex = 0;

        async function loadRadarLayers() {
            const response = await fetch('https://api.rainviewer.com/public/weather-maps.json');
            const data = await response.json();

            data.radar.past.forEach(item => {
                const timestamp = item.time;
                const layer = L.tileLayer(
                    `https://tilecache.rainviewer.com/v2/radar/${timestamp}/256/{z}/{x}/{y}/3/1_1.png`,
                    { opacity: 0, maxZoom: 10 }
                );
                radarLayers.push(layer);
                layer.addTo(map);
            });

            animateRadar();
        }

        function animateRadar() {
            setInterval(() => {
                const currentLayer = radarLayers[currentLayerIndex];
                const nextLayerIndex = (currentLayerIndex + 1) % radarLayers.length;
                const nextLayer = radarLayers[nextLayerIndex];

                currentLayer.setOpacity(0);
                nextLayer.setOpacity(0.7);

                currentLayerIndex = nextLayerIndex;
            }, 1000);
        }

        async function loadCoverageLayer() {
            const coverageLayer = L.tileLayer(
                `https://tilecache.rainviewer.com/v2/coverage/0/256/{z}/{x}/{y}/0/0_0.png`,
                { opacity: 0.3, maxZoom: 10 }
            );
            coverageLayer.addTo(map);
        }

        async function loadCloudLayer() {
            const cloudLayer = L.tileLayer(
                `https://tilecache.rainviewer.com/v2/satellite/latest/256/{z}/{x}/{y}/0/0_0.png`,
                { opacity: 0.5, maxZoom: 10 }
            );
            cloudLayer.addTo(map);
        }

        loadRadarLayers();
        loadCoverageLayer();
        loadCloudLayer();

        const legend = L.control({ position: 'bottomleft' });
        legend.onAdd = function () {
            const div = L.DomUtil.create('div', 'legend');
            div.innerHTML += '<b>Intensidad de Lluvia</b><br>';
            div.innerHTML += '<div style="background: #00FF00"></div><span>Ligera</span><br>';
            div.innerHTML += '<div style="background: #0074FF"></div><span>Moderada</span><br>';
            div.innerHTML += '<div style="background: #FFFF00"></div><span>Fuerte</span><br>';
            div.innerHTML += '<div style="background: #FF00FF"></div><span>Muy Fuerte</span><br>';
            div.innerHTML += '<div style="background: #FFFFFF"></div><span>Extrema</span>';
            return div;
        };
        legend.addTo(map);
    </script>
}