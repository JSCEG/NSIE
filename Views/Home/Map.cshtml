@{
    ViewData["Title"] = "Sistema Energético Mexicano";
}



<div class="text-center">
    <h3 class="cp-section cp-grouping-section"> <img src="@Cdn.Url/img_snier/vistas/mexicoi.png" alt="Icono personalizado" class="iconomenu">@ViewData["Title"]</h3>
</div>

<br>




<div class="container">
   <div class="row d-flexd justify-content-center">
        <div class="col ">
            <button class="btn btn-cre-rojo" data-bs-toggle="offcanvas" data-bs-target="#ejemploOffcanvas">
                <i class="bi bi-info-circle-fill"></i> - Ver Información Acerca de este Mapa
            </button>
          
        </div>
        <div class="col ">
            <div class="pt-0 pb-5">
                <select id="estado" class="form-select  " aria-label=".form-select-sm ">
                    <option selected>
                        Selecciona un estado:
                    </option>
                    <option value="ags">Aguascalientes</option>
                    <option value="bc">Baja California</option>
                    <option value="bcs">Baja California Sur</option>
                    <option value="camp">Campeche</option>
                    <option value="coah">Coahuila</option>
                    <option value="col">Colima</option>
                    <option value="chis">Chiapas</option>
                    <option value="chih">Chihuahua</option>
                    <option value="cdmx">Ciudad de México</option>
                    <option value="dgo">Durango</option>
                    <option value="gto">Guanajuato</option>
                    <option value="gro">Guerrero</option>
                    <option value="hgo">Hidalgo</option>
                    <option value="jal">Jalisco</option>
                    <option value="mex">México</option>
                    <option value="mich">Michoacán</option>
                    <option value="mor">Morelos</option>
                    <option value="nay">Nayarit</option>
                    <option value="nl">Nuevo León</option>
                    <option value="oax">Oaxaca</option>
                    <option value="pue">Puebla</option>
                    <option value="qro">Querétaro</option>
                    <option value="qroo">Quintana Roo</option>
                    <option value="slp">San Luis Potosí</option>
                    <option value="sin">Sinaloa</option>
                    <option value="son">Sonora</option>
                    <option value="tab">Tabasco</option>
                    <option value="tamps">Tamaulipas</option>
                    <option value="tlax">Tlaxcala</option>
                    <option value="ver">Veracruz</option>
                    <option value="yuc">Yucatán</option>
                    <option value="zac">Zacatecas</option>
                </select>
            </div>
        </div>

        <partial name="_Infomapa_publico_SEM"/>

    </div>    
<br>
<div id="map" style="height: 500px;"></div>

 
</div>


@*  <partial name="_ListadeUsuarios" model="Model.AccesosLocales"/>*@






<script src="~/js/qgis2web_expressions.js"></script>
<script src="~/js/leaflet.js"></script>
<script src="~/js/leaflet-svg-shape-markers.min.js"></script>
<script src="~/js/leaflet.rotatedMarker.js"></script>
<script src="~/js/leaflet.pattern.js"></script>
<script src="~/js/leaflet-hash.js"></script>
<script src="~/js/Autolinker.min.js"></script>
<script src="~/js/rbush.min.js"></script>
<script src="~/js/labelgun.min.js"></script>
<script src="~/js/labels.js"></script>
<script src="~/js/leaflet-control-geocoder.Geocoder.js"></script>
<script src="~/js/leaflet-measure.js"></script>
<script src="~/js/leaflet-search.js"></script>



 <script src="@Cdn.Url/Geovisualizador/datamapageneral/EstacionesdeservicioGN_2.js"></script>
 <script src="@Cdn.Url/Geovisualizador/datamapageneral/DuctosnointegradosaSISTRANGAS_3.js"></script>
<script src="@Cdn.Url/Geovisualizador/DuctosintegradosaSISTRANGAS_4.js"></script>
 <script src="@Cdn.Url/Geovisualizador/DuctosdeImportacion_5.js"></script>
 <script src="@Cdn.Url/Geovisualizador/CentralesdeCompresion_6.js"></script>
 <script src="@Cdn.Url/Geovisualizador/PuntosdeInternacion_7.js"></script>
 <script src="@Cdn.Url/Geovisualizador/ComplejosProcesadoresdeGas_8.js"></script>
 <script src="@Cdn.Url/Geovisualizador/ExpendiosaerodromosPetroliferos_9.js"></script>
 <script src="@Cdn.Url/Geovisualizador/ExpendiosPetroliferos_10.js"></script>
 <script src="@Cdn.Url/Geovisualizador/ComercializacinPetroliferos_11.js"></script>
 <script src="@Cdn.Url/Geovisualizador/TransportedistintoaductoPetroliferos_12.js"></script>
 <script src="@Cdn.Url/Geovisualizador/DuctosPetroliferos_13.js"></script>
 <script src="@Cdn.Url/Geovisualizador/AlmacenamientoaerodromosPetroliferos_14.js"></script>
 <script src="@Cdn.Url/Geovisualizador/AlmacenamientoPetroliferos_15.js"></script>
 <script src="@Cdn.Url/Geovisualizador/TerminaldeAlmacenamiento_16.js"></script>
 <script src="@Cdn.Url/Geovisualizador/ExpendiosGasLP_17.js"></script>
 <script src="@Cdn.Url/Geovisualizador/DistribucinGasLP_18.js"></script>
 <script src="@Cdn.Url/Geovisualizador/DuctosGasLP_19.js"></script>
 <script src="@Cdn.Url/Geovisualizador/AlmacenamientoGasLP_20.js"></script>
 <script src="@Cdn.Url/Geovisualizador/Eoloelectrica_21.js"></script>
 <script src="@Cdn.Url/Geovisualizador/Nucleoelectrica_22.js"></script>
 <script src="@Cdn.Url/Geovisualizador/GeneracinporResiduos_23.js"></script>
 <script src="@Cdn.Url/Geovisualizador/Importacin_24.js"></script>
 <script src="@Cdn.Url/Geovisualizador/Energiacinetica_25.js"></script>
 <script src="@Cdn.Url/Geovisualizador/LechoFluidazo_26.js"></script>
 <script src="@Cdn.Url/Geovisualizador/Carboelectrica_27.js"></script>
 <script src="@Cdn.Url/Geovisualizador/Geotermica_28.js"></script>
 <script src="@Cdn.Url/Geovisualizador/TurbinadeVaporvapor_29.js"></script>
 <script src="@Cdn.Url/Geovisualizador/TurbinadeVaporCombustoleo_30.js"></script>
 <script src="@Cdn.Url/Geovisualizador/TurbinadeVaporBiomasa_31.js"></script>
 <script src="@Cdn.Url/Geovisualizador/TurbinadeVaporBagazodecaa_32.js"></script>
 <script src="@Cdn.Url/Geovisualizador/TurbinadeGasReaccinquimica_33.js"></script>
 <script src="@Cdn.Url/Geovisualizador/TurbinadeGasGas_34.js"></script>
 <script src="@Cdn.Url/Geovisualizador/Turbinashidraulicas_35.js"></script>
 <script src="@Cdn.Url/Geovisualizador/Fotovoltaicas_36.js"></script>
 <script src="@Cdn.Url/Geovisualizador/CombustininternaDiesel_37.js"></script>
 <script src="@Cdn.Url/Geovisualizador/Combustininternabiomasa_38.js"></script>
 <script src="@Cdn.Url/Geovisualizador/BusquedaGeneral_39.js"></script>

   <script>
  var map = L.map('map', {
            zoomControl:true, maxZoom:28, minZoom:1
        })
        var hash = new L.Hash(map);
        map.attributionControl.setPrefix('<a href="https://github.com/tomchadwin/qgis2web" target="_blank">qgis2web</a> &middot; <a href="https://leafletjs.com" title="A JS library for interactive maps">Leaflet</a> &middot; <a href="https://qgis.org">QGIS</a>');
        var autolinker = new Autolinker({truncate: {length: 30, location: 'smart'}});
        var measureControl = new L.Control.Measure({
            position: 'topleft',
            primaryLengthUnit: 'meters',
            secondaryLengthUnit: 'kilometers',
            primaryAreaUnit: 'sqmeters',
            secondaryAreaUnit: 'hectares'
        });
        measureControl.addTo(map);
        document.getElementsByClassName('leaflet-control-measure-toggle')[0]
        .innerHTML = '';
        document.getElementsByClassName('leaflet-control-measure-toggle')[0]
        .className += ' fas fa-ruler';
        var bounds_group = new L.featureGroup([]);
        function setBounds() {
            if (bounds_group.getLayers().length) {
                map.fitBounds(bounds_group.getBounds());
            }
        }
        map.createPane('pane_satelitegoogle_0');
        map.getPane('pane_satelitegoogle_0').style.zIndex = 400;
        var layer_satelitegoogle_0 = L.tileLayer('http://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}', {
            pane: 'pane_satelitegoogle_0',
            opacity: 1.0,
            attribution: '',
            minZoom: 1,
            maxZoom: 28,
            minNativeZoom: 0,
            maxNativeZoom: 18
        });
        layer_satelitegoogle_0;
        map.createPane('pane_Mapagoogle_1');
        map.getPane('pane_Mapagoogle_1').style.zIndex = 401;
        var layer_Mapagoogle_1 = L.tileLayer('https://mt1.google.com/vt/lyrs=r&x={x}&y={y}&z={z}', {
            pane: 'pane_Mapagoogle_1',
            opacity: 1.0,
            attribution: '',
            minZoom: 1,
            maxZoom: 28,
            minNativeZoom: 0,
            maxNativeZoom: 18
        });
        layer_Mapagoogle_1;
        map.addLayer(layer_Mapagoogle_1);
        function pop_EstacionesdeservicioGN_2(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de Permiso</strong><br />' + (feature.properties['Número de Permiso'] !== null ? autolinker.link(feature.properties['Número de Permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Razón Social</th>\
                        <td>' + (feature.properties['Razón Social'] !== null ? autolinker.link(feature.properties['Razón Social'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Domicilio del Predio</th>\
                        <td>' + (feature.properties['Domicilio del Predio'] !== null ? autolinker.link(feature.properties['Domicilio del Predio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Municipio</th>\
                        <td>' + (feature.properties['Municipio'] !== null ? autolinker.link(feature.properties['Municipio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado</th>\
                        <td>' + (feature.properties['Estado'] !== null ? autolinker.link(feature.properties['Estado'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_EstacionesdeservicioGN_2_0() {
            return {
                pane: 'pane_EstacionesdeservicioGN_2',
                shape: 'square',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(196,60,57,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_EstacionesdeservicioGN_2');
        map.getPane('pane_EstacionesdeservicioGN_2').style.zIndex = 402;
        map.getPane('pane_EstacionesdeservicioGN_2').style['mix-blend-mode'] = 'normal';
        var layer_EstacionesdeservicioGN_2 = new L.geoJson(json_EstacionesdeservicioGN_2, {
            attribution: '',
            interactive: true,
            dataVar: 'json_EstacionesdeservicioGN_2',
            layerName: 'layer_EstacionesdeservicioGN_2',
            pane: 'pane_EstacionesdeservicioGN_2',
            onEachFeature: pop_EstacionesdeservicioGN_2,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_EstacionesdeservicioGN_2_0(feature));
            },
        });
        bounds_group.addLayer(layer_EstacionesdeservicioGN_2);
        function pop_DuctosnointegradosaSISTRANGAS_3(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>nombre</strong><br />' + (feature.properties['nombre'] !== null ? autolinker.link(feature.properties['nombre'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">proyecto</th>\
                        <td>' + (feature.properties['proyecto'] !== null ? autolinker.link(feature.properties['proyecto'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">tipo</th>\
                        <td>' + (feature.properties['tipo'] !== null ? autolinker.link(feature.properties['tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">capacidad_</th>\
                        <td>' + (feature.properties['capacidad_'] !== null ? autolinker.link(feature.properties['capacidad_'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">inversin_m</th>\
                        <td>' + (feature.properties['inversin_m'] !== null ? autolinker.link(feature.properties['inversin_m'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">desarrolla</th>\
                        <td>' + (feature.properties['desarrolla'] !== null ? autolinker.link(feature.properties['desarrolla'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">promotor</th>\
                        <td>' + (feature.properties['promotor'] !== null ? autolinker.link(feature.properties['promotor'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">longitud_k</th>\
                        <td>' + (feature.properties['longitud_k'] !== null ? autolinker.link(feature.properties['longitud_k'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">tramo</th>\
                        <td>' + (feature.properties['tramo'] !== null ? autolinker.link(feature.properties['tramo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">permiso_cr</th>\
                        <td>' + (feature.properties['permiso_cr'] !== null ? autolinker.link(feature.properties['permiso_cr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">fecha_de_i</th>\
                        <td>' + (feature.properties['fecha_de_i'] !== null ? autolinker.link(feature.properties['fecha_de_i'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">zona_tarif</th>\
                        <td>' + (feature.properties['zona_tarif'] !== null ? autolinker.link(feature.properties['zona_tarif'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">integrado_</th>\
                        <td>' + (feature.properties['integrado_'] !== null ? autolinker.link(feature.properties['integrado_'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">observacio</th>\
                        <td>' + (feature.properties['observacio'] !== null ? autolinker.link(feature.properties['observacio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_DuctosnointegradosaSISTRANGAS_3_0() {
            return {
                pane: 'pane_DuctosnointegradosaSISTRANGAS_3',
                opacity: 1,
                color: 'rgba(130,27,255,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_DuctosnointegradosaSISTRANGAS_3');
        map.getPane('pane_DuctosnointegradosaSISTRANGAS_3').style.zIndex = 403;
        map.getPane('pane_DuctosnointegradosaSISTRANGAS_3').style['mix-blend-mode'] = 'normal';
        var layer_DuctosnointegradosaSISTRANGAS_3 = new L.geoJson(json_DuctosnointegradosaSISTRANGAS_3, {
            attribution: '',
            interactive: true,
            dataVar: 'json_DuctosnointegradosaSISTRANGAS_3',
            layerName: 'layer_DuctosnointegradosaSISTRANGAS_3',
            pane: 'pane_DuctosnointegradosaSISTRANGAS_3',
            onEachFeature: pop_DuctosnointegradosaSISTRANGAS_3,
            style: style_DuctosnointegradosaSISTRANGAS_3_0,
        });
        bounds_group.addLayer(layer_DuctosnointegradosaSISTRANGAS_3);
        function pop_DuctosintegradosaSISTRANGAS_4(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>ducto</strong><br />' + (feature.properties['ducto'] !== null ? autolinker.link(feature.properties['ducto'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">proyecto</th>\
                        <td>' + (feature.properties['proyecto'] !== null ? autolinker.link(feature.properties['proyecto'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">tipo</th>\
                        <td>' + (feature.properties['tipo'] !== null ? autolinker.link(feature.properties['tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">longitud_k</th>\
                        <td>' + (feature.properties['longitud_k'] !== null ? autolinker.link(feature.properties['longitud_k'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">tramo</th>\
                        <td>' + (feature.properties['tramo'] !== null ? autolinker.link(feature.properties['tramo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">permiso_cr</th>\
                        <td>' + (feature.properties['permiso_cr'] !== null ? autolinker.link(feature.properties['permiso_cr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">inicio_de_</th>\
                        <td>' + (feature.properties['inicio_de_'] !== null ? autolinker.link(feature.properties['inicio_de_'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">zona_tarif</th>\
                        <td>' + (feature.properties['zona_tarif'] !== null ? autolinker.link(feature.properties['zona_tarif'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">integrado_</th>\
                        <td>' + (feature.properties['integrado_'] !== null ? autolinker.link(feature.properties['integrado_'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">notas</th>\
                        <td>' + (feature.properties['notas'] !== null ? autolinker.link(feature.properties['notas'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_DuctosintegradosaSISTRANGAS_4_0() {
            return {
                pane: 'pane_DuctosintegradosaSISTRANGAS_4',
                opacity: 1,
                color: 'rgba(183,72,75,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_DuctosintegradosaSISTRANGAS_4');
        map.getPane('pane_DuctosintegradosaSISTRANGAS_4').style.zIndex = 404;
        map.getPane('pane_DuctosintegradosaSISTRANGAS_4').style['mix-blend-mode'] = 'normal';
        var layer_DuctosintegradosaSISTRANGAS_4 = new L.geoJson(json_DuctosintegradosaSISTRANGAS_4, {
            attribution: '',
            interactive: true,
            dataVar: 'json_DuctosintegradosaSISTRANGAS_4',
            layerName: 'layer_DuctosintegradosaSISTRANGAS_4',
            pane: 'pane_DuctosintegradosaSISTRANGAS_4',
            onEachFeature: pop_DuctosintegradosaSISTRANGAS_4,
            style: style_DuctosintegradosaSISTRANGAS_4_0,
        });
        bounds_group.addLayer(layer_DuctosintegradosaSISTRANGAS_4);
        function pop_DuctosdeImportacion_5(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>nombre</strong><br />' + (feature.properties['nombre'] !== null ? autolinker.link(feature.properties['nombre'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">longitud</th>\
                        <td>' + (feature.properties['longitud'] !== null ? autolinker.link(feature.properties['longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">permisiona</th>\
                        <td>' + (feature.properties['permisiona'] !== null ? autolinker.link(feature.properties['permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">nmero_de_p</th>\
                        <td>' + (feature.properties['nmero_de_p'] !== null ? autolinker.link(feature.properties['nmero_de_p'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_DuctosdeImportacion_5_0() {
            return {
                pane: 'pane_DuctosdeImportacion_5',
                opacity: 1,
                color: 'rgba(77,109,115,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_DuctosdeImportacion_5');
        map.getPane('pane_DuctosdeImportacion_5').style.zIndex = 405;
        map.getPane('pane_DuctosdeImportacion_5').style['mix-blend-mode'] = 'normal';
        var layer_DuctosdeImportacion_5 = new L.geoJson(json_DuctosdeImportacion_5, {
            attribution: '',
            interactive: true,
            dataVar: 'json_DuctosdeImportacion_5',
            layerName: 'layer_DuctosdeImportacion_5',
            pane: 'pane_DuctosdeImportacion_5',
            onEachFeature: pop_DuctosdeImportacion_5,
            style: style_DuctosdeImportacion_5_0,
        });
        bounds_group.addLayer(layer_DuctosdeImportacion_5);
        function pop_CentralesdeCompresion_6(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">estaciones</th>\
                        <td>' + (feature.properties['estaciones'] !== null ? autolinker.link(feature.properties['estaciones'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_CentralesdeCompresion_6_0() {
            return {
                pane: 'pane_CentralesdeCompresion_6',
                shape: 'square',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(89,141,225,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_CentralesdeCompresion_6');
        map.getPane('pane_CentralesdeCompresion_6').style.zIndex = 406;
        map.getPane('pane_CentralesdeCompresion_6').style['mix-blend-mode'] = 'normal';
        var layer_CentralesdeCompresion_6 = new L.geoJson(json_CentralesdeCompresion_6, {
            attribution: '',
            interactive: true,
            dataVar: 'json_CentralesdeCompresion_6',
            layerName: 'layer_CentralesdeCompresion_6',
            pane: 'pane_CentralesdeCompresion_6',
            onEachFeature: pop_CentralesdeCompresion_6,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_CentralesdeCompresion_6_0(feature));
            },
        });
        bounds_group.addLayer(layer_CentralesdeCompresion_6);
        function pop_PuntosdeInternacion_7(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">cruce</th>\
                        <td>' + (feature.properties['cruce'] !== null ? autolinker.link(feature.properties['cruce'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">localidad_</th>\
                        <td>' + (feature.properties['localidad_'] !== null ? autolinker.link(feature.properties['localidad_'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">punto_de_s</th>\
                        <td>' + (feature.properties['punto_de_s'] !== null ? autolinker.link(feature.properties['punto_de_s'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">localida_1</th>\
                        <td>' + (feature.properties['localida_1'] !== null ? autolinker.link(feature.properties['localida_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">gasoducto_</th>\
                        <td>' + (feature.properties['gasoducto_'] !== null ? autolinker.link(feature.properties['gasoducto_'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">gasoduct_1</th>\
                        <td>' + (feature.properties['gasoduct_1'] !== null ? autolinker.link(feature.properties['gasoduct_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">permisiona</th>\
                        <td>' + (feature.properties['permisiona'] !== null ? autolinker.link(feature.properties['permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">permiso_cr</th>\
                        <td>' + (feature.properties['permiso_cr'] !== null ? autolinker.link(feature.properties['permiso_cr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">tipo_de_pe</th>\
                        <td>' + (feature.properties['tipo_de_pe'] !== null ? autolinker.link(feature.properties['tipo_de_pe'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">consorcio</th>\
                        <td>' + (feature.properties['consorcio'] !== null ? autolinker.link(feature.properties['consorcio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ao_de_inic</th>\
                        <td>' + (feature.properties['ao_de_inic'] !== null ? autolinker.link(feature.properties['ao_de_inic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">capacidad_</th>\
                        <td>' + (feature.properties['capacidad_'] !== null ? autolinker.link(feature.properties['capacidad_'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">dimetro</th>\
                        <td>' + (feature.properties['dimetro'] !== null ? autolinker.link(feature.properties['dimetro'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">referencia</th>\
                        <td>' + (feature.properties['referencia'] !== null ? autolinker.link(feature.properties['referencia'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_PuntosdeInternacion_7_0() {
            return {
                pane: 'pane_PuntosdeInternacion_7',
                shape: 'square',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(213,180,60,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_PuntosdeInternacion_7');
        map.getPane('pane_PuntosdeInternacion_7').style.zIndex = 407;
        map.getPane('pane_PuntosdeInternacion_7').style['mix-blend-mode'] = 'normal';
        var layer_PuntosdeInternacion_7 = new L.geoJson(json_PuntosdeInternacion_7, {
            attribution: '',
            interactive: true,
            dataVar: 'json_PuntosdeInternacion_7',
            layerName: 'layer_PuntosdeInternacion_7',
            pane: 'pane_PuntosdeInternacion_7',
            onEachFeature: pop_PuntosdeInternacion_7,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_PuntosdeInternacion_7_0(feature));
            },
        });
        bounds_group.addLayer(layer_PuntosdeInternacion_7);
        function pop_ComplejosProcesadoresdeGas_8(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>complejo</strong><br />' + (feature.properties['complejo'] !== null ? autolinker.link(feature.properties['complejo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">nmero_de_p</th>\
                        <td>' + (feature.properties['nmero_de_p'] !== null ? autolinker.link(feature.properties['nmero_de_p'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">capacidad_</th>\
                        <td>' + (feature.properties['capacidad_'] !== null ? autolinker.link(feature.properties['capacidad_'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">nmero_de_1</th>\
                        <td>' + (feature.properties['nmero_de_1'] !== null ? autolinker.link(feature.properties['nmero_de_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">capacida_1</th>\
                        <td>' + (feature.properties['capacida_1'] !== null ? autolinker.link(feature.properties['capacida_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">nmero_de_2</th>\
                        <td>' + (feature.properties['nmero_de_2'] !== null ? autolinker.link(feature.properties['nmero_de_2'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">capacida_2</th>\
                        <td>' + (feature.properties['capacida_2'] !== null ? autolinker.link(feature.properties['capacida_2'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">nmero_de_3</th>\
                        <td>' + (feature.properties['nmero_de_3'] !== null ? autolinker.link(feature.properties['nmero_de_3'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">capacida_3</th>\
                        <td>' + (feature.properties['capacida_3'] !== null ? autolinker.link(feature.properties['capacida_3'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">nm_de_perm</th>\
                        <td>' + (feature.properties['nm_de_perm'] !== null ? autolinker.link(feature.properties['nm_de_perm'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ao_de_inic</th>\
                        <td>' + (feature.properties['ao_de_inic'] !== null ? autolinker.link(feature.properties['ao_de_inic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">licenciado</th>\
                        <td>' + (feature.properties['licenciado'] !== null ? autolinker.link(feature.properties['licenciado'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">notas</th>\
                        <td>' + (feature.properties['notas'] !== null ? autolinker.link(feature.properties['notas'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_ComplejosProcesadoresdeGas_8_0() {
            return {
                pane: 'pane_ComplejosProcesadoresdeGas_8',
                shape: 'square',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(243,166,178,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_ComplejosProcesadoresdeGas_8');
        map.getPane('pane_ComplejosProcesadoresdeGas_8').style.zIndex = 408;
        map.getPane('pane_ComplejosProcesadoresdeGas_8').style['mix-blend-mode'] = 'normal';
        var layer_ComplejosProcesadoresdeGas_8 = new L.geoJson(json_ComplejosProcesadoresdeGas_8, {
            attribution: '',
            interactive: true,
            dataVar: 'json_ComplejosProcesadoresdeGas_8',
            layerName: 'layer_ComplejosProcesadoresdeGas_8',
            pane: 'pane_ComplejosProcesadoresdeGas_8',
            onEachFeature: pop_ComplejosProcesadoresdeGas_8,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_ComplejosProcesadoresdeGas_8_0(feature));
            },
        });
        bounds_group.addLayer(layer_ComplejosProcesadoresdeGas_8);
        function pop_ExpendiosaerodromosPetroliferos_9(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de permiso</strong><br />' + (feature.properties['Número de permiso'] !== null ? autolinker.link(feature.properties['Número de permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Razón Social</th>\
                        <td>' + (feature.properties['Razón Social'] !== null ? autolinker.link(feature.properties['Razón Social'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Producto(s)</th>\
                        <td>' + (feature.properties['Producto(s)'] !== null ? autolinker.link(feature.properties['Producto(s)'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Zona geográfica</th>\
                        <td>' + (feature.properties['Zona geográfica'] !== null ? autolinker.link(feature.properties['Zona geográfica'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Calle y número</th>\
                        <td>' + (feature.properties['Calle y número'] !== null ? autolinker.link(feature.properties['Calle y número'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Código postal</th>\
                        <td>' + (feature.properties['Código postal'] !== null ? autolinker.link(feature.properties['Código postal'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Municipio</th>\
                        <td>' + (feature.properties['Municipio'] !== null ? autolinker.link(feature.properties['Municipio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Entidad Federativa</th>\
                        <td>' + (feature.properties['Entidad Federativa'] !== null ? autolinker.link(feature.properties['Entidad Federativa'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_ExpendiosaerodromosPetroliferos_9_0() {
            return {
                pane: 'pane_ExpendiosaerodromosPetroliferos_9',
                shape: 'diamond',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(243,166,178,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_ExpendiosaerodromosPetroliferos_9');
        map.getPane('pane_ExpendiosaerodromosPetroliferos_9').style.zIndex = 409;
        map.getPane('pane_ExpendiosaerodromosPetroliferos_9').style['mix-blend-mode'] = 'normal';
        var layer_ExpendiosaerodromosPetroliferos_9 = new L.geoJson(json_ExpendiosaerodromosPetroliferos_9, {
            attribution: '',
            interactive: true,
            dataVar: 'json_ExpendiosaerodromosPetroliferos_9',
            layerName: 'layer_ExpendiosaerodromosPetroliferos_9',
            pane: 'pane_ExpendiosaerodromosPetroliferos_9',
            onEachFeature: pop_ExpendiosaerodromosPetroliferos_9,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_ExpendiosaerodromosPetroliferos_9_0(feature));
            },
        });
        bounds_group.addLayer(layer_ExpendiosaerodromosPetroliferos_9);
        map.addLayer(layer_ExpendiosaerodromosPetroliferos_9);
        function pop_ExpendiosPetroliferos_10(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>NumeroPermiso</strong><br />' + (feature.properties['NumeroPermiso'] !== null ? autolinker.link(feature.properties['NumeroPermiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Razón social</th>\
                        <td>' + (feature.properties['Razón social'] !== null ? autolinker.link(feature.properties['Razón social'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">FechaOtorgamiento</th>\
                        <td>' + (feature.properties['FechaOtorgamiento'] !== null ? autolinker.link(feature.properties['FechaOtorgamiento'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud_GEO</th>\
                        <td>' + (feature.properties['Latitud_GEO'] !== null ? autolinker.link(feature.properties['Latitud_GEO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud_GEO</th>\
                        <td>' + (feature.properties['Longitud_GEO'] !== null ? autolinker.link(feature.properties['Longitud_GEO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Calle_num_ES</th>\
                        <td>' + (feature.properties['Calle_num_ES'] !== null ? autolinker.link(feature.properties['Calle_num_ES'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Colonia_ES</th>\
                        <td>' + (feature.properties['Colonia_ES'] !== null ? autolinker.link(feature.properties['Colonia_ES'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Entidad_Fed_ES</th>\
                        <td>' + (feature.properties['Entidad_Fed_ES'] !== null ? autolinker.link(feature.properties['Entidad_Fed_ES'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Municipio_ES</th>\
                        <td>' + (feature.properties['Municipio_ES'] !== null ? autolinker.link(feature.properties['Municipio_ES'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Codigo_Postal</th>\
                        <td>' + (feature.properties['Codigo_Postal'] !== null ? autolinker.link(feature.properties['Codigo_Postal'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">UltimaImagenComercialReportada</th>\
                        <td>' + (feature.properties['UltimaImagenComercialReportada'] !== null ? autolinker.link(feature.properties['UltimaImagenComercialReportada'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_ExpendiosPetroliferos_10_0() {
            return {
                pane: 'pane_ExpendiosPetroliferos_10',
                shape: 'diamond',
                radius: 4.4,
                opacity: 1,
                color: 'rgba(255,255,255,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(35,91,78,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_ExpendiosPetroliferos_10');
        map.getPane('pane_ExpendiosPetroliferos_10').style.zIndex = 410;
        map.getPane('pane_ExpendiosPetroliferos_10').style['mix-blend-mode'] = 'normal';
        var layer_ExpendiosPetroliferos_10 = new L.geoJson(json_ExpendiosPetroliferos_10, {
            attribution: '',
            interactive: true,
            dataVar: 'json_ExpendiosPetroliferos_10',
            layerName: 'layer_ExpendiosPetroliferos_10',
            pane: 'pane_ExpendiosPetroliferos_10',
            onEachFeature: pop_ExpendiosPetroliferos_10,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_ExpendiosPetroliferos_10_0(feature));
            },
        });
        bounds_group.addLayer(layer_ExpendiosPetroliferos_10);
        map.addLayer(layer_ExpendiosPetroliferos_10);
        function pop_ComercializacinPetroliferos_11(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>NUM. PERMISO</strong><br />' + (feature.properties['NUM. PERMISO'] !== null ? autolinker.link(feature.properties['NUM. PERMISO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">NOMBRE, RAZÓN SOCIAL, O DENOMINACIÓN DEL SOLICITANTE</th>\
                        <td>' + (feature.properties['NOMBRE, RAZÓN SOCIAL, O DENOMINACIÓN DEL SOLICITANTE'] !== null ? autolinker.link(feature.properties['NOMBRE, RAZÓN SOCIAL, O DENOMINACIÓN DEL SOLICITANTE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">DOMICILIO DE NOTIFICACIONES</th>\
                        <td>' + (feature.properties['DOMICILIO DE NOTIFICACIONES'] !== null ? autolinker.link(feature.properties['DOMICILIO DE NOTIFICACIONES'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Todos los Productos</th>\
                        <td>' + (feature.properties['Todos los Productos'] !== null ? autolinker.link(feature.properties['Todos los Productos'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_ComercializacinPetroliferos_11_0() {
            return {
                pane: 'pane_ComercializacinPetroliferos_11',
                shape: 'diamond',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,231,51,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_ComercializacinPetroliferos_11');
        map.getPane('pane_ComercializacinPetroliferos_11').style.zIndex = 411;
        map.getPane('pane_ComercializacinPetroliferos_11').style['mix-blend-mode'] = 'normal';
        var layer_ComercializacinPetroliferos_11 = new L.geoJson(json_ComercializacinPetroliferos_11, {
            attribution: '',
            interactive: true,
            dataVar: 'json_ComercializacinPetroliferos_11',
            layerName: 'layer_ComercializacinPetroliferos_11',
            pane: 'pane_ComercializacinPetroliferos_11',
            onEachFeature: pop_ComercializacinPetroliferos_11,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_ComercializacinPetroliferos_11_0(feature));
            },
        });
        bounds_group.addLayer(layer_ComercializacinPetroliferos_11);
        map.addLayer(layer_ComercializacinPetroliferos_11);
        function pop_TransportedistintoaductoPetroliferos_12(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de permiso</strong><br />' + (feature.properties['Número de permiso'] !== null ? autolinker.link(feature.properties['Número de permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Razón Social</th>\
                        <td>' + (feature.properties['Razón Social'] !== null ? autolinker.link(feature.properties['Razón Social'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Producto(s)</th>\
                        <td>' + (feature.properties['Producto(s)'] !== null ? autolinker.link(feature.properties['Producto(s)'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Zona geográfica</th>\
                        <td>' + (feature.properties['Zona geográfica'] !== null ? autolinker.link(feature.properties['Zona geográfica'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Calle y número</th>\
                        <td>' + (feature.properties['Calle y número'] !== null ? autolinker.link(feature.properties['Calle y número'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Código postal</th>\
                        <td>' + (feature.properties['Código postal'] !== null ? autolinker.link(feature.properties['Código postal'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Municipio</th>\
                        <td>' + (feature.properties['Municipio'] !== null ? autolinker.link(feature.properties['Municipio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Entidad Federativa</th>\
                        <td>' + (feature.properties['Entidad Federativa'] !== null ? autolinker.link(feature.properties['Entidad Federativa'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_TransportedistintoaductoPetroliferos_12_0() {
            return {
                pane: 'pane_TransportedistintoaductoPetroliferos_12',
                shape: 'diamond',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,101,157,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_TransportedistintoaductoPetroliferos_12');
        map.getPane('pane_TransportedistintoaductoPetroliferos_12').style.zIndex = 412;
        map.getPane('pane_TransportedistintoaductoPetroliferos_12').style['mix-blend-mode'] = 'normal';
        var layer_TransportedistintoaductoPetroliferos_12 = new L.geoJson(json_TransportedistintoaductoPetroliferos_12, {
            attribution: '',
            interactive: true,
            dataVar: 'json_TransportedistintoaductoPetroliferos_12',
            layerName: 'layer_TransportedistintoaductoPetroliferos_12',
            pane: 'pane_TransportedistintoaductoPetroliferos_12',
            onEachFeature: pop_TransportedistintoaductoPetroliferos_12,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_TransportedistintoaductoPetroliferos_12_0(feature));
            },
        });
        bounds_group.addLayer(layer_TransportedistintoaductoPetroliferos_12);
        map.addLayer(layer_TransportedistintoaductoPetroliferos_12);
        function pop_DuctosPetroliferos_13(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">regin</th>\
                        <td>' + (feature.properties['regin'] !== null ? autolinker.link(feature.properties['regin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ducto</th>\
                        <td>' + (feature.properties['ducto'] !== null ? autolinker.link(feature.properties['ducto'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">servicio</th>\
                        <td>' + (feature.properties['servicio'] !== null ? autolinker.link(feature.properties['servicio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">longitud</th>\
                        <td>' + (feature.properties['longitud'] !== null ? autolinker.link(feature.properties['longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">capacidad_</th>\
                        <td>' + (feature.properties['capacidad_'] !== null ? autolinker.link(feature.properties['capacidad_'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">capacida_1</th>\
                        <td>' + (feature.properties['capacida_1'] !== null ? autolinker.link(feature.properties['capacida_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_DuctosPetroliferos_13_0() {
            return {
                pane: 'pane_DuctosPetroliferos_13',
                opacity: 1,
                color: 'rgba(0,0,0,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_DuctosPetroliferos_13');
        map.getPane('pane_DuctosPetroliferos_13').style.zIndex = 413;
        map.getPane('pane_DuctosPetroliferos_13').style['mix-blend-mode'] = 'normal';
        var layer_DuctosPetroliferos_13 = new L.geoJson(json_DuctosPetroliferos_13, {
            attribution: '',
            interactive: true,
            dataVar: 'json_DuctosPetroliferos_13',
            layerName: 'layer_DuctosPetroliferos_13',
            pane: 'pane_DuctosPetroliferos_13',
            onEachFeature: pop_DuctosPetroliferos_13,
            style: style_DuctosPetroliferos_13_0,
        });
        bounds_group.addLayer(layer_DuctosPetroliferos_13);
        map.addLayer(layer_DuctosPetroliferos_13);
        function pop_AlmacenamientoaerodromosPetroliferos_14(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de permiso</strong><br />' + (feature.properties['Número de permiso'] !== null ? autolinker.link(feature.properties['Número de permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Razón Social</th>\
                        <td>' + (feature.properties['Razón Social'] !== null ? autolinker.link(feature.properties['Razón Social'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Producto(s)</th>\
                        <td>' + (feature.properties['Producto(s)'] !== null ? autolinker.link(feature.properties['Producto(s)'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Zona geográfica</th>\
                        <td>' + (feature.properties['Zona geográfica'] !== null ? autolinker.link(feature.properties['Zona geográfica'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Calle y número</th>\
                        <td>' + (feature.properties['Calle y número'] !== null ? autolinker.link(feature.properties['Calle y número'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Código postal</th>\
                        <td>' + (feature.properties['Código postal'] !== null ? autolinker.link(feature.properties['Código postal'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Municipio</th>\
                        <td>' + (feature.properties['Municipio'] !== null ? autolinker.link(feature.properties['Municipio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Entidad Federativa</th>\
                        <td>' + (feature.properties['Entidad Federativa'] !== null ? autolinker.link(feature.properties['Entidad Federativa'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_AlmacenamientoaerodromosPetroliferos_14_0() {
            return {
                pane: 'pane_AlmacenamientoaerodromosPetroliferos_14',
                shape: 'diamond',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(182,35,219,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_AlmacenamientoaerodromosPetroliferos_14');
        map.getPane('pane_AlmacenamientoaerodromosPetroliferos_14').style.zIndex = 414;
        map.getPane('pane_AlmacenamientoaerodromosPetroliferos_14').style['mix-blend-mode'] = 'normal';
        var layer_AlmacenamientoaerodromosPetroliferos_14 = new L.geoJson(json_AlmacenamientoaerodromosPetroliferos_14, {
            attribution: '',
            interactive: true,
            dataVar: 'json_AlmacenamientoaerodromosPetroliferos_14',
            layerName: 'layer_AlmacenamientoaerodromosPetroliferos_14',
            pane: 'pane_AlmacenamientoaerodromosPetroliferos_14',
            onEachFeature: pop_AlmacenamientoaerodromosPetroliferos_14,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_AlmacenamientoaerodromosPetroliferos_14_0(feature));
            },
        });
        bounds_group.addLayer(layer_AlmacenamientoaerodromosPetroliferos_14);
        map.addLayer(layer_AlmacenamientoaerodromosPetroliferos_14);
        function pop_AlmacenamientoPetroliferos_15(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de permiso</strong><br />' + (feature.properties['Número de permiso'] !== null ? autolinker.link(feature.properties['Número de permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Razón Social</th>\
                        <td>' + (feature.properties['Razón Social'] !== null ? autolinker.link(feature.properties['Razón Social'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Producto(s)</th>\
                        <td>' + (feature.properties['Producto(s)'] !== null ? autolinker.link(feature.properties['Producto(s)'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Zona geográfica</th>\
                        <td>' + (feature.properties['Zona geográfica'] !== null ? autolinker.link(feature.properties['Zona geográfica'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Calle y número</th>\
                        <td>' + (feature.properties['Calle y número'] !== null ? autolinker.link(feature.properties['Calle y número'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Código postal</th>\
                        <td>' + (feature.properties['Código postal'] !== null ? autolinker.link(feature.properties['Código postal'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Municipio</th>\
                        <td>' + (feature.properties['Municipio'] !== null ? autolinker.link(feature.properties['Municipio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Entidad Federativa</th>\
                        <td>' + (feature.properties['Entidad Federativa'] !== null ? autolinker.link(feature.properties['Entidad Federativa'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_AlmacenamientoPetroliferos_15_0() {
            return {
                pane: 'pane_AlmacenamientoPetroliferos_15',
                shape: 'diamond',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(0,0,0,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(0,194,212,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_AlmacenamientoPetroliferos_15');
        map.getPane('pane_AlmacenamientoPetroliferos_15').style.zIndex = 415;
        map.getPane('pane_AlmacenamientoPetroliferos_15').style['mix-blend-mode'] = 'normal';
        var layer_AlmacenamientoPetroliferos_15 = new L.geoJson(json_AlmacenamientoPetroliferos_15, {
            attribution: '',
            interactive: true,
            dataVar: 'json_AlmacenamientoPetroliferos_15',
            layerName: 'layer_AlmacenamientoPetroliferos_15',
            pane: 'pane_AlmacenamientoPetroliferos_15',
            onEachFeature: pop_AlmacenamientoPetroliferos_15,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_AlmacenamientoPetroliferos_15_0(feature));
            },
        });
        bounds_group.addLayer(layer_AlmacenamientoPetroliferos_15);
        map.addLayer(layer_AlmacenamientoPetroliferos_15);
        function pop_TerminaldeAlmacenamiento_16(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">regin</th>\
                        <td>' + (feature.properties['regin'] !== null ? autolinker.link(feature.properties['regin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">nombre</th>\
                        <td>' + (feature.properties['nombre'] !== null ? autolinker.link(feature.properties['nombre'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">capacidad </th>\
                        <td>' + (feature.properties['capacidad '] !== null ? autolinker.link(feature.properties['capacidad '].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">capacidad _1</th>\
                        <td>' + (feature.properties['capacidad _1'] !== null ? autolinker.link(feature.properties['capacidad _1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">capacidad _2</th>\
                        <td>' + (feature.properties['capacidad _2'] !== null ? autolinker.link(feature.properties['capacidad _2'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">medio de s</th>\
                        <td>' + (feature.properties['medio de s'] !== null ? autolinker.link(feature.properties['medio de s'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_TerminaldeAlmacenamiento_16_0() {
            return {
                pane: 'pane_TerminaldeAlmacenamiento_16',
                shape: 'diamond',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(183,72,75,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_TerminaldeAlmacenamiento_16');
        map.getPane('pane_TerminaldeAlmacenamiento_16').style.zIndex = 416;
        map.getPane('pane_TerminaldeAlmacenamiento_16').style['mix-blend-mode'] = 'normal';
        var layer_TerminaldeAlmacenamiento_16 = new L.geoJson(json_TerminaldeAlmacenamiento_16, {
            attribution: '',
            interactive: true,
            dataVar: 'json_TerminaldeAlmacenamiento_16',
            layerName: 'layer_TerminaldeAlmacenamiento_16',
            pane: 'pane_TerminaldeAlmacenamiento_16',
            onEachFeature: pop_TerminaldeAlmacenamiento_16,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_TerminaldeAlmacenamiento_16_0(feature));
            },
        });
        bounds_group.addLayer(layer_TerminaldeAlmacenamiento_16);
        map.addLayer(layer_TerminaldeAlmacenamiento_16);
        function pop_ExpendiosGasLP_17(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de Permiso CRE</strong><br />' + (feature.properties['Número de Permiso CRE'] !== null ? autolinker.link(feature.properties['Número de Permiso CRE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Domicilio</th>\
                        <td>' + (feature.properties['Domicilio'] !== null ? autolinker.link(feature.properties['Domicilio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Expediente</th>\
                        <td>' + (feature.properties['Expediente'] !== null ? autolinker.link(feature.properties['Expediente'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Nombre, Denominación o Razón Social</th>\
                        <td>' + (feature.properties['Nombre, Denominación o Razón Social'] !== null ? autolinker.link(feature.properties['Nombre, Denominación o Razón Social'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo de Permiso</th>\
                        <td>' + (feature.properties['Tipo de Permiso'] !== null ? autolinker.link(feature.properties['Tipo de Permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Sub Tipo de Permiso</th>\
                        <td>' + (feature.properties['Sub Tipo de Permiso'] !== null ? autolinker.link(feature.properties['Sub Tipo de Permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Vigencia del Permiso</th>\
                        <td>' + (feature.properties['Vigencia del Permiso'] !== null ? autolinker.link(feature.properties['Vigencia del Permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Año de Otorgamiento</th>\
                        <td>' + (feature.properties['Año de Otorgamiento'] !== null ? autolinker.link(feature.properties['Año de Otorgamiento'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de Otorgamiento</th>\
                        <td>' + (feature.properties['Fecha de Otorgamiento'] !== null ? autolinker.link(feature.properties['Fecha de Otorgamiento'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de Acuse</th>\
                        <td>' + (feature.properties['Fecha de Acuse'] !== null ? autolinker.link(feature.properties['Fecha de Acuse'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de Inicio de Operaciones</th>\
                        <td>' + (feature.properties['Fecha de Inicio de Operaciones'] !== null ? autolinker.link(feature.properties['Fecha de Inicio de Operaciones'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Clasificación de permiso para el SAT</th>\
                        <td>' + (feature.properties['Clasificación de permiso para el SAT'] !== null ? autolinker.link(feature.properties['Clasificación de permiso para el SAT'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estatus del permiso</th>\
                        <td>' + (feature.properties['Estatus del permiso'] !== null ? autolinker.link(feature.properties['Estatus del permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Marca Comercial</th>\
                        <td>' + (feature.properties['Marca Comercial'] !== null ? autolinker.link(feature.properties['Marca Comercial'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad en litros de la Instalación</th>\
                        <td>' + (feature.properties['Capacidad en litros de la Instalación'] !== null ? autolinker.link(feature.properties['Capacidad en litros de la Instalación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad en kg de capacidad</th>\
                        <td>' + (feature.properties['Capacidad en kg de capacidad'] !== null ? autolinker.link(feature.properties['Capacidad en kg de capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Asociación</th>\
                        <td>' + (feature.properties['Asociación'] !== null ? autolinker.link(feature.properties['Asociación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">GIE</th>\
                        <td>' + (feature.properties['GIE'] !== null ? autolinker.link(feature.properties['GIE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_ExpendiosGasLP_17_0() {
            return {
                pane: 'pane_ExpendiosGasLP_17',
                radius: 4.4,
                opacity: 1,
                color: 'rgba(0,0,0,0.5450980392156862)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,127,0,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_ExpendiosGasLP_17');
        map.getPane('pane_ExpendiosGasLP_17').style.zIndex = 417;
        map.getPane('pane_ExpendiosGasLP_17').style['mix-blend-mode'] = 'normal';
        var layer_ExpendiosGasLP_17 = new L.geoJson(json_ExpendiosGasLP_17, {
            attribution: '',
            interactive: true,
            dataVar: 'json_ExpendiosGasLP_17',
            layerName: 'layer_ExpendiosGasLP_17',
            pane: 'pane_ExpendiosGasLP_17',
            onEachFeature: pop_ExpendiosGasLP_17,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.circleMarker(latlng, style_ExpendiosGasLP_17_0(feature));
            },
        });
        bounds_group.addLayer(layer_ExpendiosGasLP_17);
        function pop_DistribucinGasLP_18(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de Permiso CRE</strong><br />' + (feature.properties['Número de Permiso CRE'] !== null ? autolinker.link(feature.properties['Número de Permiso CRE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Domicilio</th>\
                        <td>' + (feature.properties['Domicilio'] !== null ? autolinker.link(feature.properties['Domicilio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Expediente</th>\
                        <td>' + (feature.properties['Expediente'] !== null ? autolinker.link(feature.properties['Expediente'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Número de Permiso SENER</th>\
                        <td>' + (feature.properties['Número de Permiso SENER'] !== null ? autolinker.link(feature.properties['Número de Permiso SENER'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Nombre, Denominación o Razón Social</th>\
                        <td>' + (feature.properties['Nombre, Denominación o Razón Social'] !== null ? autolinker.link(feature.properties['Nombre, Denominación o Razón Social'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">RFC Permisionario</th>\
                        <td>' + (feature.properties['RFC Permisionario'] !== null ? autolinker.link(feature.properties['RFC Permisionario'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo de Permiso</th>\
                        <td>' + (feature.properties['Tipo de Permiso'] !== null ? autolinker.link(feature.properties['Tipo de Permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Siglas Tipo de Permiso</th>\
                        <td>' + (feature.properties['Siglas Tipo de Permiso'] !== null ? autolinker.link(feature.properties['Siglas Tipo de Permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Vigencia del Permiso</th>\
                        <td>' + (feature.properties['Vigencia del Permiso'] !== null ? autolinker.link(feature.properties['Vigencia del Permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Año de Otorgamiento</th>\
                        <td>' + (feature.properties['Año de Otorgamiento'] !== null ? autolinker.link(feature.properties['Año de Otorgamiento'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de Otorgamiento</th>\
                        <td>' + (feature.properties['Fecha de Otorgamiento'] !== null ? autolinker.link(feature.properties['Fecha de Otorgamiento'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de Acuse</th>\
                        <td>' + (feature.properties['Fecha de Acuse'] !== null ? autolinker.link(feature.properties['Fecha de Acuse'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de Inicio de Operaciones</th>\
                        <td>' + (feature.properties['Fecha de Inicio de Operaciones'] !== null ? autolinker.link(feature.properties['Fecha de Inicio de Operaciones'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Clasificación de permiso para el SAT</th>\
                        <td>' + (feature.properties['Clasificación de permiso para el SAT'] !== null ? autolinker.link(feature.properties['Clasificación de permiso para el SAT'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estatus del permiso</th>\
                        <td>' + (feature.properties['Estatus del permiso'] !== null ? autolinker.link(feature.properties['Estatus del permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subestatus</th>\
                        <td>' + (feature.properties['Subestatus'] !== null ? autolinker.link(feature.properties['Subestatus'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Marca Comercial</th>\
                        <td>' + (feature.properties['Marca Comercial'] !== null ? autolinker.link(feature.properties['Marca Comercial'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad en litros de la Instalación</th>\
                        <td>' + (feature.properties['Capacidad en litros de la Instalación'] !== null ? autolinker.link(feature.properties['Capacidad en litros de la Instalación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">No de Tanques de la Instalación</th>\
                        <td>' + (feature.properties['No de Tanques de la Instalación'] !== null ? autolinker.link(feature.properties['No de Tanques de la Instalación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad en litros unidades Parque Vehicular 3</th>\
                        <td>' + (feature.properties['Capacidad en litros unidades Parque Vehicular 3'] !== null ? autolinker.link(feature.properties['Capacidad en litros unidades Parque Vehicular 3'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">No de unidades Parque Vehicular 3</th>\
                        <td>' + (feature.properties['No de unidades Parque Vehicular 3'] !== null ? autolinker.link(feature.properties['No de unidades Parque Vehicular 3'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">No de Centrales de Guarda</th>\
                        <td>' + (feature.properties['No de Centrales de Guarda'] !== null ? autolinker.link(feature.properties['No de Centrales de Guarda'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Domicilio Central de Guarda</th>\
                        <td>' + (feature.properties['Domicilio Central de Guarda'] !== null ? autolinker.link(feature.properties['Domicilio Central de Guarda'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Medio de suministro o recepción</th>\
                        <td>' + (feature.properties['Medio de suministro o recepción'] !== null ? autolinker.link(feature.properties['Medio de suministro o recepción'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Comparten tanques</th>\
                        <td>' + (feature.properties['Comparten tanques'] !== null ? autolinker.link(feature.properties['Comparten tanques'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de la modificación</th>\
                        <td>' + (feature.properties['Fecha de la modificación'] !== null ? autolinker.link(feature.properties['Fecha de la modificación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Asociación</th>\
                        <td>' + (feature.properties['Asociación'] !== null ? autolinker.link(feature.properties['Asociación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">GIE</th>\
                        <td>' + (feature.properties['GIE'] !== null ? autolinker.link(feature.properties['GIE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado</th>\
                        <td>' + (feature.properties['Estado'] !== null ? autolinker.link(feature.properties['Estado'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_DistribucinGasLP_18_0() {
            return {
                pane: 'pane_DistribucinGasLP_18',
                radius: 4.4,
                opacity: 1,
                color: 'rgba(0,0,0,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(4,255,255,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_DistribucinGasLP_18');
        map.getPane('pane_DistribucinGasLP_18').style.zIndex = 418;
        map.getPane('pane_DistribucinGasLP_18').style['mix-blend-mode'] = 'normal';
        var layer_DistribucinGasLP_18 = new L.geoJson(json_DistribucinGasLP_18, {
            attribution: '',
            interactive: true,
            dataVar: 'json_DistribucinGasLP_18',
            layerName: 'layer_DistribucinGasLP_18',
            pane: 'pane_DistribucinGasLP_18',
            onEachFeature: pop_DistribucinGasLP_18,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.circleMarker(latlng, style_DistribucinGasLP_18_0(feature));
            },
        });
        bounds_group.addLayer(layer_DistribucinGasLP_18);
        function pop_DuctosGasLP_19(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">regin</th>\
                        <td>' + (feature.properties['regin'] !== null ? autolinker.link(feature.properties['regin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ducto</th>\
                        <td>' + (feature.properties['ducto'] !== null ? autolinker.link(feature.properties['ducto'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">servicio</th>\
                        <td>' + (feature.properties['servicio'] !== null ? autolinker.link(feature.properties['servicio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">longitud</th>\
                        <td>' + (feature.properties['longitud'] !== null ? autolinker.link(feature.properties['longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">capacidad_</th>\
                        <td>' + (feature.properties['capacidad_'] !== null ? autolinker.link(feature.properties['capacidad_'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">capacida_1</th>\
                        <td>' + (feature.properties['capacida_1'] !== null ? autolinker.link(feature.properties['capacida_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_DuctosGasLP_19_0() {
            return {
                pane: 'pane_DuctosGasLP_19',
                opacity: 1,
                color: 'rgba(147,158,255,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_DuctosGasLP_19');
        map.getPane('pane_DuctosGasLP_19').style.zIndex = 419;
        map.getPane('pane_DuctosGasLP_19').style['mix-blend-mode'] = 'normal';
        var layer_DuctosGasLP_19 = new L.geoJson(json_DuctosGasLP_19, {
            attribution: '',
            interactive: true,
            dataVar: 'json_DuctosGasLP_19',
            layerName: 'layer_DuctosGasLP_19',
            pane: 'pane_DuctosGasLP_19',
            onEachFeature: pop_DuctosGasLP_19,
            style: style_DuctosGasLP_19_0,
        });
        bounds_group.addLayer(layer_DuctosGasLP_19);
        function pop_AlmacenamientoGasLP_20(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de Permiso CRE</strong><br />' + (feature.properties['Número de Permiso CRE'] !== null ? autolinker.link(feature.properties['Número de Permiso CRE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Domicilio</th>\
                        <td>' + (feature.properties['Domicilio'] !== null ? autolinker.link(feature.properties['Domicilio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Expediente</th>\
                        <td>' + (feature.properties['Expediente'] !== null ? autolinker.link(feature.properties['Expediente'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Nombre, Denominación o Razón Social</th>\
                        <td>' + (feature.properties['Nombre, Denominación o Razón Social'] !== null ? autolinker.link(feature.properties['Nombre, Denominación o Razón Social'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo de Permiso</th>\
                        <td>' + (feature.properties['Tipo de Permiso'] !== null ? autolinker.link(feature.properties['Tipo de Permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Vigencia del Permiso</th>\
                        <td>' + (feature.properties['Vigencia del Permiso'] !== null ? autolinker.link(feature.properties['Vigencia del Permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Año de Otorgamiento</th>\
                        <td>' + (feature.properties['Año de Otorgamiento'] !== null ? autolinker.link(feature.properties['Año de Otorgamiento'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de Otorgamiento</th>\
                        <td>' + (feature.properties['Fecha de Otorgamiento'] !== null ? autolinker.link(feature.properties['Fecha de Otorgamiento'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de Acuse</th>\
                        <td>' + (feature.properties['Fecha de Acuse'] !== null ? autolinker.link(feature.properties['Fecha de Acuse'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de Inicio de Operaciones</th>\
                        <td>' + (feature.properties['Fecha de Inicio de Operaciones'] !== null ? autolinker.link(feature.properties['Fecha de Inicio de Operaciones'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Clasificación de permiso para el SAT</th>\
                        <td>' + (feature.properties['Clasificación de permiso para el SAT'] !== null ? autolinker.link(feature.properties['Clasificación de permiso para el SAT'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estatus del permiso</th>\
                        <td>' + (feature.properties['Estatus del permiso'] !== null ? autolinker.link(feature.properties['Estatus del permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subestatus</th>\
                        <td>' + (feature.properties['Subestatus'] !== null ? autolinker.link(feature.properties['Subestatus'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">inicio de Periodo de Suspensión</th>\
                        <td>' + (feature.properties['inicio de Periodo de Suspensión'] !== null ? autolinker.link(feature.properties['inicio de Periodo de Suspensión'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fin de Periodo de Suspensión</th>\
                        <td>' + (feature.properties['Fin de Periodo de Suspensión'] !== null ? autolinker.link(feature.properties['Fin de Periodo de Suspensión'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Marca Comercial</th>\
                        <td>' + (feature.properties['Marca Comercial'] !== null ? autolinker.link(feature.properties['Marca Comercial'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad en litros de la Instalación</th>\
                        <td>' + (feature.properties['Capacidad en litros de la Instalación'] !== null ? autolinker.link(feature.properties['Capacidad en litros de la Instalación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">No de Tanques de la Instalación</th>\
                        <td>' + (feature.properties['No de Tanques de la Instalación'] !== null ? autolinker.link(feature.properties['No de Tanques de la Instalación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Medio de suministro o recepción</th>\
                        <td>' + (feature.properties['Medio de suministro o recepción'] !== null ? autolinker.link(feature.properties['Medio de suministro o recepción'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permiso del medio de Suministro</th>\
                        <td>' + (feature.properties['Permiso del medio de Suministro'] !== null ? autolinker.link(feature.properties['Permiso del medio de Suministro'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">GIE</th>\
                        <td>' + (feature.properties['GIE'] !== null ? autolinker.link(feature.properties['GIE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado</th>\
                        <td>' + (feature.properties['Estado'] !== null ? autolinker.link(feature.properties['Estado'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_AlmacenamientoGasLP_20_0() {
            return {
                pane: 'pane_AlmacenamientoGasLP_20',
                radius: 4.4,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(159,161,164,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_AlmacenamientoGasLP_20');
        map.getPane('pane_AlmacenamientoGasLP_20').style.zIndex = 420;
        map.getPane('pane_AlmacenamientoGasLP_20').style['mix-blend-mode'] = 'normal';
        var layer_AlmacenamientoGasLP_20 = new L.geoJson(json_AlmacenamientoGasLP_20, {
            attribution: '',
            interactive: true,
            dataVar: 'json_AlmacenamientoGasLP_20',
            layerName: 'layer_AlmacenamientoGasLP_20',
            pane: 'pane_AlmacenamientoGasLP_20',
            onEachFeature: pop_AlmacenamientoGasLP_20,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.circleMarker(latlng, style_AlmacenamientoGasLP_20_0(feature));
            },
        });
        bounds_group.addLayer(layer_AlmacenamientoGasLP_20);
        function pop_Eoloelectrica_21(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Eoloelectrica_21_0() {
            return {
                pane: 'pane_Eoloelectrica_21',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(138,254,250,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_Eoloelectrica_21');
        map.getPane('pane_Eoloelectrica_21').style.zIndex = 421;
        map.getPane('pane_Eoloelectrica_21').style['mix-blend-mode'] = 'normal';
        var layer_Eoloelectrica_21 = new L.geoJson(json_Eoloelectrica_21, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Eoloelectrica_21',
            layerName: 'layer_Eoloelectrica_21',
            pane: 'pane_Eoloelectrica_21',
            onEachFeature: pop_Eoloelectrica_21,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_Eoloelectrica_21_0(feature));
            },
        });
        bounds_group.addLayer(layer_Eoloelectrica_21);
        function pop_Nucleoelectrica_22(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Nucleoelectrica_22_0() {
            return {
                pane: 'pane_Nucleoelectrica_22',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(152,255,73,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_Nucleoelectrica_22');
        map.getPane('pane_Nucleoelectrica_22').style.zIndex = 422;
        map.getPane('pane_Nucleoelectrica_22').style['mix-blend-mode'] = 'normal';
        var layer_Nucleoelectrica_22 = new L.geoJson(json_Nucleoelectrica_22, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Nucleoelectrica_22',
            layerName: 'layer_Nucleoelectrica_22',
            pane: 'pane_Nucleoelectrica_22',
            onEachFeature: pop_Nucleoelectrica_22,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_Nucleoelectrica_22_0(feature));
            },
        });
        bounds_group.addLayer(layer_Nucleoelectrica_22);
        function pop_GeneracinporResiduos_23(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_GeneracinporResiduos_23_0() {
            return {
                pane: 'pane_GeneracinporResiduos_23',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(80,65,7,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_GeneracinporResiduos_23');
        map.getPane('pane_GeneracinporResiduos_23').style.zIndex = 423;
        map.getPane('pane_GeneracinporResiduos_23').style['mix-blend-mode'] = 'normal';
        var layer_GeneracinporResiduos_23 = new L.geoJson(json_GeneracinporResiduos_23, {
            attribution: '',
            interactive: true,
            dataVar: 'json_GeneracinporResiduos_23',
            layerName: 'layer_GeneracinporResiduos_23',
            pane: 'pane_GeneracinporResiduos_23',
            onEachFeature: pop_GeneracinporResiduos_23,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_GeneracinporResiduos_23_0(feature));
            },
        });
        bounds_group.addLayer(layer_GeneracinporResiduos_23);
        function pop_Importacin_24(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Importacin_24_0() {
            return {
                pane: 'pane_Importacin_24',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(151,154,255,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_Importacin_24');
        map.getPane('pane_Importacin_24').style.zIndex = 424;
        map.getPane('pane_Importacin_24').style['mix-blend-mode'] = 'normal';
        var layer_Importacin_24 = new L.geoJson(json_Importacin_24, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Importacin_24',
            layerName: 'layer_Importacin_24',
            pane: 'pane_Importacin_24',
            onEachFeature: pop_Importacin_24,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_Importacin_24_0(feature));
            },
        });
        bounds_group.addLayer(layer_Importacin_24);
        function pop_Energiacinetica_25(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Energiacinetica_25_0() {
            return {
                pane: 'pane_Energiacinetica_25',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(145,82,45,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_Energiacinetica_25');
        map.getPane('pane_Energiacinetica_25').style.zIndex = 425;
        map.getPane('pane_Energiacinetica_25').style['mix-blend-mode'] = 'normal';
        var layer_Energiacinetica_25 = new L.geoJson(json_Energiacinetica_25, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Energiacinetica_25',
            layerName: 'layer_Energiacinetica_25',
            pane: 'pane_Energiacinetica_25',
            onEachFeature: pop_Energiacinetica_25,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_Energiacinetica_25_0(feature));
            },
        });
        bounds_group.addLayer(layer_Energiacinetica_25);
        function pop_LechoFluidazo_26(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_LechoFluidazo_26_0() {
            return {
                pane: 'pane_LechoFluidazo_26',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(225,89,137,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_LechoFluidazo_26');
        map.getPane('pane_LechoFluidazo_26').style.zIndex = 426;
        map.getPane('pane_LechoFluidazo_26').style['mix-blend-mode'] = 'normal';
        var layer_LechoFluidazo_26 = new L.geoJson(json_LechoFluidazo_26, {
            attribution: '',
            interactive: true,
            dataVar: 'json_LechoFluidazo_26',
            layerName: 'layer_LechoFluidazo_26',
            pane: 'pane_LechoFluidazo_26',
            onEachFeature: pop_LechoFluidazo_26,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_LechoFluidazo_26_0(feature));
            },
        });
        bounds_group.addLayer(layer_LechoFluidazo_26);
        function pop_Carboelectrica_27(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Carboelectrica_27_0() {
            return {
                pane: 'pane_Carboelectrica_27',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(21,8,9,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_Carboelectrica_27');
        map.getPane('pane_Carboelectrica_27').style.zIndex = 427;
        map.getPane('pane_Carboelectrica_27').style['mix-blend-mode'] = 'normal';
        var layer_Carboelectrica_27 = new L.geoJson(json_Carboelectrica_27, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Carboelectrica_27',
            layerName: 'layer_Carboelectrica_27',
            pane: 'pane_Carboelectrica_27',
            onEachFeature: pop_Carboelectrica_27,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_Carboelectrica_27_0(feature));
            },
        });
        bounds_group.addLayer(layer_Carboelectrica_27);
        function pop_Geotermica_28(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Geotermica_28_0() {
            return {
                pane: 'pane_Geotermica_28',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,143,39,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_Geotermica_28');
        map.getPane('pane_Geotermica_28').style.zIndex = 428;
        map.getPane('pane_Geotermica_28').style['mix-blend-mode'] = 'normal';
        var layer_Geotermica_28 = new L.geoJson(json_Geotermica_28, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Geotermica_28',
            layerName: 'layer_Geotermica_28',
            pane: 'pane_Geotermica_28',
            onEachFeature: pop_Geotermica_28,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_Geotermica_28_0(feature));
            },
        });
        bounds_group.addLayer(layer_Geotermica_28);
        function pop_TurbinadeVaporvapor_29(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_TurbinadeVaporvapor_29_0() {
            return {
                pane: 'pane_TurbinadeVaporvapor_29',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(225,89,137,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_TurbinadeVaporvapor_29');
        map.getPane('pane_TurbinadeVaporvapor_29').style.zIndex = 429;
        map.getPane('pane_TurbinadeVaporvapor_29').style['mix-blend-mode'] = 'normal';
        var layer_TurbinadeVaporvapor_29 = new L.geoJson(json_TurbinadeVaporvapor_29, {
            attribution: '',
            interactive: true,
            dataVar: 'json_TurbinadeVaporvapor_29',
            layerName: 'layer_TurbinadeVaporvapor_29',
            pane: 'pane_TurbinadeVaporvapor_29',
            onEachFeature: pop_TurbinadeVaporvapor_29,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_TurbinadeVaporvapor_29_0(feature));
            },
        });
        bounds_group.addLayer(layer_TurbinadeVaporvapor_29);
        function pop_TurbinadeVaporCombustoleo_30(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_TurbinadeVaporCombustoleo_30_0() {
            return {
                pane: 'pane_TurbinadeVaporCombustoleo_30',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(152,125,183,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_TurbinadeVaporCombustoleo_30');
        map.getPane('pane_TurbinadeVaporCombustoleo_30').style.zIndex = 430;
        map.getPane('pane_TurbinadeVaporCombustoleo_30').style['mix-blend-mode'] = 'normal';
        var layer_TurbinadeVaporCombustoleo_30 = new L.geoJson(json_TurbinadeVaporCombustoleo_30, {
            attribution: '',
            interactive: true,
            dataVar: 'json_TurbinadeVaporCombustoleo_30',
            layerName: 'layer_TurbinadeVaporCombustoleo_30',
            pane: 'pane_TurbinadeVaporCombustoleo_30',
            onEachFeature: pop_TurbinadeVaporCombustoleo_30,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_TurbinadeVaporCombustoleo_30_0(feature));
            },
        });
        bounds_group.addLayer(layer_TurbinadeVaporCombustoleo_30);
        function pop_TurbinadeVaporBiomasa_31(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_TurbinadeVaporBiomasa_31_0() {
            return {
                pane: 'pane_TurbinadeVaporBiomasa_31',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(243,166,178,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_TurbinadeVaporBiomasa_31');
        map.getPane('pane_TurbinadeVaporBiomasa_31').style.zIndex = 431;
        map.getPane('pane_TurbinadeVaporBiomasa_31').style['mix-blend-mode'] = 'normal';
        var layer_TurbinadeVaporBiomasa_31 = new L.geoJson(json_TurbinadeVaporBiomasa_31, {
            attribution: '',
            interactive: true,
            dataVar: 'json_TurbinadeVaporBiomasa_31',
            layerName: 'layer_TurbinadeVaporBiomasa_31',
            pane: 'pane_TurbinadeVaporBiomasa_31',
            onEachFeature: pop_TurbinadeVaporBiomasa_31,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_TurbinadeVaporBiomasa_31_0(feature));
            },
        });
        bounds_group.addLayer(layer_TurbinadeVaporBiomasa_31);
        function pop_TurbinadeVaporBagazodecaa_32(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_TurbinadeVaporBagazodecaa_32_0() {
            return {
                pane: 'pane_TurbinadeVaporBagazodecaa_32',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(133,182,111,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_TurbinadeVaporBagazodecaa_32');
        map.getPane('pane_TurbinadeVaporBagazodecaa_32').style.zIndex = 432;
        map.getPane('pane_TurbinadeVaporBagazodecaa_32').style['mix-blend-mode'] = 'normal';
        var layer_TurbinadeVaporBagazodecaa_32 = new L.geoJson(json_TurbinadeVaporBagazodecaa_32, {
            attribution: '',
            interactive: true,
            dataVar: 'json_TurbinadeVaporBagazodecaa_32',
            layerName: 'layer_TurbinadeVaporBagazodecaa_32',
            pane: 'pane_TurbinadeVaporBagazodecaa_32',
            onEachFeature: pop_TurbinadeVaporBagazodecaa_32,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_TurbinadeVaporBagazodecaa_32_0(feature));
            },
        });
        bounds_group.addLayer(layer_TurbinadeVaporBagazodecaa_32);
        function pop_TurbinadeGasReaccinquimica_33(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_TurbinadeGasReaccinquimica_33_0() {
            return {
                pane: 'pane_TurbinadeGasReaccinquimica_33',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(196,40,66,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_TurbinadeGasReaccinquimica_33');
        map.getPane('pane_TurbinadeGasReaccinquimica_33').style.zIndex = 433;
        map.getPane('pane_TurbinadeGasReaccinquimica_33').style['mix-blend-mode'] = 'normal';
        var layer_TurbinadeGasReaccinquimica_33 = new L.geoJson(json_TurbinadeGasReaccinquimica_33, {
            attribution: '',
            interactive: true,
            dataVar: 'json_TurbinadeGasReaccinquimica_33',
            layerName: 'layer_TurbinadeGasReaccinquimica_33',
            pane: 'pane_TurbinadeGasReaccinquimica_33',
            onEachFeature: pop_TurbinadeGasReaccinquimica_33,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_TurbinadeGasReaccinquimica_33_0(feature));
            },
        });
        bounds_group.addLayer(layer_TurbinadeGasReaccinquimica_33);
        function pop_TurbinadeGasGas_34(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_TurbinadeGasGas_34_0() {
            return {
                pane: 'pane_TurbinadeGasGas_34',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(0,182,111,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_TurbinadeGasGas_34');
        map.getPane('pane_TurbinadeGasGas_34').style.zIndex = 434;
        map.getPane('pane_TurbinadeGasGas_34').style['mix-blend-mode'] = 'normal';
        var layer_TurbinadeGasGas_34 = new L.geoJson(json_TurbinadeGasGas_34, {
            attribution: '',
            interactive: true,
            dataVar: 'json_TurbinadeGasGas_34',
            layerName: 'layer_TurbinadeGasGas_34',
            pane: 'pane_TurbinadeGasGas_34',
            onEachFeature: pop_TurbinadeGasGas_34,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_TurbinadeGasGas_34_0(feature));
            },
        });
        bounds_group.addLayer(layer_TurbinadeGasGas_34);
        function pop_Turbinashidraulicas_35(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Turbinashidraulicas_35_0() {
            return {
                pane: 'pane_Turbinashidraulicas_35',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(54,167,247,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_Turbinashidraulicas_35');
        map.getPane('pane_Turbinashidraulicas_35').style.zIndex = 435;
        map.getPane('pane_Turbinashidraulicas_35').style['mix-blend-mode'] = 'normal';
        var layer_Turbinashidraulicas_35 = new L.geoJson(json_Turbinashidraulicas_35, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Turbinashidraulicas_35',
            layerName: 'layer_Turbinashidraulicas_35',
            pane: 'pane_Turbinashidraulicas_35',
            onEachFeature: pop_Turbinashidraulicas_35,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_Turbinashidraulicas_35_0(feature));
            },
        });
        bounds_group.addLayer(layer_Turbinashidraulicas_35);
        function pop_Fotovoltaicas_36(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Fotovoltaicas_36_0() {
            return {
                pane: 'pane_Fotovoltaicas_36',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,248,45,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_Fotovoltaicas_36');
        map.getPane('pane_Fotovoltaicas_36').style.zIndex = 436;
        map.getPane('pane_Fotovoltaicas_36').style['mix-blend-mode'] = 'normal';
        var layer_Fotovoltaicas_36 = new L.geoJson(json_Fotovoltaicas_36, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Fotovoltaicas_36',
            layerName: 'layer_Fotovoltaicas_36',
            pane: 'pane_Fotovoltaicas_36',
            onEachFeature: pop_Fotovoltaicas_36,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_Fotovoltaicas_36_0(feature));
            },
        });
        bounds_group.addLayer(layer_Fotovoltaicas_36);
        function pop_CombustininternaDiesel_37(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_CombustininternaDiesel_37_0() {
            return {
                pane: 'pane_CombustininternaDiesel_37',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(196,60,57,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_CombustininternaDiesel_37');
        map.getPane('pane_CombustininternaDiesel_37').style.zIndex = 437;
        map.getPane('pane_CombustininternaDiesel_37').style['mix-blend-mode'] = 'normal';
        var layer_CombustininternaDiesel_37 = new L.geoJson(json_CombustininternaDiesel_37, {
            attribution: '',
            interactive: true,
            dataVar: 'json_CombustininternaDiesel_37',
            layerName: 'layer_CombustininternaDiesel_37',
            pane: 'pane_CombustininternaDiesel_37',
            onEachFeature: pop_CombustininternaDiesel_37,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_CombustininternaDiesel_37_0(feature));
            },
        });
        bounds_group.addLayer(layer_CombustininternaDiesel_37);
        function pop_Combustininternabiomasa_38(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2"><strong>Número de</strong><br />' + (feature.properties['Número de'] !== null ? autolinker.link(feature.properties['Número de'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Num</th>\
                        <td>' + (feature.properties['Num'] !== null ? autolinker.link(feature.properties['Num'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Permisiona</th>\
                        <td>' + (feature.properties['Permisiona'] !== null ? autolinker.link(feature.properties['Permisiona'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Modalidad</th>\
                        <td>' + (feature.properties['Modalidad'] !== null ? autolinker.link(feature.properties['Modalidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de O</th>\
                        <td>' + (feature.properties['Fecha de O'] !== null ? autolinker.link(feature.properties['Fecha de O'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Capacidad</th>\
                        <td>' + (feature.properties['Capacidad'] !== null ? autolinker.link(feature.properties['Capacidad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Generació</th>\
                        <td>' + (feature.properties['Generació'] !== null ? autolinker.link(feature.properties['Generació'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Inversion</th>\
                        <td>' + (feature.properties['Inversion'] !== null ? autolinker.link(feature.properties['Inversion'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Fecha de E</th>\
                        <td>' + (feature.properties['Fecha de E'] !== null ? autolinker.link(feature.properties['Fecha de E'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Energétic</th>\
                        <td>' + (feature.properties['Energétic'] !== null ? autolinker.link(feature.properties['Energétic'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Actividad</th>\
                        <td>' + (feature.properties['Actividad'] !== null ? autolinker.link(feature.properties['Actividad'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tecnologí</th>\
                        <td>' + (feature.properties['Tecnologí'] !== null ? autolinker.link(feature.properties['Tecnologí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Estado Act</th>\
                        <td>' + (feature.properties['Estado Act'] !== null ? autolinker.link(feature.properties['Estado Act'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Ubicación</th>\
                        <td>' + (feature.properties['Ubicación'] !== null ? autolinker.link(feature.properties['Ubicación'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Dirección</th>\
                        <td>' + (feature.properties['Dirección'] !== null ? autolinker.link(feature.properties['Dirección'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Latitud</th>\
                        <td>' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Longitud</th>\
                        <td>' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">EmpresaLí</th>\
                        <td>' + (feature.properties['EmpresaLí'] !== null ? autolinker.link(feature.properties['EmpresaLí'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PaísDeOri</th>\
                        <td>' + (feature.properties['PaísDeOri'] !== null ? autolinker.link(feature.properties['PaísDeOri'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Subasta</th>\
                        <td>' + (feature.properties['Subasta'] !== null ? autolinker.link(feature.properties['Subasta'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Tipo</th>\
                        <td>' + (feature.properties['Tipo'] !== null ? autolinker.link(feature.properties['Tipo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Uso</th>\
                        <td>' + (feature.properties['Uso'] !== null ? autolinker.link(feature.properties['Uso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_Combustininternabiomasa_38_0() {
            return {
                pane: 'pane_Combustininternabiomasa_38',
                shape: 'triangle',
                radius: 4.8,
                opacity: 1,
                color: 'rgba(35,35,35,0.9019607843137255)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(213,180,60,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_Combustininternabiomasa_38');
        map.getPane('pane_Combustininternabiomasa_38').style.zIndex = 438;
        map.getPane('pane_Combustininternabiomasa_38').style['mix-blend-mode'] = 'normal';
        var layer_Combustininternabiomasa_38 = new L.geoJson(json_Combustininternabiomasa_38, {
            attribution: '',
            interactive: true,
            dataVar: 'json_Combustininternabiomasa_38',
            layerName: 'layer_Combustininternabiomasa_38',
            pane: 'pane_Combustininternabiomasa_38',
            onEachFeature: pop_Combustininternabiomasa_38,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.shapeMarker(latlng, style_Combustininternabiomasa_38_0(feature));
            },
        });
        bounds_group.addLayer(layer_Combustininternabiomasa_38);
        function pop_BusquedaGeneral_39(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Número de Permiso'] !== null ? autolinker.link(feature.properties['Número de Permiso'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Latitud'] !== null ? autolinker.link(feature.properties['Latitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td colspan="2">' + (feature.properties['Longitud'] !== null ? autolinker.link(feature.properties['Longitud'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_BusquedaGeneral_39_0() {
            return {
                pane: 'pane_BusquedaGeneral_39',
                radius: 5.55112e-16,
                stroke: false,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(183,72,75,0.0)',
                interactive: true,
            }
        }
        map.createPane('pane_BusquedaGeneral_39');
        map.getPane('pane_BusquedaGeneral_39').style.zIndex = 439;
        map.getPane('pane_BusquedaGeneral_39').style['mix-blend-mode'] = 'normal';
        var layer_BusquedaGeneral_39 = new L.geoJson(json_BusquedaGeneral_39, {
            attribution: '',
            interactive: true,
            dataVar: 'json_BusquedaGeneral_39',
            layerName: 'layer_BusquedaGeneral_39',
            pane: 'pane_BusquedaGeneral_39',
            onEachFeature: pop_BusquedaGeneral_39,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.circleMarker(latlng, style_BusquedaGeneral_39_0(feature));
            },
        });
        bounds_group.addLayer(layer_BusquedaGeneral_39);
        var osmGeocoder = new L.Control.Geocoder({
            collapsed: true,
            position: 'topleft',
            text: 'Search',
            title: 'Testing'
        }).addTo(map);
        document.getElementsByClassName('leaflet-control-geocoder-icon')[0]
        .className += ' fa fa-search';
        document.getElementsByClassName('leaflet-control-geocoder-icon')[0]
        .title += 'Search for a place';
        var baseMaps = {"Mapa google": layer_Mapagoogle_1,"satelite google <hr/> <center> <strong> Electricidad <strong/> <center/> ": layer_satelitegoogle_0,};
	  var Maps = {'<img src="/Mapas/Públicos/SEM/legend/Combustininternabiomasa_38.png" /> Combustión interna (biomasa)': layer_Combustininternabiomasa_38,'<img src="/Mapas/Públicos/SEM/legend/CombustininternaDiesel_37.png" /> Combustión interna (Diesel)': layer_CombustininternaDiesel_37,'<img src="/Mapas/Públicos/SEM/legend/Fotovoltaicas_36.png" /> Fotovoltaicas': layer_Fotovoltaicas_36,'<img src="/Mapas/Públicos/SEM/legend/Turbinashidraulicas_35.png" /> Turbinas hidraulicas': layer_Turbinashidraulicas_35,'<img src="/Mapas/Públicos/SEM/legend/TurbinadeGasGas_34.png" /> Turbina de Gas (Gas)': layer_TurbinadeGasGas_34,'<img src="/Mapas/Públicos/SEM/legend/TurbinadeGasReaccinquimica_33.png" /> Turbina de Gas (Reacción quimica)': layer_TurbinadeGasReaccinquimica_33,'<img src="/Mapas/Públicos/SEM/legend/TurbinadeVaporBagazodecaa_32.png" /> Turbina de Vapor (Bagazo de caña)': layer_TurbinadeVaporBagazodecaa_32,'<img src="/Mapas/Públicos/SEM/legend/TurbinadeVaporBiomasa_31.png" /> Turbina de Vapor (Biomasa)': layer_TurbinadeVaporBiomasa_31,'<img src="/Mapas/Públicos/SEM/legend/TurbinadeVaporCombustoleo_30.png" /> Turbina de Vapor (Combustoleo)': layer_TurbinadeVaporCombustoleo_30,'<img src="/Mapas/Públicos/SEM/legend/TurbinadeVaporvapor_29.png" /> Turbina de Vapor (vapor)': layer_TurbinadeVaporvapor_29,'<img src="/Mapas/Públicos/SEM/legend/Geotermica_28.png" /> Geotermica': layer_Geotermica_28,'<img src="/Mapas/Públicos/SEM/legend/Carboelectrica_27.png" /> Carboelectrica': layer_Carboelectrica_27,'<img src="/Mapas/Públicos/SEM/legend/LechoFluidazo_26.png" /> Lecho Fluidazo': layer_LechoFluidazo_26,'<img src="/Mapas/Públicos/SEM/legend/Energiacinetica_25.png" /> Energia cinetica': layer_Energiacinetica_25,'<img src="/Mapas/Públicos/SEM/legend/Importacin_24.png" /> Importación': layer_Importacin_24,'<img src="/Mapas/Públicos/SEM/legend/GeneracinporResiduos_23.png" /> Generación por Residuos': layer_GeneracinporResiduos_23,'<img src="/Mapas/Públicos/SEM/legend/Nucleoelectrica_22.png" /> Nucleoelectrica': layer_Nucleoelectrica_22,'<img src="/Mapas/Públicos/SEM/legend/Eoloelectrica_21.png" /> Eoloelectrica <hr/> <center> <strong>  Gas LP <strong/> <center/>': layer_Eoloelectrica_21,

'<img src="/Mapas/Públicos/SEM/legend/AlmacenamientoGasLP_20.png" /> Almacenamiento Gas LP': layer_AlmacenamientoGasLP_20,'<img src="/Mapas/Públicos/SEM/legend/DuctosGasLP_19.png" /> Ductos Gas LP': layer_DuctosGasLP_19,'<img src="/Mapas/Públicos/SEM/legend/DistribucinGasLP_18.png" /> Distribución Gas LP': layer_DistribucinGasLP_18,'<img src="/Mapas/Públicos/SEM/legend/ExpendiosGasLP_17.png" /> Expendios Gas LP <hr/> <center> <strong>  Petroliferos <strong/> <center/>': layer_ExpendiosGasLP_17,

'<img src="/Mapas/Públicos/SEM/legend/TerminaldeAlmacenamiento_16.png" /> Terminal de Almacenamiento': layer_TerminaldeAlmacenamiento_16,'<img src="/Mapas/Públicos/SEM/legend/AlmacenamientoPetroliferos_15.png" /> Almacenamiento': layer_AlmacenamientoPetroliferos_15,'<img src="/Mapas/Públicos/SEM/legend/AlmacenamientoaerodromosPetroliferos_14.png" /> Almacenamiento aerodromos': layer_AlmacenamientoaerodromosPetroliferos_14,'<img src="/Mapas/Públicos/SEM/legend/DuctosPetroliferos_13.png" /> Ductos': layer_DuctosPetroliferos_13,'<img src="/Mapas/Públicos/SEM/legend/TransportedistintoaductoPetroliferos_12.png" /> Transporte distinto a ductos': layer_TransportedistintoaductoPetroliferos_12,'<img src="/Mapas/Públicos/SEM/legend/ComercializacinPetroliferos_11.png" /> Comercialización': layer_ComercializacinPetroliferos_11,'<img src="/Mapas/Públicos/SEM/legend/ExpendiosPetroliferos_10.png" /> Expendios': layer_ExpendiosPetroliferos_10,'<img src="/Mapas/Públicos/SEM/legend/ExpendiosaerodromosPetroliferos_9.png" /> Expendios aerodromos <hr/> <center> <strong>  Gas Natural <strong/> <center/> ': layer_ExpendiosaerodromosPetroliferos_9,

'<img src="/Mapas/Públicos/SEM/legend/ComplejosProcesadoresdeGas_8.png" /> Complejos Procesadores': layer_ComplejosProcesadoresdeGas_8,'<img src="/Mapas/Públicos/SEM/legend/PuntosdeInternacion_7.png" /> Puntos de Internacion': layer_PuntosdeInternacion_7,'<img src="/Mapas/Públicos/SEM/legend/CentralesdeCompresion_6.png" /> Centrales de Compresión': layer_CentralesdeCompresion_6,'<img src="/Mapas/Públicos/SEM/legend/DuctosdeImportacion_5.png" /> Ductos de Importacion': layer_DuctosdeImportacion_5,'<img src="/Mapas/Públicos/SEM/legend/DuctosintegradosaSISTRANGAS_4.png" /> Ductos integrados a SISTRANGAS': layer_DuctosintegradosaSISTRANGAS_4,'<img src="/Mapas/Públicos/SEM/legend/DuctosnointegradosaSISTRANGAS_3.png" /> Ductos no integrados a SISTRANGAS': layer_DuctosnointegradosaSISTRANGAS_3,'<img src="/Mapas/Públicos/SEM/legend/EstacionesdeservicioGN_2.png" /> Estaciones de servicio': layer_EstacionesdeservicioGN_2,};


        L.control.layers(baseMaps,Maps).addTo(map);

	  L.control.scale({position: 'bottomleft', maxWidth: 100, metric: true, imperial: false, updateWhenIdle: false}).addTo(map);
        setBounds();
        map.addControl(new L.Control.Search({
            layer: layer_BusquedaGeneral_39,
            initial: false,
            hideMarkerOnCollapse: true,
            propertyName: 'Número de Permiso'}));
        document.getElementsByClassName('search-button')[0].className +=
         ' fa fa-binoculars';




    map.on('click', function (e) {
        let lat = e.latlng.lat.toPrecision(8);
        let lon = e.latlng.lng.toPrecision(8);
        const point = L.marker([lat, lon]).addTo(map)
            .bindPopup('<a href="http://maps.google.com/maps?q=&layer=c&cbll=' + lat + ',' + lon + '&cbp=11,0,0,0,0" target="blank"><b> Google Street View </b></a>').openPopup();
    })

            </script>

<script>
    // Crea un objeto de mapa de LeafletJS en el contenedor "map"
    var map = L.map("map").setView([23.6345, -102.5528], 5);

    // Agrega una capa de OpenStreetMap al mapa
    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        attribution: "Map data &copy; <a href='https://www.openstreetmap.org/'>OpenStreetMap</a> contributors",
        maxZoom: 18,
    }).addTo(map);


</script>

<script>
    // Detecta el cambio de selección en el menú de estados
    document.getElementById("estado").addEventListener("change", function () {
        // Obtiene el valor seleccionado del menú de estados
        var estado = document.getElementById("estado").value;

               // Muestra el estado seleccionado en el mapa
        switch (estado) {
            case "ags":
                map.setView([22.025278, -102.372778], 9);
                break;
            case "bc":
                map.setView([30.391389, -115.291389], 7);
                break;
            case "bcs":
                map.setView([26.044444, -112.399722], 7);
                break;
            case "camp":
                map.setView([18.938333, -90.764722], 7);
                break;
            case "coah":
                map.setView([27.158056, -101.719444], 7);
                break;
            case "col":
                map.setView([19.101944, -103.014722], 9);
                break;
            case "chis":
                map.setView([16.753056, -92.6375], 7);
                break;
            case "chih":
                map.setView([28.673611, -106.102222], 7);
                break;
            case "cdmx":
                map.setView([19.432778, -99.133333], 10);
                break;
            case "dgo":
                map.setView([24.865278, -104.902222], 7);
                break;
            case "gto":
                map.setView([20.875, -101.478611], 8);
                break;
            case "gro":
                map.setView([17.814722, -100.353056], 8);
                break;
            case "hgo":
                map.setView([20.5325, -98.870556], 8);
                break;
            case "jal":
                map.setView([20.673611, -103.343333], 8);
                break;
            case "mex":
                map.setView([19.483611, -99.689722], 8);
                break;
            case "mich":
                map.setView([19.699722, -101.191389], 8);
                break;
            case "mor":
                map.setView([18.858611, -99.223611], 9);
                break;
            case "nay":
                map.setView([21.799444, -105.220833], 8);
                break;
            case "nl":
                map.setView([25.649167, -100.443611], 9);
                break;
            case "oax":
                map.setView([16.895833, -96.806667], 8);
                break;
            case "pue":
                map.setView([19.051389, -98.193889], 8);
                break;
            case "qro":
                map.setView([20.854722, -99.847222], 9);
                break;
            case "qroo":
                map.setView([19.642778, -87.072222], 8);
                break;
            case "slp":
                map.setView([22.156944, -100.985556], 8);
                break;
            case "sin":
                map.setView([24.288611, -107.366944], 8);
                break;
            case "son":
                map.setView([29.089444, -110.961667], 7);
                break;
            case "tab":
                map.setView([17.980000, -92.930000], 8);
                break;
            case "tamps":

                map.setView([24.014167, -98.844444], 7);
                break;
            case "tlax":
                map.setView([19.312222, -98.239722], 10);
                break;
            case "ver":
                map.setView([19.546389, -96.914167], 8);
                break;
            case "yuc":
                map.setView([20.891944, -89.528611], 8);
                break;
            case "zac":
                map.setView([22.770833, -102.583611], 8);
                break;
            default:
                map.setView([23.634501, -102.552784], 5);
                break;
        }
    });

</script>

