@model HomeViewModel
@using NSIE.Models
@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Sistema Nacional de Información Energética (SNIEr)";
    var perfilJson = HttpContextAccessor.HttpContext.Session.GetString("PerfilUsuario");
    var perfilUsuario = JsonConvert.DeserializeObject<PerfilUsuario>(perfilJson);
    ViewData["NombreUsuario"] = perfilUsuario.Nombre;
    ViewData["RolUsuario"] = perfilUsuario.Rol;
    ViewData["IDUsuario"] = perfilUsuario.IdUsuario;

    // Secciones que tienen al menos un módulo visible para el rol del usuario
    var seccionesVisibles = Model.Secciones
    .Where(s => s.Modulos.Any(m =>
    string.IsNullOrEmpty(m.Roles) || m.Roles.Split(',').Contains(perfilUsuario.Rol)))
    .ToList();
}

<!-- Título principal -->
<div class="text-center">
    <h3 class="cp-section cp-grouping-section">
        <img src="~/img/iconos/sistema.png" alt="Icono personalizado" class="iconomenu">
        @ViewData["Title"]
    </h3>
</div>

<div class="container ps-5 pe-5">
    <!-- Carrusel de secciones -->
    <div class="d-flex align-items-center mb-3">
        <button class="btn btn-outline-secondary prev-section me-2" type="button">
            <i class="fas fa-chevron-left"></i>
        </button>
        <div class="sections-wrapper flex-grow-1 d-flex overflow-auto">
            @for (int i = 0; i < seccionesVisibles.Count; i++)
            {
                var seccion = seccionesVisibles[i];
                var clase = i == 0 ? "section-pill me-2 active" : "section-pill me-2";

                <div class="@clase" data-section="@seccion.Titulo.Replace(" ", "-")">
                    @seccion.Titulo
                </div>
            }
        </div>
        <button class="btn btn-outline-secondary next-section ms-2" type="button">
            <i class="fas fa-chevron-right"></i>
        </button>
    </div>
</div>

<div class="container prev-section ps-5 pe-5">


    <!-- Título de sección activa -->
    <div class="section-title h4 text-center mb-4"></div>

    <!-- Contenido de secciones -->
    @for (int i = 0; i < seccionesVisibles.Count; i++)
    {
        var seccion = seccionesVisibles[i];
        var clase = i == 0 ? "section-content mb-5 active" : "section-content mb-5";

        <div class="@clase" data-section="@seccion.Titulo.Replace(" ", "-")">
            <div class="section-wrapper my-4">
                <!-- Info de la sección -->
                <div class="alert alert-success mt-2" role="alert">
                    <div class="section-info">
                        <div>
                            <strong>¿Qué hace?</strong>
                            @seccion.Descripcion
                            <i class="fas fa-info-circle info-icon" data-bs-toggle="tooltip" data-bs-placement="right"
                                title="@seccion.FundamentoLegal" role="img" aria-label="Información adicional" tabindex="0">
                            </i>
                        </div>
                    </div>
                    <div class="mt-2">
                        <strong>Objetivo:</strong> @seccion.Objetivo
                        <i class="fas fa-question-circle info-icon" data-bs-toggle="tooltip" data-bs-placement="top"
                            title="Responsable: @seccion.ResponsableNormativo">
                        </i>
                    </div>
                    <div class="mt-2">
                        <strong>Guía:</strong> @seccion.Ayuda
                        <i class="fas fa-lightbulb info-icon" data-bs-toggle="tooltip" data-bs-placement="left"
                            title="Público objetivo: @seccion.PublicoObjetivo">
                        </i>
                    </div>
                </div>

                <!-- Tarjetas de módulos -->
                <div class="cards-scroll-container">
                    <div class="cards-wrapper d-flex flex-row overflow-auto">
                        @foreach (var mod in seccion.Modulos
                                            .Where(m => string.IsNullOrEmpty(m.Roles) || m.Roles.Split(',').Contains(perfilUsuario.Rol)))
                        {
<div class="scroll-card me-3">
    <div class="card h-100 shadow-sm border-0 rounded-4 transition-fast module-card">
        <div class="card-body text-center d-flex flex-column justify-content-between p-4">
            <img src="~/img/@mod.Img" alt="@mod.Title" class="iconomenu mb-3" style="height: 60px;" />
            
            <h5 class="fw-semibold">
                @mod.Title
                <i class="fas fa-info-circle info-icon" data-bs-toggle="tooltip"
                    data-bs-placement="top" title="@mod.AyudaVista"></i>
            </h5>

<p class="text-muted small">
    @mod.Desc
</p>

<div class="d-flex justify-content-center align-items-center gap-3 mb-3">
    <span class="d-flex align-items-center gap-1 text-dark">
        <i class="fas fa-user-shield info-icon-lg" data-bs-toggle="tooltip"
           data-bs-placement="top" title="Roles: @mod.NombresRoles"></i>
        <span class="d-none d-md-inline small">Roles</span>
    </span>
    <span class="d-flex align-items-center gap-1 text-dark">
        <i class="fas fa-clipboard-list info-icon-lg" data-bs-toggle="tooltip"
           data-bs-placement="top" title="Elementos UI: @mod.ElementosUI"></i>
        <span class="d-none d-md-inline small">UI</span>
    </span>
</div>


            <a asp-controller="@mod.Controller" asp-action="@mod.Action"
                class="btn btn-snie w-100 rounded-pill mt-auto">@mod.Btn</a>
        </div>
    </div>
</div>

                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<style>
    /* Estilos para tooltips personalizados */
    .custom-tooltip {
        cursor: help;
    }

    .info-icon {
        color: #17a2b8;
        margin-left: 5px;
        font-size: 14px;
    }

    .section-info {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .module-info {
        position: relative;
    }

    .help-text {
        display: none;
        position: absolute;
        background: #fff;
        border: 1px solid #ddd;
        padding: 10px;
        border-radius: 4px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        max-width: 300px;
    }
    .module-card {
    transition: all 0.3s ease;
    background: #f9f9f9;
    border-radius: 1rem;
    box-shadow: 0 2px 10px rgba(0,0,0,0.05);
}

.module-card:hover {
    transform: translateY(-6px);
    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.15);
    background-color: #ffffff;
}

.iconomenu {
    max-height: 60px;
    object-fit: contain;
}

.btn-snie {
    background-color: var(--primary, #007bff);
    color: white;
    transition: all 0.3s ease;
}

.btn-snie:hover {
    background-color: #0056b3;
    color: white;
}

.transition-fast {
    transition: all 0.3s ease-in-out;
}

</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Inicializar todos los tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });

        // Opcional: Destruir tooltips al cambiar de sección
        document.querySelectorAll('.section-pill').forEach(function (pill) {
            pill.addEventListener('click', function () {
                tooltipList.forEach(function (tooltip) {
                    tooltip.hide();
                });
            });
        });
    });
</script>